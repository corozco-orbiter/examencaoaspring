{"remainingRequest":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"DataTable.vue","sourceRoot":"node_modules/primevue/components/datatable","sourcesContent":["<template>\n    <div :class=\"containerClass\">\n        <slot></slot>\n        <div class=\"p-datatable-loading\" v-if=\"loading\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\"></div>\n            <div class=\"p-datatable-loading-content\">\n                <i :class=\"loadingIconClass\"></i>\n            </div>\n        </div>\n        <div class=\"p-datatable-header\" v-if=\"$scopedSlots.header\">\n            <slot name=\"header\"></slot>\n        </div>\n        <DTPaginator v-if=\"paginatorTop\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-top\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-wrapper\" v-if=\"!scrollable\">\n            <table ref=\"table\" role=\"grid\">\n                <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"columns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                <DTTableBody :value=\"dataToRender\" :columns=\"columns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                    :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                    :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                    :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                    @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                    @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                    @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                    @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                    @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"columns\" />\n            </table>\n        </div>\n        <div class=\"p-datatable-scrollable-wrapper\" v-else>\n            <DTScrollableView v-if=\"hasFrozenColumns\" :scrollHeight=\"scrollHeight\" :columns=\"frozenColumns\" :frozenWidth=\"frozenWidth\" :frozen=\"true\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"frozenHeaderColumnGroup\" :columns=\"frozenColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"frozenColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"frozenColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"frozenFooterColumnGroup\" :columns=\"frozenColumns\" />\n                </template>\n            </DTScrollableView>\n            <DTScrollableView :scrollHeight=\"scrollHeight\" :columns=\"scrollableColumns\" :frozenWidth=\"frozenWidth\" :rows=\"rows\"\n                :virtualScroll=\"virtualScroll\" :virtualRowHeight=\"virtualRowHeight\" :totalRecords=\"totalRecordsLength\" @virtual-scroll=\"onVirtualScroll\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"scrollableColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"scrollableColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody  v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"scrollableColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"scrollableColumns\" />\n                </template>\n            </DTScrollableView>\n        </div>\n        <DTPaginator v-if=\"paginatorBottom\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-bottom\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-footer\" v-if=\"$scopedSlots.footer\">\n            <slot name=\"footer\"></slot>\n        </div>\n        <div ref=\"resizeHelper\" class=\"p-column-resizer-helper p-highlight\" style=\"display: none\"></div>\n        <span ref=\"reorderIndicatorUp\" class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n        <span ref=\"reorderIndicatorDown\" class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n    </div>\n</template>\n\n<script>\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport DomHandler from '../utils/DomHandler';\nimport Paginator from '../paginator/Paginator';\nimport ScrollableView from './ScrollableView.vue';\nimport TableHeader from './TableHeader.vue';\nimport TableBody from './TableBody.vue';\nimport TableFooter from './TableFooter.vue';\n\nexport default {\n    props: {\n        value: {\n            type: Array,\n            default: null\n        },\n        dataKey: {\n            type: String,\n            default: null\n        },\n        rows: {\n            type: Number,\n            default: 0\n        },\n        first: {\n            type: Number,\n            default: 0\n        },\n        totalRecords: {\n            type: Number,\n            default: 0\n        },\n        paginator: {\n            type: Boolean,\n            default: false\n        },\n        paginatorPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        alwaysShowPaginator: {\n            type: Boolean,\n            default: true\n        },\n        paginatorTemplate: {\n            type: String,\n            default: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n        },\n        pageLinkSize: {\n            type: Number,\n            default: 5\n        },\n        rowsPerPageOptions: {\n            type: Array,\n            default: null\n        },\n        currentPageReportTemplate: {\n            type: String,\n            default: '({currentPage} of {totalPages})'\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadingIcon: {\n            type: String,\n            default: 'pi pi-spinner'\n        },\n        sortField: {\n            type: String,\n            default: null\n        },\n        sortOrder: {\n            type: Number,\n            default: null\n        },\n        defaultSortOrder: {\n            type: Number,\n            default: 1\n        },\n        multiSortMeta: {\n            type: Array,\n            default: null\n        },\n        sortMode: {\n            type: String,\n            default: 'single'\n        },\n        removableSort: {\n            type: Boolean,\n            default: false\n        },\n        filters: {\n            type: Object,\n            default: null\n        },\n        filterLocale: {\n            type: String,\n            default: undefined\n        },\n        selection: {\n            type: [Array,Object],\n            default: null\n        },\n        selectionMode: {\n            type: String,\n            default: null\n        },\n        compareSelectionBy: {\n            type: String,\n            default: 'deepEquals'\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: true\n        },\n        contextMenu: {\n            type: Boolean,\n            default: false\n        },\n        contextMenuSelection: {\n            type: Object,\n            default: null\n        },\n        rowHover: {\n            type: Boolean,\n            default: false\n        },\n        csvSeparator: {\n            type: String,\n            default: ','\n        },\n        exportFilename: {\n            type: String,\n            default: 'download'\n        },\n        autoLayout: {\n            type: Boolean,\n            default: false\n        },\n        resizableColumns: {\n            type: Boolean,\n            default: false\n        },\n        columnResizeMode: {\n            type: String,\n            default: 'fit'\n        },\n        reorderableColumns: {\n            type: Boolean,\n            default: false\n        },\n        expandedRows: {\n            type: Array,\n            default: null\n        },\n        expandedRowIcon: {\n            type: String,\n            default: 'pi-chevron-down'\n        },\n        collapsedRowIcon: {\n            type: String,\n            default: 'pi-chevron-right'\n        },\n        rowGroupMode: {\n            type: String,\n            default: null\n        },\n        groupRowsBy: {\n            type: [Array,String],\n            default: null\n        },\n        expandableRowGroups: {\n            type: Boolean,\n            default: false\n        },\n        expandedRowGroups: {\n            type: Array,\n            default: null\n        },\n        stateStorage: {\n            type: String,\n            default: 'session'\n        },\n        stateKey: {\n            type: String,\n            default: null\n        },\n        editMode: {\n            type: String,\n            default: null\n        },\n        editingRows: {\n            type: Array,\n            default: null\n        },\n        rowClass: {\n            type: null,\n            default: null\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        scrollHeight: {\n            type: String,\n            default: null\n        },\n        frozenValue: {\n            type: Array,\n            default: null\n        },\n        frozenWidth: {\n            type: String,\n            default: null\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        virtualRowHeight: {\n            type: Number,\n            default: 28\n        },\n        virtualScrollDelay: {\n            type: Number,\n            default: 150\n        }\n    },\n    data() {\n        return {\n            allChildren: null,\n            d_first: this.first,\n            d_rows: this.rows,\n            d_sortField: this.sortField,\n            d_sortOrder: this.sortOrder,\n            d_multiSortMeta: this.multiSortMeta ? [...this.multiSortMeta] : [],\n            d_selectionKeys: null,\n            d_expandedRowKeys: null,\n            d_columnOrder: null,\n            d_editingRowKeys: null\n        };\n    },\n    rowTouched: false,\n    anchorRowIndex: null,\n    rangeRowIndex: null,\n    documentColumnResizeListener: null,\n    documentColumnResizeEndListener: null,\n    lastResizeHelperX: null,\n    resizeColumnElement: null,\n    columnResizing: false,\n    colReorderIconWidth: null,\n    colReorderIconHeight: null,\n    draggedColumn: null,\n    draggedRowIndex: null,\n    droppedRowIndex: null,\n    rowDragging: null,\n    columnWidthsState: null,\n    tableWidthState: null,\n    columnWidthsRestored: false,\n    virtualScrollTimer: null,\n    watch: {\n        first(newValue) {\n            this.d_first = newValue;\n        },\n        rows(newValue) {\n            this.d_rows = newValue;\n        },\n        sortField(newValue) {\n            this.d_sortField = newValue;\n        },\n        sortOrder(newValue) {\n            this.d_sortOrder = newValue;\n        },\n        multiSortMeta(newValue) {\n            this.d_multiSortMeta = newValue;\n        },\n        selection(newValue) {\n            if (this.dataKey) {\n                this.updateSelectionKeys(newValue);\n            }\n        },\n        expandedRows(newValue) {\n            if (this.dataKey) {\n                this.updateExpandedRowKeys(newValue);\n            }\n        },\n        editingRows(newValue) {\n            if (this.dataKey) {\n                this.updateEditingRowKeys(newValue);\n            }\n        }\n    },\n    beforeMount() {\n        if (this.isStateful()) {\n            this.restoreState();\n        }\n    },\n    mounted() {\n        this.allChildren = this.$children;\n\n        if (this.reorderableColumns) {\n            let columnOrder = [];\n            for (let child of this.allChildren) {\n                if (child.$options._propKeys.indexOf('columnKey') !== -1) {\n                    columnOrder.push(child.columnKey||child.field);\n                }\n            }\n            this.d_columnOrder = columnOrder;\n        }\n    },\n    beforeDestroy() {\n        this.unbindColumnResizeEvents();\n    },\n    updated() {\n        if (this.isStateful()) {\n            this.saveState();\n\n            if (this.resizableColumns && !this.columnWidthsRestored) {\n                this.restoreColumnWidths();\n                this.columnWidthsRestored = true;\n            }\n        }\n    },\n    methods: {\n        onPage(event) {\n            this.d_first = event.first;\n            this.d_rows = event.rows;\n\n            let pageEvent = this.createLazyLoadEvent(event);\n            pageEvent.pageCount = event.pageCount;\n            pageEvent.page = event.page;\n\n            this.$emit('update:first', this.d_first);\n            this.$emit('update:rows', this.d_rows);\n            this.$emit('page', pageEvent);\n        },\n        onColumnHeaderClick(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (column.sortable) {\n                const targetNode = event.target;\n                const columnField = column.sortField || column.field;\n\n                if (DomHandler.hasClass(targetNode, 'p-sortable-column') || DomHandler.hasClass(targetNode, 'p-column-title')\n                    || DomHandler.hasClass(targetNode, 'p-sortable-column-icon') || DomHandler.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\n                    DomHandler.clearSelection();\n\n                    if (this.sortMode === 'single') {\n                        if (this.d_sortField === columnField) {\n                            if (this.removableSort && (this.d_sortOrder * -1 === this.defaultSortOrder)) {\n                                this.d_sortOrder = null;\n                                this.d_sortField = null;\n                            }\n                            else {\n                                this.d_sortOrder = this.d_sortOrder * -1;\n                            }\n                        }\n                        else {\n                            this.d_sortOrder = this.defaultSortOrder;\n                            this.d_sortField = columnField;\n                        }\n\n                        this.$emit('update:sortField', this.d_sortField);\n                        this.$emit('update:sortOrder', this.d_sortOrder);\n                        this.resetPage();\n                    }\n                    else if (this.sortMode === 'multiple') {\n                        let metaKey = event.metaKey || event.ctrlKey;\n                        if (!metaKey) {\n                            this.d_multiSortMeta =  this.d_multiSortMeta.filter(meta => meta.field === columnField);\n                        }\n\n                        this.addMultiSortField(columnField);\n                        this.$emit('update:multiSortMeta', this.d_multiSortMeta);\n                    }\n\n                    this.$emit('sort', this.createLazyLoadEvent(event));\n                }\n            }\n        },\n        sortSingle(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                let value1 = ObjectUtils.resolveFieldData(data1, this.d_sortField);\n                let value2 = ObjectUtils.resolveFieldData(data2, this.d_sortField);\n\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return (this.d_sortOrder * result);\n            });\n\n            return data;\n        },\n        sortMultiple(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                return this.multisortField(data1, data2, 0);\n            });\n\n            return data;\n        },\n        multisortField(data1, data2, index) {\n            const value1 = ObjectUtils.resolveFieldData(data1, this.d_multiSortMeta[index].field);\n            const value2 = ObjectUtils.resolveFieldData(data2, this.d_multiSortMeta[index].field);\n            let result = null;\n\n            if (typeof value1 === 'string' || value1 instanceof String) {\n                if (value1.localeCompare && (value1 !== value2)) {\n                    return (this.d_multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\n                }\n            }\n            else {\n                result = (value1 < value2) ? -1 : 1;\n            }\n\n            if (value1 === value2)  {\n                return (this.d_multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, index + 1)) : 0;\n            }\n\n            return (this.d_multiSortMeta[index].order * result);\n        },\n        addMultiSortField(field) {\n            let index =  this.d_multiSortMeta.findIndex(meta => meta.field === field);\n\n            if (index >= 0) {\n                if (this.removableSort && (this.d_multiSortMeta[index].order * -1 === this.defaultSortOrder))\n                    this.d_multiSortMeta.splice(index, 1);\n                else\n                    this.d_multiSortMeta[index] = {field: field, order: this.d_multiSortMeta[index].order * -1};\n            }\n            else {\n                this.d_multiSortMeta.push({field: field, order: this.defaultSortOrder});\n            }\n\n            this.d_multiSortMeta = [...this.d_multiSortMeta];\n        },\n        filter(data) {\n            let filteredValue = [];\n\n            for(let i = 0; i < data.length; i++) {\n                let localMatch = true;\n                let globalMatch = false;\n\n                for(let j = 0; j < this.columns.length; j++) {\n                    let col = this.columns[j];\n                    let columnField = col.filterField || col.field;\n\n                    //local\n                    if (Object.prototype.hasOwnProperty.call(this.filters, columnField)) {\n                        let filterValue = this.filters[columnField];\n                        let dataFieldValue = ObjectUtils.resolveFieldData(data[i], columnField);\n                        let filterConstraint = col.filterMatchMode === 'custom' ? col.filterFunction : FilterUtils[col.filterMatchMode];\n                        if (!filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n                            localMatch = false;\n                        }\n\n                        if (!localMatch) {\n                            break;\n                        }\n                    }\n\n                    if (!col.excludeGlobalFilter && this.hasGlobalFilter && !globalMatch) {\n                        globalMatch = FilterUtils.contains(ObjectUtils.resolveFieldData(data[i], columnField), this.filters['global'], this.filterLocale);\n                    }\n                }\n\n                let matches = localMatch;\n                if(this.hasGlobalFilter) {\n                    matches = localMatch && globalMatch;\n                }\n\n                if(matches) {\n                    filteredValue.push(data[i]);\n                }\n            }\n\n            if (filteredValue.length === data.length) {\n                filteredValue = data;\n            }\n\n            let filterEvent = this.createLazyLoadEvent(event);\n            filterEvent.filteredValue = filteredValue;\n            this.$emit('filter', filterEvent);\n\n            return filteredValue;\n        },\n        onRowClick(e) {\n            const event = e.originalEvent;\n            const target = event.target;\n            const targetNode = target.nodeName;\n            const parentNode = target.parentElement && target.parentElement.nodeName;\n\n            if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n                parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n                (DomHandler.hasClass(target, 'p-clickable'))) {\n                return;\n            }\n\n            this.$emit('row-click', e);\n\n            if (this.selectionMode) {\n                const rowData = e.data;\n                const rowIndex = e.index;\n\n                if (this.isMultipleSelectionMode() && event.shiftKey && this.anchorRowIndex != null) {\n                    DomHandler.clearSelection();\n                    this.rangeRowIndex = rowIndex;\n                    this.selectRange(event);\n                }\n                else {\n                    const selected = this.isSelected(rowData);\n                    const metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                    this.anchorRowIndex = rowIndex;\n                    this.rangeRowIndex = rowIndex;\n\n                    if (metaSelection) {\n                        let metaKey = event.metaKey || event.ctrlKey;\n\n                        if (selected && metaKey) {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', null);\n                            }\n                            else {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val,i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                        else {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', rowData);\n                            }\n                            else if (this.isMultipleSelectionMode()) {\n                                let _selection = metaKey ? (this.selection || []) : [];\n                                _selection = [..._selection, rowData];\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                    }\n                    else {\n                        if (this.selectionMode === 'single') {\n                            if (selected) {\n                                this.$emit('update:selection', null);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                this.$emit('update:selection', rowData);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                        else if (this.selectionMode === 'multiple') {\n                            if (selected) {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                const _selection = this.selection ? [...this.selection, rowData] : [rowData];\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.rowTouched = false;\n        },\n        onRowRightClick(event) {\n            DomHandler.clearSelection();\n            event.originalEvent.target.focus();\n\n            this.$emit('update:contextMenuSelection', event.data);\n            this.$emit('row-contextmenu', event);\n        },\n        onRowTouchEnd() {\n            this.rowTouched = true;\n        },\n        onRowKeyDown(e) {\n            const event = e.originalEvent;\n            const rowData = e.data;\n            const rowIndex = e.index;\n\n            if (this.selectionMode) {\n                const row = event.target;\n\n                switch (event.which) {\n                    //down arrow\n                    case 40:\n                        var nextRow = this.findNextSelectableRow(row);\n                        if (nextRow) {\n                            nextRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //up arrow\n                    case 38:\n                        var prevRow = this.findPrevSelectableRow(row);\n                        if (prevRow) {\n                            prevRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //enter\n                    case 13:\n                        this.onRowClick({originalEvent: event, data: rowData, index: rowIndex});\n                    break;\n\n                    default:\n                        //no op\n                    break;\n                }\n            }\n        },\n        findNextSelectableRow(row) {\n            let nextRow = row.nextElementSibling;\n            if (nextRow) {\n                if (DomHandler.hasClass(nextRow, 'p-datatable-row'))\n                    return nextRow;\n                else\n                    return this.findNextSelectableRow(nextRow);\n            }\n            else {\n                return null;\n            }\n        },\n        findPrevSelectableRow(row) {\n            let prevRow = row.previousElementSibling;\n            if (prevRow) {\n                if (DomHandler.hasClass(prevRow, 'p-datatable-row'))\n                    return prevRow;\n                else\n                    return this.findPrevSelectableRow(prevRow);\n            }\n            else {\n                return null;\n            }\n        },\n        toggleRowWithRadio(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                this.$emit('update:selection', null);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n            else {\n                this.$emit('update:selection', rowData);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n        },\n        toggleRowWithCheckbox(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                const selectionIndex = this.findIndexInSelection(rowData);\n                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                this.$emit('update:selection', _selection);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n            else {\n                let _selection = this.selection ? [...this.selection] : [];\n                _selection = [..._selection, rowData];\n                this.$emit('update:selection', _selection);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n        },\n        toggleRowsWithCheckbox(event) {\n            const processedData = this.processedData;\n            const checked = this.allRowsSelected;\n            const _selection = checked ? [] : (processedData ? [...processedData] : [...this.value]);\n            this.$emit('update:selection', _selection);\n\n            if (checked)\n                this.$emit('row-unselect-all', {originalEvent: event});\n            else\n                this.$emit('row-select-all', {originalEvent: event, data: _selection});\n        },\n        isSingleSelectionMode() {\n            return this.selectionMode === 'single';\n        },\n        isMultipleSelectionMode() {\n            return this.selectionMode === 'multiple';\n        },\n        isSelected(rowData) {\n            if (rowData && this.selection) {\n                if (this.dataKey) {\n                    return this.d_selectionKeys ? this.d_selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n                }\n                else {\n                    if (this.selection instanceof Array)\n                        return this.findIndexInSelection(rowData) > -1;\n                    else\n                        return this.equals(rowData, this.selection);\n                }\n            }\n\n            return false;\n        },\n        findIndexInSelection(rowData) {\n            return this.findIndex(rowData, this.selection);\n        },\n        findIndex(rowData, collection) {\n            let index = -1;\n            if (collection && collection.length) {\n                for (let i = 0; i < collection.length; i++) {\n                    if (this.equals(rowData, collection[i])) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n\n            return index;\n        },\n        updateSelectionKeys(selection) {\n            this.d_selectionKeys = {};\n            if (Array.isArray(selection)) {\n                for (let data of selection) {\n                    this.d_selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_selectionKeys[String(ObjectUtils.resolveFieldData(selection, this.dataKey))] = 1;\n            }\n        },\n        updateExpandedRowKeys(expandedRows) {\n            if (expandedRows && expandedRows.length) {\n                this.d_expandedRowKeys = {};\n                for (let data of expandedRows) {\n                    this.d_expandedRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_expandedRowKeys = null;\n            }\n        },\n        updateEditingRowKeys(editingRows) {\n            if (editingRows && editingRows.length) {\n                this.d_editingRowKeys = {};\n                for (let data of editingRows) {\n                    this.d_editingRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_editingRowKeys = null;\n            }\n        },\n        equals(data1, data2) {\n            return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n        },\n        selectRange(event) {\n            let rangeStart, rangeEnd;\n\n            if (this.rangeRowIndex > this.anchorRowIndex) {\n                rangeStart = this.anchorRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n            else if(this.rangeRowIndex < this.anchorRowIndex) {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.anchorRowIndex;\n            }\n            else {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n\n            if (this.lazy && this.paginator) {\n                rangeStart -= this.first;\n                rangeEnd -= this.first;\n            }\n\n            const value = this.processedData;\n            let _selection = [];\n            for(let i = rangeStart; i <= rangeEnd; i++) {\n                let rangeRowData = value[i];\n                _selection.push(rangeRowData);\n                this.$emit('row-select', {originalEvent: event, data: rangeRowData, type: 'row'});\n            }\n\n            this.$emit('update:selection', _selection);\n        },\n        exportCSV(options) {\n            let data = this.processedData;\n            let csv = '\\ufeff';\n\n            if (options && options.selectionOnly) {\n                data = this.selection || [];\n            }\n\n            //headers\n            for (let i = 0; i < this.columns.length; i++) {\n                let column = this.columns[i];\n                if (column.exportable !== false && column.field) {\n                    csv += '\"' + (column.header || column.field) + '\"';\n\n                    if (i < (this.columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n\n            //body\n            data.forEach(record => {\n                csv += '\\n';\n                for (let i = 0; i < this.columns.length; i++) {\n                    let column = this.columns[i];\n                    if (column.exportable !== false && column.field) {\n                        let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n                        if (cellData != null) {\n                            if (this.exportFunction) {\n                                cellData = this.exportFunction({\n                                    data: cellData,\n                                    field: column.field\n                                });\n                            }\n                            else\n                                cellData = String(cellData).replace(/\"/g, '\"\"');\n                        }\n                        else\n                            cellData = '';\n\n\n                        csv += '\"' + cellData + '\"';\n\n                        if (i < (this.columns.length - 1)) {\n                            csv += this.csvSeparator;\n                        }\n                    }\n                }\n            });\n\n            let blob = new Blob([csv], {\n                type: 'text/csv;charset=utf-8;'\n            });\n\n            if (window.navigator.msSaveOrOpenBlob) {\n                navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n            }\n            else {\n                let link = document.createElement(\"a\");\n                link.style.display = 'none';\n                document.body.appendChild(link);\n                if (link.download !== undefined) {\n                    link.setAttribute('href', URL.createObjectURL(blob));\n                    link.setAttribute('download', this.exportFilename + '.csv');\n                    link.click();\n                }\n                else {\n                    csv = 'data:text/csv;charset=utf-8,' + csv;\n                    window.open(encodeURI(csv));\n                }\n                document.body.removeChild(link);\n            }\n        },\n        resetPage() {\n            this.d_first = 0;\n            this.$emit('update:first', this.d_first);\n        },\n        onColumnResizeStart(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            this.resizeColumnElement = event.target.parentElement;\n            this.columnResizing = true;\n            this.lastResizeHelperX = (event.pageX - containerLeft + this.$el.scrollLeft);\n\n            this.bindColumnResizeEvents();\n        },\n        onColumnResize(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            DomHandler.addClass(this.$el, 'p-unselectable-text');\n            this.$refs.resizeHelper.style.height = this.$el.offsetHeight + 'px';\n            this.$refs.resizeHelper.style.top = 0 + 'px';\n            this.$refs.resizeHelper.style.left = (event.pageX - containerLeft + this.$el.scrollLeft) + 'px';\n\n            this.$refs.resizeHelper.style.display = 'block';\n        },\n        onColumnResizeEnd() {\n            let delta = this.$refs.resizeHelper.offsetLeft - this.lastResizeHelperX;\n            let columnWidth = this.resizeColumnElement.offsetWidth;\n            let newColumnWidth = columnWidth + delta;\n            let minWidth = this.resizeColumnElement.style.minWidth||15;\n\n            if (columnWidth + delta > parseInt(minWidth, 10)) {\n                if (this.columnResizeMode === 'fit') {\n                    let nextColumn = this.resizeColumnElement.nextElementSibling;\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n                    if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                        if(this.scrollable) {\n                            const scrollableView = this.findParentScrollableView(this.resizeColumnElement);\n                            const scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-body-table');\n                            const scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                            const scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                            const resizeColumnIndex = DomHandler.index(this.resizeColumnElement);\n\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                            if(nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n                else if (this.columnResizeMode === 'expand') {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(this.resizeColumnElement, newColumnWidth, delta);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.$refs.table.offsetWidth + delta + 'px';\n                        this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                    }\n                }\n\n                this.$emit('column-resize-end', {\n                    element: this.resizeColumnElement,\n                    delta: delta\n                });\n            }\n\n            this.$refs.resizeHelper.style.display = 'none';\n            this.resizeColumn = null;\n            DomHandler.removeClass(this.$el, 'p-unselectable-text');\n\n            this.unbindColumnResizeEvents();\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        },\n        resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n            if(table) {\n                let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n                if(colGroup) {\n                    let col = colGroup.children[resizeColumnIndex];\n                    let nextCol = col.nextElementSibling;\n                    col.style.width = newColumnWidth + 'px';\n\n                    if (nextCol && nextColumnWidth) {\n                        nextCol.style.width = nextColumnWidth + 'px';\n                    }\n                }\n                else {\n                    throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\n                }\n            }\n        },\n        bindColumnResizeEvents() {\n            if (!this.documentColumnResizeListener) {\n                this.documentColumnResizeListener = document.addEventListener('mousemove', () => {\n                    if(this.columnResizing) {\n                        this.onColumnResize(event);\n                    }\n                });\n            }\n\n            if (!this.documentColumnResizeEndListener) {\n                this.documentColumnResizeEndListener = document.addEventListener('mouseup', () => {\n                    if(this.columnResizing) {\n                        this.columnResizing = false;\n                        this.onColumnResizeEnd();\n                    }\n                });\n            }\n\n        },\n        unbindColumnResizeEvents() {\n            if (this.documentColumnResizeListener) {\n                document.removeEventListener('document', this.documentColumnResizeListener);\n                this.documentColumnResizeListener = null;\n            }\n\n            if (this.documentColumnResizeEndListener) {\n                document.removeEventListener('document', this.documentColumnResizeEndListener);\n                 this.documentColumnResizeEndListener = null;\n            }\n        },\n        onColumnHeaderMouseDown(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (this.reorderableColumns && column.reorderableColumn) {\n                if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n                    event.currentTarget.draggable = false;\n                else\n                    event.currentTarget.draggable = true;\n            }\n        },\n        onColumnHeaderDragStart(event) {\n            if (this.columnResizing) {\n                event.preventDefault();\n                return;\n            }\n\n            this.colReorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.$refs.reorderIndicatorUp);\n            this.colReorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.$refs.reorderIndicatorUp);\n\n            this.draggedColumn = this.findParentHeader(event.target);\n            event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\n        },\n        onColumnHeaderDragOver(event) {\n            let dropHeader = this.findParentHeader(event.target);\n            if(this.reorderableColumns && this.draggedColumn && dropHeader) {\n                event.preventDefault();\n                let containerOffset = DomHandler.getOffset(this.$el);\n                let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n                if (this.draggedColumn !== dropHeader) {\n                    let targetLeft =  dropHeaderOffset.left - containerOffset.left;\n                    let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                    this.$refs.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.colReorderIconHeight - 1) + 'px';\n                    this.$refs.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                    if(event.pageX > columnCenter) {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = 1;\n                    }\n                    else {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = -1;\n                    }\n\n                    this.$refs.reorderIndicatorUp.style.display = 'block';\n                    this.$refs.reorderIndicatorDown.style.display = 'block';\n                }\n            }\n        },\n        onColumnHeaderDragLeave(event) {\n            if(this.reorderableColumns && this.draggedColumn) {\n                event.preventDefault();\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n            }\n        },\n        onColumnHeaderDrop(event) {\n            event.preventDefault();\n            if (this.draggedColumn) {\n                let dragIndex = DomHandler.index(this.draggedColumn);\n                let dropIndex = DomHandler.index(this.findParentHeader(event.target));\n                let allowDrop = (dragIndex !== dropIndex);\n                if (allowDrop && ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dragIndex - dropIndex === 1 && this.dropPosition === 1))) {\n                    allowDrop = false;\n                }\n\n                if (allowDrop) {\n                    ObjectUtils.reorderArray(this.d_columnOrder, dragIndex, dropIndex);\n\n                    this.$emit('column-reorder', {\n                        originalEvent: event,\n                        dragIndex: dragIndex,\n                        dropIndex: dropIndex\n                    });\n                }\n\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n                this.draggedColumn.draggable = false;\n                this.draggedColumn = null;\n                this.dropPosition = null;\n            }\n        },\n        findParentHeader(element) {\n            if(element.nodeName === 'TH') {\n                return element;\n            }\n            else {\n                let parent = element.parentElement;\n                while(parent.nodeName !== 'TH') {\n                    parent = parent.parentElement;\n                    if (!parent) break;\n                }\n                return parent;\n            }\n        },\n        findParentScrollableView(column) {\n            if (column) {\n                let parent = column.parentElement;\n                while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n                    parent = parent.parentElement;\n                }\n\n                return parent;\n            }\n            else {\n                return null;\n            }\n        },\n        findColumnByKey(columns, key) {\n            if(columns && columns.length) {\n                for(let i = 0; i < columns.length; i++) {\n                    let child = columns[i];\n                    if(child.columnKey === key || child.field === key) {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        resizeScrollableTable(column, newColumnWidth, delta) {\n            const scrollableView = column ? this.findParentScrollableView(column) : this.$el;\n            const scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body');\n            const scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n            const scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n            const scrollableBodyTable = DomHandler.findSingle(scrollableBody, 'table.p-datatable-scrollable-body-table');\n            const scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n            const scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n\n            const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n            const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n            const isContainerInViewport = this.$el.offsetWidth >= parseFloat(scrollableBodyTableWidth);\n\n            let setWidth = (container, table, width, isContainerInViewport) => {\n                if (container && table) {\n                    container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\n                    table.style.width = width + 'px';\n                }\n            };\n\n            setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n            setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n            setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n            if (column) {\n                let resizeColumnIndex = DomHandler.index(column);\n\n                this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n            }\n        },\n        onRowMouseDown(event) {\n            if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n                event.currentTarget.draggable = true;\n            else\n                event.currentTarget.draggable = false;\n        },\n        onRowDragStart(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n            this.rowDragging = true;\n            this.draggedRowIndex = index;\n            event.dataTransfer.setData('text', 'b');    // For firefox\n        },\n        onRowDragOver(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n\n            if (this.rowDragging && this.draggedRowIndex !== index) {\n                let rowElement = event.currentTarget;\n                let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n                let pageY = event.pageY;\n                let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n                let prevRowElement = rowElement.previousElementSibling;\n\n                if (pageY < rowMidY) {\n                    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n\n                    this.droppedRowIndex = index;\n                    if (prevRowElement)\n                        DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                }\n                else {\n                    if (prevRowElement)\n                        DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n\n                    this.droppedRowIndex = index + 1;\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n                }\n\n                event.preventDefault();\n            }\n        },\n        onRowDragLeave(event) {\n            let rowElement = event.currentTarget;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (prevRowElement) {\n                DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n            }\n\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n        },\n        onRowDragEnd(event) {\n            this.rowDragging = false;\n            this.draggedRowIndex = null;\n            this.droppedRowIndex = null;\n            event.currentTarget.draggable = false;\n        },\n        onRowDrop(event) {\n            if (this.droppedRowIndex != null) {\n                let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n                let processedData = [...this.processedData];\n                ObjectUtils.reorderArray(processedData, this.draggedRowIndex, dropIndex);\n\n                this.$emit('row-reorder', {\n                    originalEvent: event,\n                    dragIndex: this.draggedRowIndex,\n                    dropIndex: dropIndex,\n                    value: processedData\n                });\n            }\n\n            //cleanup\n            this.onRowDragLeave(event);\n            this.onRowDragEnd(event);\n            event.preventDefault();\n        },\n        toggleRow(event) {\n            let rowData = event.data;\n            let expanded;\n            let expandedRowIndex;\n            let _expandedRows = this.expandedRows ? [...this.expandedRows] : [];\n\n            if (this.dataKey) {\n                expanded = this.d_expandedRowKeys ? this.d_expandedRowKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n            }\n            else {\n                expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                expanded = expandedRowIndex > -1;\n            }\n\n            if (expanded) {\n                if (expandedRowIndex == null) {\n                    expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                }\n                _expandedRows.splice(expandedRowIndex, 1);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-collapse', event);\n            }\n            else {\n                _expandedRows.push(rowData);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-expand', event);\n            }\n        },\n        toggleRowGroup(e) {\n            const event = e.originalEvent;\n            const data = e.data;\n            const groupFieldValue = ObjectUtils.resolveFieldData(data, this.groupRowsBy);\n            let _expandedRowGroups = this.expandedRowGroups ? [...this.expandedRowGroups] : [];\n\n            if (this.isRowGroupExpanded(data)) {\n                _expandedRowGroups = _expandedRowGroups.filter(group => group !== groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-collapse', {originalEvent: event, data: groupFieldValue});\n            }\n            else {\n                _expandedRowGroups.push(groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-expand', {originalEvent: event, data: groupFieldValue});\n            }\n        },\n        isRowGroupExpanded(rowData) {\n            if (this.expandableRowGroups && this.expandedRowGroups) {\n                let groupFieldValue = ObjectUtils.resolveFieldData(rowData, this.groupRowsBy);\n                return this.expandedRowGroups.indexOf(groupFieldValue) > -1;\n            }\n            return false;\n        },\n        isStateful() {\n            return this.stateKey != null;\n        },\n        getStorage() {\n            switch(this.stateStorage) {\n                case 'local':\n                    return window.localStorage;\n\n                case 'session':\n                    return window.sessionStorage;\n\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        },\n        saveState() {\n            const storage = this.getStorage();\n            let state = {};\n\n            if (this.paginator) {\n                state.first = this.d_first;\n                state.rows = this.d_rows;\n            }\n\n            if (this.d_sortField) {\n                state.sortField = this.d_sortField;\n                state.sortOrder = this.d_sortOrder;\n            }\n\n            if (this.d_multiSortMeta) {\n                state.multiSortMeta = this.d_multiSortMeta;\n            }\n\n            if (this.hasFilters) {\n                state.filters = this.filters;\n            }\n\n            if (this.resizableColumns) {\n                this.saveColumnWidths(state);\n            }\n\n            if (this.reorderableColumns) {\n                state.columnOrder = this.d_columnOrder;\n            }\n\n            if (this.expandedRows) {\n                state.expandedRows = this.expandedRows;\n                state.expandedRowKeys = this.d_expandedRowKeys;\n            }\n\n            if (this.expandedRowGroups) {\n                state.expandedRowGroups = this.expandedRowGroups;\n            }\n\n            if (this.selection) {\n                state.selection = this.selection;\n                state.selectionKeys = this.d_selectionKeys;\n            }\n\n            if (Object.keys(state).length) {\n                storage.setItem(this.stateKey, JSON.stringify(state));\n            }\n        },\n        restoreState() {\n            const storage = this.getStorage();\n            const stateString = storage.getItem(this.stateKey);\n\n            if (stateString) {\n                let restoredState = JSON.parse(stateString);\n\n                if (this.paginator) {\n                    this.d_first = restoredState.first;\n                    this.d_rows = restoredState.rows;\n                }\n\n                if (restoredState.sortField) {\n                    this.d_sortField = restoredState.sortField;\n                    this.d_sortOrder = restoredState.sortOrder;\n                }\n\n                if (restoredState.multiSortMeta) {\n                    this.d_multiSortMeta = restoredState.multiSortMeta;\n                }\n\n                if (restoredState.filters) {\n                    this.$emit('update:filters', restoredState.filters);\n                }\n\n                if (this.resizableColumns) {\n                    this.columnWidthsState = restoredState.columnWidths;\n                    this.tableWidthState = restoredState.tableWidth;\n                }\n\n                if (this.reorderableColumns) {\n                    this.d_columnOrder = restoredState.columnOrder;\n                }\n\n                if (restoredState.expandedRows) {\n                    this.d_expandedRowKeys = restoredState.expandedRowKeys;\n                    this.$emit('update:expandedRows', restoredState.expandedRows);\n                }\n\n                if (restoredState.expandedRowGroups) {\n                    this.$emit('update:expandedRowGroups', restoredState.expandedRowGroups);\n                }\n\n                if (restoredState.selection) {\n                    this.d_selectionKeys = restoredState.d_selectionKeys;\n                    this.$emit('update:selection', restoredState.selection);\n                }\n            }\n        },\n        saveColumnWidths(state) {\n            let widths = [];\n            let headers = DomHandler.find(this.$el, '.p-datatable-thead > tr > th');\n            headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n            state.columnWidths = widths.join(',');\n\n            if (this.columnResizeMode === 'expand') {\n                state.tableWidth = this.scrollable ? DomHandler.findSingle(this.$el, '.p-datatable-scrollable-header-table').style.width :\n                                                    DomHandler.getOuterWidth(this.$refs.table) + 'px';\n            }\n        },\n        restoreColumnWidths() {\n            if (this.columnWidthsState) {\n                let widths = this.columnWidthsState.split(',');\n\n                if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(null, this.tableWidthState, 0);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.tableWidthState;\n                        this.$el.style.width = this.tableWidthState;\n                    }\n                }\n\n                if (this.scrollable) {\n                    let headerCols = DomHandler.find(this.$el, '.p-datatable-scrollable-header-table > colgroup > col');\n                    let bodyCols = DomHandler.find(this.$el, '.p-datatable-scrollable-body-table > colgroup > col');\n\n                    headerCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                    bodyCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                }\n                else {\n                    let headers = DomHandler.find(this.$refs.table, '.p-datatable-thead > tr > th');\n                    headers.forEach((header, index) => header.style.width = widths[index] + 'px');\n                }\n\n\n            }\n        },\n        onCellEditInit(event) {\n            this.$emit('cell-edit-init', event);\n        },\n        onCellEditComplete(event) {\n            this.$emit('cell-edit-complete', event);\n        },\n        onCellEditCancel(event) {\n            this.$emit('cell-edit-cancel', event);\n        },\n        onRowEditInit(event) {\n            let _editingRows = this.editingRows ? [...this.editingRows] : [];\n            _editingRows.push(event.data);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-init', event);\n        },\n        onRowEditSave(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-save', event);\n        },\n        onRowEditCancel(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-cancel', event);\n        },\n        onVirtualScroll(event) {\n            if(this.virtualScrollTimer) {\n                clearTimeout(this.virtualScrollTimer);\n            }\n\n            this.virtualScrollTimer = setTimeout(() => {\n                this.$emit('virtual-scroll', {\n                        first: (event.page - 1) * this.rows,\n                        rows: this.rows * 2\n                    });\n                }, this.virtualScrollDelay);\n        },\n        createLazyLoadEvent(event) {\n            let filterMatchModes;\n            if (this.hasFilters) {\n                filterMatchModes = {};\n                this.columns.forEach(col => {\n                    if (col.field) {\n                        filterMatchModes[col.field] = col.filterMatchMode;\n                    }\n                });\n            }\n\n            return {\n                originalEvent: event,\n                first: this.d_first,\n                rows: this.d_rows,\n                sortField: this.d_sortField,\n                sortOrder: this.d_sortOrder,\n                multiSortMeta: this.d_multiSortMeta,\n                filters: this.filters,\n                filterMatchModes: filterMatchModes\n            };\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-datatable p-component', {\n                    'p-datatable-hoverable-rows': (this.rowHover || this.selectionMode),\n                    'p-datatable-auto-layout': this.autoLayout,\n                    'p-datatable-resizable': this.resizableColumns,\n                    'p-datatable-resizable-fit': this.resizableColumns && this.columnResizeMode === 'fit',\n                    'p-datatable-scrollable': this.scrollable,\n                    'p-datatable-virtual-scrollable': this.virtualScroll\n                }\n            ];\n        },\n        columns() {\n            let columns = [];\n\n            if (this.allChildren) {\n                columns = this.allChildren.filter(child => child.$options._propKeys.indexOf('columnKey') !== -1);\n\n                if (this.reorderableColumns && this.d_columnOrder) {\n                    let orderedColumns = [];\n                    for (let columnKey of this.d_columnOrder) {\n                        let column = this.findColumnByKey(columns, columnKey);\n                        if (column) {\n                            orderedColumns.push(column);\n                        }\n                    }\n\n                    return [...orderedColumns, ...columns.filter((item) => {\n                        return orderedColumns.indexOf(item) < 0;\n                    })];\n                }\n            }\n            return columns;\n        },\n        frozenColumns() {\n            let frozenColumns = [];\n\n            for(let col of this.columns) {\n                if(col.frozen) {\n                    frozenColumns = frozenColumns||[];\n                    frozenColumns.push(col);\n                }\n            }\n\n            return frozenColumns;\n        },\n        scrollableColumns() {\n            let scrollableColumns = [];\n\n            for(let col of this.columns) {\n                if(!col.frozen) {\n                    scrollableColumns = scrollableColumns||[];\n                    scrollableColumns.push(col);\n                }\n            }\n\n            return scrollableColumns;\n        },\n        hasFrozenColumns() {\n            return this.frozenColumns.length > 0;\n        },\n        headerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'header') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenHeaderColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenheader') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        footerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'footer') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenFooterColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenfooter') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        processedData() {\n            if (this.lazy) {\n                return this.value;\n            }\n            else {\n                if (this.value && this.value.length) {\n                    let data = this.value;\n\n                    if (this.sorted) {\n                        if(this.sortMode === 'single')\n                            data = this.sortSingle(data);\n                        else if(this.sortMode === 'multiple')\n                            data = this.sortMultiple(data);\n                    }\n\n                    if (this.hasFilters) {\n                        data = this.filter(data);\n                    }\n\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            }\n        },\n        dataToRender() {\n            const data = this.processedData;\n\n            if (data && this.paginator) {\n                const first = this.lazy ? 0 : this.d_first;\n                return data.slice(first, first + this.d_rows);\n            }\n            else {\n                return data;\n            }\n        },\n        totalRecordsLength() {\n            if (this.lazy) {\n                return this.totalRecords;\n            }\n            else {\n                const data = this.processedData;\n                return data ? data.length : 0;\n            }\n        },\n        empty() {\n            const data = this.processedData;\n            return (!data || data.length === 0);\n        },\n        paginatorTop() {\n            return this.paginator && (this.paginatorPosition !== 'bottom' || this.paginatorPosition === 'both');\n        },\n        paginatorBottom() {\n            return this.paginator && (this.paginatorPosition !== 'top' || this.paginatorPosition === 'both');\n        },\n        sorted() {\n            return this.d_sortField || (this.d_multiSortMeta && this.d_multiSortMeta.length > 0);\n        },\n        hasFilters() {\n            return this.filters && Object.keys(this.filters).length > 0 && this.filters.constructor === Object;\n        },\n        hasGlobalFilter() {\n            return this.filters && Object.prototype.hasOwnProperty.call(this.filters, 'global');\n        },\n        loadingIconClass() {\n            return ['p-datatable-loading-icon pi-spin', this.loadingIcon];\n        },\n        allRowsSelected() {\n            const val = this.processedData;\n            return (val && val.length > 0 && this.selection && this.selection.length > 0 && this.selection.length === val.length);\n        }\n    },\n    components: {\n        'DTPaginator': Paginator,\n        'DTScrollableView': ScrollableView,\n        'DTTableHeader': TableHeader,\n        'DTTableBody': TableBody,\n        'DTTableFooter': TableFooter,\n    }\n}\n</script>\n\n<style>\n.p-datatable {\n    position: relative;\n}\n\n.p-datatable table {\n    border-collapse: collapse;\n    width: 100%;\n    table-layout: fixed;\n}\n\n.p-datatable .p-datatable-thead > tr > th,\n.p-datatable .p-datatable-tbody > tr > td,\n.p-datatable .p-datatable-tfoot > tr > td {\n    padding: .25em .5em;\n}\n\n.p-datatable .p-column-title {\n    user-select: none;\n    vertical-align: middle;\n}\n\n.p-datatable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-datatable .p-sortable-column-icon {\n    vertical-align: middle;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper > table {\n    table-layout: auto;\n}\n\n.p-datatable-hoverable-rows .p-datatable-tbody > tr.p-highlight {\n    cursor: pointer;\n}\n\n/* Sections */\n.p-datatable-header,\n.p-datatable-footer {\n    padding: .25em .5em;\n    text-align: center;\n    font-weight: bold;\n}\n\n.p-datatable-header {\n    border-bottom: 0 none;\n}\n\n.p-datatable-footer {\n    border-top: 0 none;\n}\n\n/* Paginator */\n.p-datatable .p-paginator-top {\n    border-bottom: 0 none;\n}\n\n.p-datatable .p-paginator-bottom {\n    border-top: 0 none;\n}\n\n/* Scrollable */\n.p-datatable-scrollable-wrapper {\n    position: relative;\n}\n.p-datatable-scrollable-header,\n.p-datatable-scrollable-footer {\n    overflow: hidden;\n    border: 0 none;\n}\n\n.p-datatable-scrollable-body {\n    overflow: auto;\n    position: relative;\n}\n\n.p-datatable-scrollable-body > table > .p-datatable-tbody > tr:first-child > td {\n    border-top: 0 none;\n}\n\n.p-datatable-virtual-table {\n    position: absolute;\n}\n\n/* Frozen Columns */\n.p-datatable-frozen-view .p-datatable-scrollable-body {\n    overflow: hidden;\n}\n\n.p-datatable-frozen-view > .p-datatable-scrollable-body > table > .p-datatable-tbody > tr > td:last-child {\n    border-right: 0 none;\n}\n\n.p-datatable-unfrozen-view {\n    position: absolute;\n    top: 0px;\n}\n\n/* Filter */\n.p-column-filter {\n    width: 100%;\n}\n\n/* Resizable */\n.p-datatable-resizable > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-resizable .p-datatable-thead > tr > th,\n.p-datatable-resizable .p-datatable-tfoot > tr > td,\n.p-datatable-resizable .p-datatable-tbody > tr > td {\n    overflow: hidden;\n}\n\n.p-datatable-resizable .p-resizable-column {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer {\n    display: none;\n}\n\n.p-datatable .p-column-resizer {\n    display: block;\n    position: absolute !important;\n    top: 0;\n    right: 0;\n    margin: 0;\n    width: .5em;\n    height: 100%;\n    padding: 0px;\n    cursor:col-resize;\n    border: 1px solid transparent;\n}\n\n.p-datatable .p-column-resizer-helper {\n    width: 1px;\n    position: absolute;\n    z-index: 10;\n    display: none;\n}\n\n/* Edit */\n.p-datatable .p-datatable-tbody > tr > td.p-cell-editing .p-component {\n    width: 100%;\n}\n\n/* Reorder */\n.p-datatable-reorder-indicator-up,\n.p-datatable-reorder-indicator-down {\n    position: absolute;\n    display: none;\n}\n\n/* Loader */\n.p-datatable .p-datatable-loading-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=10)\";\n    opacity: 0.1;\n    z-index: 1;\n}\n\n.p-datatable .p-datatable-loading-content {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    z-index: 2;\n    margin-top: -1em;\n    margin-left: -1em;\n}\n\n.p-datatable .p-datatable-loading-icon {\n    font-size: 2em;\n}\n</style>\n"]}]}