{"remainingRequest":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue?vue&type=template&id=4f14e471&","dependencies":[{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}