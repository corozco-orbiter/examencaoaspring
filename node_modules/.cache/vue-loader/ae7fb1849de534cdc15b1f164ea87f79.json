{"remainingRequest":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\ScrollableView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\ScrollableView.vue","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ScrollableView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollableView.vue","sourceRoot":"node_modules/primevue/components/datatable","sourcesContent":["<template>\n      <div :class=\"containerClass\" :style=\"containerStyle\">\n        <div class=\"p-datatable-scrollable-header\" ref=\"scrollHeader\" @scroll=\"onHeaderScroll\">\n            <div class=\"p-datatable-scrollable-header-box\" ref=\"scrollHeaderBox\">\n                <table class=\"p-datatable-scrollable-header-table\">\n                    <colgroup class=\"p-datatable-scrollable-colgroup\">\n                        <col v-for=\"(col,i) of columns\" :key=\"col.columnKey||col.field||i\" :style=\"col.headerStyle\" />\n                    </colgroup>\n                    <slot name=\"header\"></slot>\n                    <slot name=\"frozenbody\"></slot>\n                </table>\n            </div>\n        </div>\n        <div class=\"p-datatable-scrollable-body\" ref=\"scrollBody\" @scroll=\"onBodyScroll\">\n            <table ref=\"scrollTable\" :class=\"bodyTableClass\" :style=\"bodyTableStyle\">\n                <colgroup class=\"p-datatable-scrollable-colgroup\">\n                    <col v-for=\"(col,i) of columns\" :key=\"col.columnKey||col.field||i\" :style=\"col.headerStyle\" />\n                </colgroup>\n                <slot name=\"body\"></slot>\n            </table>\n            <table ref=\"loadingTable\" :style=\"{top:'0', display: 'none'}\" class=\"p-datatable-scrollable-body-table p-datatable-loading-virtual-table p-datatable-virtual-table\" v-if=\"virtualScroll\">\n                <colgroup class=\"p-datatable-scrollable-colgroup\">\n                    <col v-for=\"(col,i) of columns\" :key=\"col.columnKey||col.field||i\" :style=\"col.headerStyle\" />\n                </colgroup>\n                <DTTableLoadingBody :columns=\"columns\" :rows=\"rows\" />\n            </table>\n            <div class=\"p-datatable-virtual-scroller\" ref=\"virtualScroller\"></div>\n        </div>\n        <div class=\"p-datatable-scrollable-footer\" ref=\"scrollFooter\">\n            <div class=\"p-datatable-scrollable-footer-box\" ref=\"scrollFooterBox\">\n                <table class=\"p-datatable-scrollable-footer-table\">\n                    <colgroup class=\"p-datatable-scrollable-colgroup\">\n                        <col v-for=\"(col,i) of columns\" :key=\"col.columnKey||col.field||i\" :style=\"col.headerStyle\" />\n                    </colgroup>\n                    <slot name=\"footer\"></slot>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport DomHandler from '../utils/DomHandler';\nimport TableLoadingBody from './TableLoadingBody';\n\nexport default {\n    props: {\n        frozen: {\n            type: Boolean,\n            default: false\n        },\n        frozenWidth: {\n            type: String,\n            default: null\n        },\n        columns: {\n            type: null,\n            default: null\n        },\n        scrollHeight: {\n            type: String,\n            default: null\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        virtualRowHeight: {\n            type: Number,\n            default: null\n        },\n        rows: {\n            type: Number,\n            default: null,\n        },\n        totalRecords: {\n            type: Number,\n            default: 0\n        }\n    },\n    virtualScrollCallback: null,\n    mounted() {\n        this.setScrollHeight();\n\n        if (!this.frozen)\n            this.alignScrollBar();\n        else\n            this.$refs.scrollBody.style.paddingBottom = DomHandler.calculateScrollbarWidth() + 'px';\n\n        if (this.virtualScroll) {\n            this.$refs.virtualScroller.style.height = this.totalRecords * this.virtualRowHeight + 'px';\n        }\n    },\n    updated() {\n        if (!this.frozen) {\n            this.alignScrollBar();\n        }\n\n        if (this.virtualScrollCallback) {\n            this.virtualScrollCallback();\n            this.virtualScrollCallback = null;\n        }\n\n        this.setScrollHeight();\n    },\n    watch: {\n        totalRecords(newValue) {\n            if (this.virtualScroll) {\n                this.$refs.virtualScroller.style.height = newValue * this.virtualRowHeight + 'px';\n            }\n        }\n    },\n    methods: {\n        onHeaderScroll() {\n            this.$refs.scrollHeader.scrollLeft = 0;\n        },\n        onBodyScroll() {\n            let frozenView = this.$el.previousElementSibling;\n            let frozenScrollBody;\n            if (frozenView) {\n                frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n            }\n\n            if (frozenScrollBody) {\n                frozenScrollBody.scrollTop = this.$refs.scrollBody.scrollTop;\n            }\n\n            this.$refs.scrollHeaderBox.style.marginLeft = -1 * this.$refs.scrollBody.scrollLeft + 'px';\n            if (this.$refs.scrollFooterBox) {\n                this.$refs.scrollFooterBox.style.marginLeft = -1 * this.$refs.scrollBody.scrollLeft + 'px';\n            }\n\n            if (this.virtualScroll) {\n                let viewport = DomHandler.getClientHeight(this.$refs.scrollBody);\n                let tableHeight = DomHandler.getOuterHeight(this.$refs.scrollTable);\n                let pageHeight = this.virtualRowHeight * this.rows;\n                let virtualTableHeight = DomHandler.getOuterHeight(this.$refs.virtualScroller);\n                let pageCount = (virtualTableHeight / pageHeight)||1;\n                let scrollBodyTop = this.$refs.scrollTable.style.top||'0';\n\n                if(this.$refs.scrollBody.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight || this.$refs.scrollBody.scrollTop < parseFloat(scrollBodyTop)) {\n                    if (this.$refs.loadingTable) {\n                        this.$refs.loadingTable.style.display = 'table';\n                        this.$refs.loadingTable.style.top = this.$refs.scrollBody.scrollTop + 'px';\n                    }\n\n                    let page = Math.floor((this.$refs.scrollBody.scrollTop * pageCount) / (this.$refs.scrollBody.scrollHeight)) + 1;\n                    this.$emit('virtual-scroll', {\n                        page: page\n                    });\n\n                    this.virtualScrollCallback = () => {\n                        if (this.$refs.loadingTable) {\n                            this.$refs.loadingTable.style.display = 'none';\n                        }\n\n                        this.$refs.scrollTable.style.top = ((page - 1) * pageHeight) + 'px';\n                    }\n                }\n            }\n        },\n        setScrollHeight() {\n            if (this.scrollHeight) {\n                let frozenView = this.$el.previousElementSibling;\n                if (frozenView) {\n                    let frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n                    this.$refs.scrollBody.style.maxHeight = frozenScrollBody.style.maxHeight;\n                }\n                else {\n                    if(this.scrollHeight.indexOf('%') !== -1) {\n                        let datatableContainer = this.findDataTableContainer(this.$el);\n                        this.$refs.scrollBody.style.visibility = 'hidden';\n                        this.$refs.scrollBody.style.height = '100px';         //temporary height to calculate static height\n                        let containerHeight = DomHandler.getOuterHeight(datatableContainer);\n                        let relativeHeight = DomHandler.getOuterHeight(datatableContainer.parentElement) * parseInt(this.scrollHeight, 10) / 100;\n                        let staticHeight = containerHeight - 100;       //total height of headers, footers, paginators\n                        let scrollBodyHeight = (relativeHeight - staticHeight);\n\n                        this.$refs.scrollBody.style.height = 'auto';\n                        this.$refs.scrollBody.style.maxHeight = scrollBodyHeight + 'px';\n                        this.$refs.scrollBody.style.visibility = 'visible';\n                    }\n                    else {\n                        this.$refs.scrollBody.style.maxHeight = this.scrollHeight;\n                    }\n                }\n            }\n        },\n        hasVerticalOverflow() {\n            return DomHandler.getOuterHeight(this.$refs.scrollTable) > DomHandler.getOuterHeight(this.$refs.scrollBody);\n        },\n        alignScrollBar() {\n            let scrollBarWidth = this.hasVerticalOverflow() ? DomHandler.calculateScrollbarWidth() : 0;\n\n            this.$refs.scrollHeaderBox.style.marginRight = scrollBarWidth + 'px';\n            if (this.$refs.scrollFooterBox) {\n                this.$refs.scrollFooterBox.style.marginRight = scrollBarWidth + 'px';\n            }\n        },\n        findDataTableContainer(element) {\n            if (element) {\n                let el = element;\n                while (el && !DomHandler.hasClass(el, 'p-datatable')) {\n                    el = el.parentElement;\n                }\n\n                return el;\n            }\n            else {\n                return null;\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-datatable-scrollable-view', {'p-datatable-frozen-view': this.frozen, 'p-datatable-unfrozen-view': !this.frozen && this.frozenWidth}];\n        },\n        containerStyle() {\n            if (this.frozenWidth) {\n                if (this.frozen) {\n                    return {\n                        width: this.frozenWidth\n                    };\n                }\n                else {\n                    return {\n                        width: 'calc(100% - ' + this.frozenWidth + ')',\n                        left: this.frozenWidth\n                    }\n                }\n            }\n            else {\n                return null;\n            }\n        },\n        bodyTableClass() {\n            return ['p-datatable-scrollable-body-table', {'p-datatable-virtual-table': this.virtualScroll}];\n        },\n        bodyTableStyle() {\n            return this.virtualScroll ? {top: '0'} : null;\n        }\n    },\n    components: {\n        'DTTableLoadingBody': TableLoadingBody\n    }\n}\n</script>"]}]}