{"remainingRequest":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\primevue\\components\\datatable\\DataTable.vue","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thejo\\Videos\\Examen\\examencaoa\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICJDOlxcVXNlcnNcXHRoZWpvXFxWaWRlb3NcXEV4YW1lblxcZXhhbWVuY2FvYVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQzpcXFVzZXJzXFx0aGVqb1xcVmlkZW9zXFxFeGFtZW5cXGV4YW1lbmNhb2FcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE9iamVjdFV0aWxzIGZyb20gJy4uL3V0aWxzL09iamVjdFV0aWxzJzsKaW1wb3J0IEZpbHRlclV0aWxzIGZyb20gJy4uL3V0aWxzL0ZpbHRlclV0aWxzJzsKaW1wb3J0IERvbUhhbmRsZXIgZnJvbSAnLi4vdXRpbHMvRG9tSGFuZGxlcic7CmltcG9ydCBQYWdpbmF0b3IgZnJvbSAnLi4vcGFnaW5hdG9yL1BhZ2luYXRvcic7CmltcG9ydCBTY3JvbGxhYmxlVmlldyBmcm9tICcuL1Njcm9sbGFibGVWaWV3LnZ1ZSc7CmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICcuL1RhYmxlSGVhZGVyLnZ1ZSc7CmltcG9ydCBUYWJsZUJvZHkgZnJvbSAnLi9UYWJsZUJvZHkudnVlJzsKaW1wb3J0IFRhYmxlRm9vdGVyIGZyb20gJy4vVGFibGVGb290ZXIudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGRhdGFLZXk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcm93czogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBmaXJzdDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICB0b3RhbFJlY29yZHM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgcGFnaW5hdG9yOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgcGFnaW5hdG9yUG9zaXRpb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnYm90dG9tJwogICAgfSwKICAgIGFsd2F5c1Nob3dQYWdpbmF0b3I6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIHBhZ2luYXRvclRlbXBsYXRlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ0ZpcnN0UGFnZUxpbmsgUHJldlBhZ2VMaW5rIFBhZ2VMaW5rcyBOZXh0UGFnZUxpbmsgTGFzdFBhZ2VMaW5rIFJvd3NQZXJQYWdlRHJvcGRvd24nCiAgICB9LAogICAgcGFnZUxpbmtTaXplOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNQogICAgfSwKICAgIHJvd3NQZXJQYWdlT3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGN1cnJlbnRQYWdlUmVwb3J0VGVtcGxhdGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnKHtjdXJyZW50UGFnZX0gb2Yge3RvdGFsUGFnZXN9KScKICAgIH0sCiAgICBsYXp5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgbG9hZGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGxvYWRpbmdJY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3BpIHBpLXNwaW5uZXInCiAgICB9LAogICAgc29ydEZpZWxkOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHNvcnRPcmRlcjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBkZWZhdWx0U29ydE9yZGVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMQogICAgfSwKICAgIG11bHRpU29ydE1ldGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBzb3J0TW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdzaW5nbGUnCiAgICB9LAogICAgcmVtb3ZhYmxlU29ydDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGZpbHRlcnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZmlsdGVyTG9jYWxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgc2VsZWN0aW9uOiB7CiAgICAgIHR5cGU6IFtBcnJheSwgT2JqZWN0XSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHNlbGVjdGlvbk1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgY29tcGFyZVNlbGVjdGlvbkJ5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2RlZXBFcXVhbHMnCiAgICB9LAogICAgbWV0YUtleVNlbGVjdGlvbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgY29udGV4dE1lbnU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBjb250ZXh0TWVudVNlbGVjdGlvbjogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICByb3dIb3ZlcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGNzdlNlcGFyYXRvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcsJwogICAgfSwKICAgIGV4cG9ydEZpbGVuYW1lOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2Rvd25sb2FkJwogICAgfSwKICAgIGF1dG9MYXlvdXQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICByZXNpemFibGVDb2x1bW5zOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgY29sdW1uUmVzaXplTW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdmaXQnCiAgICB9LAogICAgcmVvcmRlcmFibGVDb2x1bW5zOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZXhwYW5kZWRSb3dzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZXhwYW5kZWRSb3dJY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3BpLWNoZXZyb24tZG93bicKICAgIH0sCiAgICBjb2xsYXBzZWRSb3dJY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3BpLWNoZXZyb24tcmlnaHQnCiAgICB9LAogICAgcm93R3JvdXBNb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGdyb3VwUm93c0J5OiB7CiAgICAgIHR5cGU6IFtBcnJheSwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGV4cGFuZGFibGVSb3dHcm91cHM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBleHBhbmRlZFJvd0dyb3VwczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHN0YXRlU3RvcmFnZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdzZXNzaW9uJwogICAgfSwKICAgIHN0YXRlS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGVkaXRNb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGVkaXRpbmdSb3dzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcm93Q2xhc3M6IHsKICAgICAgdHlwZTogbnVsbCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHNjcm9sbGFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBzY3JvbGxIZWlnaHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZnJvemVuVmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBmcm96ZW5XaWR0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICB2aXJ0dWFsU2Nyb2xsOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgdmlydHVhbFJvd0hlaWdodDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDI4CiAgICB9LAogICAgdmlydHVhbFNjcm9sbERlbGF5OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMTUwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxsQ2hpbGRyZW46IG51bGwsCiAgICAgIGRfZmlyc3Q6IHRoaXMuZmlyc3QsCiAgICAgIGRfcm93czogdGhpcy5yb3dzLAogICAgICBkX3NvcnRGaWVsZDogdGhpcy5zb3J0RmllbGQsCiAgICAgIGRfc29ydE9yZGVyOiB0aGlzLnNvcnRPcmRlciwKICAgICAgZF9tdWx0aVNvcnRNZXRhOiB0aGlzLm11bHRpU29ydE1ldGEgPyBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5tdWx0aVNvcnRNZXRhKSA6IFtdLAogICAgICBkX3NlbGVjdGlvbktleXM6IG51bGwsCiAgICAgIGRfZXhwYW5kZWRSb3dLZXlzOiBudWxsLAogICAgICBkX2NvbHVtbk9yZGVyOiBudWxsLAogICAgICBkX2VkaXRpbmdSb3dLZXlzOiBudWxsCiAgICB9OwogIH0sCiAgcm93VG91Y2hlZDogZmFsc2UsCiAgYW5jaG9yUm93SW5kZXg6IG51bGwsCiAgcmFuZ2VSb3dJbmRleDogbnVsbCwKICBkb2N1bWVudENvbHVtblJlc2l6ZUxpc3RlbmVyOiBudWxsLAogIGRvY3VtZW50Q29sdW1uUmVzaXplRW5kTGlzdGVuZXI6IG51bGwsCiAgbGFzdFJlc2l6ZUhlbHBlclg6IG51bGwsCiAgcmVzaXplQ29sdW1uRWxlbWVudDogbnVsbCwKICBjb2x1bW5SZXNpemluZzogZmFsc2UsCiAgY29sUmVvcmRlckljb25XaWR0aDogbnVsbCwKICBjb2xSZW9yZGVySWNvbkhlaWdodDogbnVsbCwKICBkcmFnZ2VkQ29sdW1uOiBudWxsLAogIGRyYWdnZWRSb3dJbmRleDogbnVsbCwKICBkcm9wcGVkUm93SW5kZXg6IG51bGwsCiAgcm93RHJhZ2dpbmc6IG51bGwsCiAgY29sdW1uV2lkdGhzU3RhdGU6IG51bGwsCiAgdGFibGVXaWR0aFN0YXRlOiBudWxsLAogIGNvbHVtbldpZHRoc1Jlc3RvcmVkOiBmYWxzZSwKICB2aXJ0dWFsU2Nyb2xsVGltZXI6IG51bGwsCiAgd2F0Y2g6IHsKICAgIGZpcnN0OiBmdW5jdGlvbiBmaXJzdChuZXdWYWx1ZSkgewogICAgICB0aGlzLmRfZmlyc3QgPSBuZXdWYWx1ZTsKICAgIH0sCiAgICByb3dzOiBmdW5jdGlvbiByb3dzKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuZF9yb3dzID0gbmV3VmFsdWU7CiAgICB9LAogICAgc29ydEZpZWxkOiBmdW5jdGlvbiBzb3J0RmllbGQobmV3VmFsdWUpIHsKICAgICAgdGhpcy5kX3NvcnRGaWVsZCA9IG5ld1ZhbHVlOwogICAgfSwKICAgIHNvcnRPcmRlcjogZnVuY3Rpb24gc29ydE9yZGVyKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuZF9zb3J0T3JkZXIgPSBuZXdWYWx1ZTsKICAgIH0sCiAgICBtdWx0aVNvcnRNZXRhOiBmdW5jdGlvbiBtdWx0aVNvcnRNZXRhKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuZF9tdWx0aVNvcnRNZXRhID0gbmV3VmFsdWU7CiAgICB9LAogICAgc2VsZWN0aW9uOiBmdW5jdGlvbiBzZWxlY3Rpb24obmV3VmFsdWUpIHsKICAgICAgaWYgKHRoaXMuZGF0YUtleSkgewogICAgICAgIHRoaXMudXBkYXRlU2VsZWN0aW9uS2V5cyhuZXdWYWx1ZSk7CiAgICAgIH0KICAgIH0sCiAgICBleHBhbmRlZFJvd3M6IGZ1bmN0aW9uIGV4cGFuZGVkUm93cyhuZXdWYWx1ZSkgewogICAgICBpZiAodGhpcy5kYXRhS2V5KSB7CiAgICAgICAgdGhpcy51cGRhdGVFeHBhbmRlZFJvd0tleXMobmV3VmFsdWUpOwogICAgICB9CiAgICB9LAogICAgZWRpdGluZ1Jvd3M6IGZ1bmN0aW9uIGVkaXRpbmdSb3dzKG5ld1ZhbHVlKSB7CiAgICAgIGlmICh0aGlzLmRhdGFLZXkpIHsKICAgICAgICB0aGlzLnVwZGF0ZUVkaXRpbmdSb3dLZXlzKG5ld1ZhbHVlKTsKICAgICAgfQogICAgfQogIH0sCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgewogICAgaWYgKHRoaXMuaXNTdGF0ZWZ1bCgpKSB7CiAgICAgIHRoaXMucmVzdG9yZVN0YXRlKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5hbGxDaGlsZHJlbiA9IHRoaXMuJGNoaWxkcmVuOwoKICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucykgewogICAgICB2YXIgY29sdW1uT3JkZXIgPSBbXTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmFsbENoaWxkcmVuKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGNoaWxkID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgaWYgKGNoaWxkLiRvcHRpb25zLl9wcm9wS2V5cy5pbmRleE9mKCdjb2x1bW5LZXknKSAhPT0gLTEpIHsKICAgICAgICAgICAgY29sdW1uT3JkZXIucHVzaChjaGlsZC5jb2x1bW5LZXkgfHwgY2hpbGQuZmllbGQpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICB0aGlzLmRfY29sdW1uT3JkZXIgPSBjb2x1bW5PcmRlcjsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnVuYmluZENvbHVtblJlc2l6ZUV2ZW50cygpOwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgIGlmICh0aGlzLmlzU3RhdGVmdWwoKSkgewogICAgICB0aGlzLnNhdmVTdGF0ZSgpOwoKICAgICAgaWYgKHRoaXMucmVzaXphYmxlQ29sdW1ucyAmJiAhdGhpcy5jb2x1bW5XaWR0aHNSZXN0b3JlZCkgewogICAgICAgIHRoaXMucmVzdG9yZUNvbHVtbldpZHRocygpOwogICAgICAgIHRoaXMuY29sdW1uV2lkdGhzUmVzdG9yZWQgPSB0cnVlOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblBhZ2U6IGZ1bmN0aW9uIG9uUGFnZShldmVudCkgewogICAgICB0aGlzLmRfZmlyc3QgPSBldmVudC5maXJzdDsKICAgICAgdGhpcy5kX3Jvd3MgPSBldmVudC5yb3dzOwogICAgICB2YXIgcGFnZUV2ZW50ID0gdGhpcy5jcmVhdGVMYXp5TG9hZEV2ZW50KGV2ZW50KTsKICAgICAgcGFnZUV2ZW50LnBhZ2VDb3VudCA9IGV2ZW50LnBhZ2VDb3VudDsKICAgICAgcGFnZUV2ZW50LnBhZ2UgPSBldmVudC5wYWdlOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6Zmlyc3QnLCB0aGlzLmRfZmlyc3QpOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cm93cycsIHRoaXMuZF9yb3dzKTsKICAgICAgdGhpcy4kZW1pdCgncGFnZScsIHBhZ2VFdmVudCk7CiAgICB9LAogICAgb25Db2x1bW5IZWFkZXJDbGljazogZnVuY3Rpb24gb25Db2x1bW5IZWFkZXJDbGljayhlKSB7CiAgICAgIHZhciBldmVudCA9IGUub3JpZ2luYWxFdmVudDsKICAgICAgdmFyIGNvbHVtbiA9IGUuY29sdW1uOwoKICAgICAgaWYgKGNvbHVtbi5zb3J0YWJsZSkgewogICAgICAgIHZhciB0YXJnZXROb2RlID0gZXZlbnQudGFyZ2V0OwogICAgICAgIHZhciBjb2x1bW5GaWVsZCA9IGNvbHVtbi5zb3J0RmllbGQgfHwgY29sdW1uLmZpZWxkOwoKICAgICAgICBpZiAoRG9tSGFuZGxlci5oYXNDbGFzcyh0YXJnZXROb2RlLCAncC1zb3J0YWJsZS1jb2x1bW4nKSB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKHRhcmdldE5vZGUsICdwLWNvbHVtbi10aXRsZScpIHx8IERvbUhhbmRsZXIuaGFzQ2xhc3ModGFyZ2V0Tm9kZSwgJ3Atc29ydGFibGUtY29sdW1uLWljb24nKSB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKHRhcmdldE5vZGUucGFyZW50RWxlbWVudCwgJ3Atc29ydGFibGUtY29sdW1uLWljb24nKSkgewogICAgICAgICAgRG9tSGFuZGxlci5jbGVhclNlbGVjdGlvbigpOwoKICAgICAgICAgIGlmICh0aGlzLnNvcnRNb2RlID09PSAnc2luZ2xlJykgewogICAgICAgICAgICBpZiAodGhpcy5kX3NvcnRGaWVsZCA9PT0gY29sdW1uRmllbGQpIHsKICAgICAgICAgICAgICBpZiAodGhpcy5yZW1vdmFibGVTb3J0ICYmIHRoaXMuZF9zb3J0T3JkZXIgKiAtMSA9PT0gdGhpcy5kZWZhdWx0U29ydE9yZGVyKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRfc29ydE9yZGVyID0gbnVsbDsKICAgICAgICAgICAgICAgIHRoaXMuZF9zb3J0RmllbGQgPSBudWxsOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmRfc29ydE9yZGVyID0gdGhpcy5kX3NvcnRPcmRlciAqIC0xOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLmRfc29ydE9yZGVyID0gdGhpcy5kZWZhdWx0U29ydE9yZGVyOwogICAgICAgICAgICAgIHRoaXMuZF9zb3J0RmllbGQgPSBjb2x1bW5GaWVsZDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNvcnRGaWVsZCcsIHRoaXMuZF9zb3J0RmllbGQpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c29ydE9yZGVyJywgdGhpcy5kX3NvcnRPcmRlcik7CiAgICAgICAgICAgIHRoaXMucmVzZXRQYWdlKCk7CiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc29ydE1vZGUgPT09ICdtdWx0aXBsZScpIHsKICAgICAgICAgICAgdmFyIG1ldGFLZXkgPSBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXk7CgogICAgICAgICAgICBpZiAoIW1ldGFLZXkpIHsKICAgICAgICAgICAgICB0aGlzLmRfbXVsdGlTb3J0TWV0YSA9IHRoaXMuZF9tdWx0aVNvcnRNZXRhLmZpbHRlcihmdW5jdGlvbiAobWV0YSkgewogICAgICAgICAgICAgICAgcmV0dXJuIG1ldGEuZmllbGQgPT09IGNvbHVtbkZpZWxkOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLmFkZE11bHRpU29ydEZpZWxkKGNvbHVtbkZpZWxkKTsKICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOm11bHRpU29ydE1ldGEnLCB0aGlzLmRfbXVsdGlTb3J0TWV0YSk7CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy4kZW1pdCgnc29ydCcsIHRoaXMuY3JlYXRlTGF6eUxvYWRFdmVudChldmVudCkpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNvcnRTaW5nbGU6IGZ1bmN0aW9uIHNvcnRTaW5nbGUodmFsdWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gX3RvQ29uc3VtYWJsZUFycmF5KHZhbHVlKTsKCiAgICAgIGRhdGEuc29ydChmdW5jdGlvbiAoZGF0YTEsIGRhdGEyKSB7CiAgICAgICAgdmFyIHZhbHVlMSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YTEsIF90aGlzLmRfc29ydEZpZWxkKTsKICAgICAgICB2YXIgdmFsdWUyID0gT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShkYXRhMiwgX3RoaXMuZF9zb3J0RmllbGQpOwogICAgICAgIHZhciByZXN1bHQgPSBudWxsOwogICAgICAgIGlmICh2YWx1ZTEgPT0gbnVsbCAmJiB2YWx1ZTIgIT0gbnVsbCkgcmVzdWx0ID0gLTE7ZWxzZSBpZiAodmFsdWUxICE9IG51bGwgJiYgdmFsdWUyID09IG51bGwpIHJlc3VsdCA9IDE7ZWxzZSBpZiAodmFsdWUxID09IG51bGwgJiYgdmFsdWUyID09IG51bGwpIHJlc3VsdCA9IDA7ZWxzZSBpZiAodHlwZW9mIHZhbHVlMSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHZhbHVlMiA9PT0gJ3N0cmluZycpIHJlc3VsdCA9IHZhbHVlMS5sb2NhbGVDb21wYXJlKHZhbHVlMiwgdW5kZWZpbmVkLCB7CiAgICAgICAgICBudW1lcmljOiB0cnVlCiAgICAgICAgfSk7ZWxzZSByZXN1bHQgPSB2YWx1ZTEgPCB2YWx1ZTIgPyAtMSA6IHZhbHVlMSA+IHZhbHVlMiA/IDEgOiAwOwogICAgICAgIHJldHVybiBfdGhpcy5kX3NvcnRPcmRlciAqIHJlc3VsdDsKICAgICAgfSk7CiAgICAgIHJldHVybiBkYXRhOwogICAgfSwKICAgIHNvcnRNdWx0aXBsZTogZnVuY3Rpb24gc29ydE11bHRpcGxlKHZhbHVlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSBfdG9Db25zdW1hYmxlQXJyYXkodmFsdWUpOwoKICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uIChkYXRhMSwgZGF0YTIpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLm11bHRpc29ydEZpZWxkKGRhdGExLCBkYXRhMiwgMCk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0sCiAgICBtdWx0aXNvcnRGaWVsZDogZnVuY3Rpb24gbXVsdGlzb3J0RmllbGQoZGF0YTEsIGRhdGEyLCBpbmRleCkgewogICAgICB2YXIgdmFsdWUxID0gT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShkYXRhMSwgdGhpcy5kX211bHRpU29ydE1ldGFbaW5kZXhdLmZpZWxkKTsKICAgICAgdmFyIHZhbHVlMiA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YTIsIHRoaXMuZF9tdWx0aVNvcnRNZXRhW2luZGV4XS5maWVsZCk7CiAgICAgIHZhciByZXN1bHQgPSBudWxsOwoKICAgICAgaWYgKHR5cGVvZiB2YWx1ZTEgPT09ICdzdHJpbmcnIHx8IHZhbHVlMSBpbnN0YW5jZW9mIFN0cmluZykgewogICAgICAgIGlmICh2YWx1ZTEubG9jYWxlQ29tcGFyZSAmJiB2YWx1ZTEgIT09IHZhbHVlMikgewogICAgICAgICAgcmV0dXJuIHRoaXMuZF9tdWx0aVNvcnRNZXRhW2luZGV4XS5vcmRlciAqIHZhbHVlMS5sb2NhbGVDb21wYXJlKHZhbHVlMiwgdW5kZWZpbmVkLCB7CiAgICAgICAgICAgIG51bWVyaWM6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSB2YWx1ZTEgPCB2YWx1ZTIgPyAtMSA6IDE7CiAgICAgIH0KCiAgICAgIGlmICh2YWx1ZTEgPT09IHZhbHVlMikgewogICAgICAgIHJldHVybiB0aGlzLmRfbXVsdGlTb3J0TWV0YS5sZW5ndGggLSAxID4gaW5kZXggPyB0aGlzLm11bHRpc29ydEZpZWxkKGRhdGExLCBkYXRhMiwgaW5kZXggKyAxKSA6IDA7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmRfbXVsdGlTb3J0TWV0YVtpbmRleF0ub3JkZXIgKiByZXN1bHQ7CiAgICB9LAogICAgYWRkTXVsdGlTb3J0RmllbGQ6IGZ1bmN0aW9uIGFkZE11bHRpU29ydEZpZWxkKGZpZWxkKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMuZF9tdWx0aVNvcnRNZXRhLmZpbmRJbmRleChmdW5jdGlvbiAobWV0YSkgewogICAgICAgIHJldHVybiBtZXRhLmZpZWxkID09PSBmaWVsZDsKICAgICAgfSk7CgogICAgICBpZiAoaW5kZXggPj0gMCkgewogICAgICAgIGlmICh0aGlzLnJlbW92YWJsZVNvcnQgJiYgdGhpcy5kX211bHRpU29ydE1ldGFbaW5kZXhdLm9yZGVyICogLTEgPT09IHRoaXMuZGVmYXVsdFNvcnRPcmRlcikgdGhpcy5kX211bHRpU29ydE1ldGEuc3BsaWNlKGluZGV4LCAxKTtlbHNlIHRoaXMuZF9tdWx0aVNvcnRNZXRhW2luZGV4XSA9IHsKICAgICAgICAgIGZpZWxkOiBmaWVsZCwKICAgICAgICAgIG9yZGVyOiB0aGlzLmRfbXVsdGlTb3J0TWV0YVtpbmRleF0ub3JkZXIgKiAtMQogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kX211bHRpU29ydE1ldGEucHVzaCh7CiAgICAgICAgICBmaWVsZDogZmllbGQsCiAgICAgICAgICBvcmRlcjogdGhpcy5kZWZhdWx0U29ydE9yZGVyCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuZF9tdWx0aVNvcnRNZXRhID0gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZF9tdWx0aVNvcnRNZXRhKTsKICAgIH0sCiAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihkYXRhKSB7CiAgICAgIHZhciBmaWx0ZXJlZFZhbHVlID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgbG9jYWxNYXRjaCA9IHRydWU7CiAgICAgICAgdmFyIGdsb2JhbE1hdGNoID0gZmFsc2U7CgogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5jb2x1bW5zLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICB2YXIgY29sID0gdGhpcy5jb2x1bW5zW2pdOwogICAgICAgICAgdmFyIGNvbHVtbkZpZWxkID0gY29sLmZpbHRlckZpZWxkIHx8IGNvbC5maWVsZDsgLy9sb2NhbAoKICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcy5maWx0ZXJzLCBjb2x1bW5GaWVsZCkpIHsKICAgICAgICAgICAgdmFyIGZpbHRlclZhbHVlID0gdGhpcy5maWx0ZXJzW2NvbHVtbkZpZWxkXTsKICAgICAgICAgICAgdmFyIGRhdGFGaWVsZFZhbHVlID0gT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShkYXRhW2ldLCBjb2x1bW5GaWVsZCk7CiAgICAgICAgICAgIHZhciBmaWx0ZXJDb25zdHJhaW50ID0gY29sLmZpbHRlck1hdGNoTW9kZSA9PT0gJ2N1c3RvbScgPyBjb2wuZmlsdGVyRnVuY3Rpb24gOiBGaWx0ZXJVdGlsc1tjb2wuZmlsdGVyTWF0Y2hNb2RlXTsKCiAgICAgICAgICAgIGlmICghZmlsdGVyQ29uc3RyYWludChkYXRhRmllbGRWYWx1ZSwgZmlsdGVyVmFsdWUsIHRoaXMuZmlsdGVyTG9jYWxlKSkgewogICAgICAgICAgICAgIGxvY2FsTWF0Y2ggPSBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFsb2NhbE1hdGNoKSB7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoIWNvbC5leGNsdWRlR2xvYmFsRmlsdGVyICYmIHRoaXMuaGFzR2xvYmFsRmlsdGVyICYmICFnbG9iYWxNYXRjaCkgewogICAgICAgICAgICBnbG9iYWxNYXRjaCA9IEZpbHRlclV0aWxzLmNvbnRhaW5zKE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YVtpXSwgY29sdW1uRmllbGQpLCB0aGlzLmZpbHRlcnNbJ2dsb2JhbCddLCB0aGlzLmZpbHRlckxvY2FsZSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgbWF0Y2hlcyA9IGxvY2FsTWF0Y2g7CgogICAgICAgIGlmICh0aGlzLmhhc0dsb2JhbEZpbHRlcikgewogICAgICAgICAgbWF0Y2hlcyA9IGxvY2FsTWF0Y2ggJiYgZ2xvYmFsTWF0Y2g7CiAgICAgICAgfQoKICAgICAgICBpZiAobWF0Y2hlcykgewogICAgICAgICAgZmlsdGVyZWRWYWx1ZS5wdXNoKGRhdGFbaV0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKGZpbHRlcmVkVmFsdWUubGVuZ3RoID09PSBkYXRhLmxlbmd0aCkgewogICAgICAgIGZpbHRlcmVkVmFsdWUgPSBkYXRhOwogICAgICB9CgogICAgICB2YXIgZmlsdGVyRXZlbnQgPSB0aGlzLmNyZWF0ZUxhenlMb2FkRXZlbnQoZXZlbnQpOwogICAgICBmaWx0ZXJFdmVudC5maWx0ZXJlZFZhbHVlID0gZmlsdGVyZWRWYWx1ZTsKICAgICAgdGhpcy4kZW1pdCgnZmlsdGVyJywgZmlsdGVyRXZlbnQpOwogICAgICByZXR1cm4gZmlsdGVyZWRWYWx1ZTsKICAgIH0sCiAgICBvblJvd0NsaWNrOiBmdW5jdGlvbiBvblJvd0NsaWNrKGUpIHsKICAgICAgdmFyIGV2ZW50ID0gZS5vcmlnaW5hbEV2ZW50OwogICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0OwogICAgICB2YXIgdGFyZ2V0Tm9kZSA9IHRhcmdldC5ub2RlTmFtZTsKICAgICAgdmFyIHBhcmVudE5vZGUgPSB0YXJnZXQucGFyZW50RWxlbWVudCAmJiB0YXJnZXQucGFyZW50RWxlbWVudC5ub2RlTmFtZTsKCiAgICAgIGlmICh0YXJnZXROb2RlID09ICdJTlBVVCcgfHwgdGFyZ2V0Tm9kZSA9PSAnQlVUVE9OJyB8fCB0YXJnZXROb2RlID09ICdBJyB8fCBwYXJlbnROb2RlID09ICdJTlBVVCcgfHwgcGFyZW50Tm9kZSA9PSAnQlVUVE9OJyB8fCBwYXJlbnROb2RlID09ICdBJyB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKHRhcmdldCwgJ3AtY2xpY2thYmxlJykpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1jbGljaycsIGUpOwoKICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSkgewogICAgICAgIHZhciByb3dEYXRhID0gZS5kYXRhOwogICAgICAgIHZhciByb3dJbmRleCA9IGUuaW5kZXg7CgogICAgICAgIGlmICh0aGlzLmlzTXVsdGlwbGVTZWxlY3Rpb25Nb2RlKCkgJiYgZXZlbnQuc2hpZnRLZXkgJiYgdGhpcy5hbmNob3JSb3dJbmRleCAhPSBudWxsKSB7CiAgICAgICAgICBEb21IYW5kbGVyLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgICAgICB0aGlzLnJhbmdlUm93SW5kZXggPSByb3dJbmRleDsKICAgICAgICAgIHRoaXMuc2VsZWN0UmFuZ2UoZXZlbnQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLmlzU2VsZWN0ZWQocm93RGF0YSk7CiAgICAgICAgICB2YXIgbWV0YVNlbGVjdGlvbiA9IHRoaXMucm93VG91Y2hlZCA/IGZhbHNlIDogdGhpcy5tZXRhS2V5U2VsZWN0aW9uOwogICAgICAgICAgdGhpcy5hbmNob3JSb3dJbmRleCA9IHJvd0luZGV4OwogICAgICAgICAgdGhpcy5yYW5nZVJvd0luZGV4ID0gcm93SW5kZXg7CgogICAgICAgICAgaWYgKG1ldGFTZWxlY3Rpb24pIHsKICAgICAgICAgICAgdmFyIG1ldGFLZXkgPSBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXk7CgogICAgICAgICAgICBpZiAoc2VsZWN0ZWQgJiYgbWV0YUtleSkgewogICAgICAgICAgICAgIGlmICh0aGlzLmlzU2luZ2xlU2VsZWN0aW9uTW9kZSgpKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgbnVsbCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBzZWxlY3Rpb25JbmRleCA9IHRoaXMuZmluZEluZGV4SW5TZWxlY3Rpb24ocm93RGF0YSk7CgogICAgICAgICAgICAgICAgdmFyIF9zZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbi5maWx0ZXIoZnVuY3Rpb24gKHZhbCwgaSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gaSAhPSBzZWxlY3Rpb25JbmRleDsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy11bnNlbGVjdCcsIHsKICAgICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgIHR5cGU6ICdyb3cnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaWYgKHRoaXMuaXNTaW5nbGVTZWxlY3Rpb25Nb2RlKCkpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCByb3dEYXRhKTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNdWx0aXBsZVNlbGVjdGlvbk1vZGUoKSkgewogICAgICAgICAgICAgICAgdmFyIF9zZWxlY3Rpb24yID0gbWV0YUtleSA/IHRoaXMuc2VsZWN0aW9uIHx8IFtdIDogW107CgogICAgICAgICAgICAgICAgX3NlbGVjdGlvbjIgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF9zZWxlY3Rpb24yKSwgW3Jvd0RhdGFdKTsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uMik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0JywgewogICAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgICAgICAgaW5kZXg6IGV2ZW50LmluZGV4LAogICAgICAgICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gJ3NpbmdsZScpIHsKICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBudWxsKTsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy11bnNlbGVjdCcsIHsKICAgICAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgcm93RGF0YSk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0JywgewogICAgICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgICAgICAgICAgaW5kZXg6IGV2ZW50LmluZGV4LAogICAgICAgICAgICAgICAgICB0eXBlOiAncm93JwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gJ211bHRpcGxlJykgewogICAgICAgICAgICAgIGlmIChzZWxlY3RlZCkgewogICAgICAgICAgICAgICAgdmFyIF9zZWxlY3Rpb25JbmRleCA9IHRoaXMuZmluZEluZGV4SW5TZWxlY3Rpb24ocm93RGF0YSk7CgogICAgICAgICAgICAgICAgdmFyIF9zZWxlY3Rpb24zID0gdGhpcy5zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uICh2YWwsIGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkgIT0gX3NlbGVjdGlvbkluZGV4OwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIF9zZWxlY3Rpb24zKTsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy11bnNlbGVjdCcsIHsKICAgICAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YXIgX3NlbGVjdGlvbjQgPSB0aGlzLnNlbGVjdGlvbiA/IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5zZWxlY3Rpb24pLCBbcm93RGF0YV0pIDogW3Jvd0RhdGFdOwoKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uNCk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0JywgewogICAgICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgICAgICAgICAgaW5kZXg6IGV2ZW50LmluZGV4LAogICAgICAgICAgICAgICAgICB0eXBlOiAncm93JwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLnJvd1RvdWNoZWQgPSBmYWxzZTsKICAgIH0sCiAgICBvblJvd1JpZ2h0Q2xpY2s6IGZ1bmN0aW9uIG9uUm93UmlnaHRDbGljayhldmVudCkgewogICAgICBEb21IYW5kbGVyLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIGV2ZW50Lm9yaWdpbmFsRXZlbnQudGFyZ2V0LmZvY3VzKCk7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpjb250ZXh0TWVudVNlbGVjdGlvbicsIGV2ZW50LmRhdGEpOwogICAgICB0aGlzLiRlbWl0KCdyb3ctY29udGV4dG1lbnUnLCBldmVudCk7CiAgICB9LAogICAgb25Sb3dUb3VjaEVuZDogZnVuY3Rpb24gb25Sb3dUb3VjaEVuZCgpIHsKICAgICAgdGhpcy5yb3dUb3VjaGVkID0gdHJ1ZTsKICAgIH0sCiAgICBvblJvd0tleURvd246IGZ1bmN0aW9uIG9uUm93S2V5RG93bihlKSB7CiAgICAgIHZhciBldmVudCA9IGUub3JpZ2luYWxFdmVudDsKICAgICAgdmFyIHJvd0RhdGEgPSBlLmRhdGE7CiAgICAgIHZhciByb3dJbmRleCA9IGUuaW5kZXg7CgogICAgICBpZiAodGhpcy5zZWxlY3Rpb25Nb2RlKSB7CiAgICAgICAgdmFyIHJvdyA9IGV2ZW50LnRhcmdldDsKCiAgICAgICAgc3dpdGNoIChldmVudC53aGljaCkgewogICAgICAgICAgLy9kb3duIGFycm93CiAgICAgICAgICBjYXNlIDQwOgogICAgICAgICAgICB2YXIgbmV4dFJvdyA9IHRoaXMuZmluZE5leHRTZWxlY3RhYmxlUm93KHJvdyk7CgogICAgICAgICAgICBpZiAobmV4dFJvdykgewogICAgICAgICAgICAgIG5leHRSb3cuZm9jdXMoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvL3VwIGFycm93CgogICAgICAgICAgY2FzZSAzODoKICAgICAgICAgICAgdmFyIHByZXZSb3cgPSB0aGlzLmZpbmRQcmV2U2VsZWN0YWJsZVJvdyhyb3cpOwoKICAgICAgICAgICAgaWYgKHByZXZSb3cpIHsKICAgICAgICAgICAgICBwcmV2Um93LmZvY3VzKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgLy9lbnRlcgoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIHRoaXMub25Sb3dDbGljayh7CiAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgICAgICBpbmRleDogcm93SW5kZXgKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIC8vbm8gb3AKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZmluZE5leHRTZWxlY3RhYmxlUm93OiBmdW5jdGlvbiBmaW5kTmV4dFNlbGVjdGFibGVSb3cocm93KSB7CiAgICAgIHZhciBuZXh0Um93ID0gcm93Lm5leHRFbGVtZW50U2libGluZzsKCiAgICAgIGlmIChuZXh0Um93KSB7CiAgICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3MobmV4dFJvdywgJ3AtZGF0YXRhYmxlLXJvdycpKSByZXR1cm4gbmV4dFJvdztlbHNlIHJldHVybiB0aGlzLmZpbmROZXh0U2VsZWN0YWJsZVJvdyhuZXh0Um93KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSwKICAgIGZpbmRQcmV2U2VsZWN0YWJsZVJvdzogZnVuY3Rpb24gZmluZFByZXZTZWxlY3RhYmxlUm93KHJvdykgewogICAgICB2YXIgcHJldlJvdyA9IHJvdy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwoKICAgICAgaWYgKHByZXZSb3cpIHsKICAgICAgICBpZiAoRG9tSGFuZGxlci5oYXNDbGFzcyhwcmV2Um93LCAncC1kYXRhdGFibGUtcm93JykpIHJldHVybiBwcmV2Um93O2Vsc2UgcmV0dXJuIHRoaXMuZmluZFByZXZTZWxlY3RhYmxlUm93KHByZXZSb3cpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9LAogICAgdG9nZ2xlUm93V2l0aFJhZGlvOiBmdW5jdGlvbiB0b2dnbGVSb3dXaXRoUmFkaW8oZXZlbnQpIHsKICAgICAgdmFyIHJvd0RhdGEgPSBldmVudC5kYXRhOwoKICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZChyb3dEYXRhKSkgewogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBudWxsKTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QnLCB7CiAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICB0eXBlOiAncmFkaW9idXR0b24nCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIHJvd0RhdGEpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1zZWxlY3QnLCB7CiAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICB0eXBlOiAncmFkaW9idXR0b24nCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVSb3dXaXRoQ2hlY2tib3g6IGZ1bmN0aW9uIHRvZ2dsZVJvd1dpdGhDaGVja2JveChldmVudCkgewogICAgICB2YXIgcm93RGF0YSA9IGV2ZW50LmRhdGE7CgogICAgICBpZiAodGhpcy5pc1NlbGVjdGVkKHJvd0RhdGEpKSB7CiAgICAgICAgdmFyIHNlbGVjdGlvbkluZGV4ID0gdGhpcy5maW5kSW5kZXhJblNlbGVjdGlvbihyb3dEYXRhKTsKCiAgICAgICAgdmFyIF9zZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbi5maWx0ZXIoZnVuY3Rpb24gKHZhbCwgaSkgewogICAgICAgICAgcmV0dXJuIGkgIT0gc2VsZWN0aW9uSW5kZXg7CiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uKTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QnLCB7CiAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICB0eXBlOiAnY2hlY2tib3gnCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIF9zZWxlY3Rpb241ID0gdGhpcy5zZWxlY3Rpb24gPyBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5zZWxlY3Rpb24pIDogW107CgogICAgICAgIF9zZWxlY3Rpb241ID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfc2VsZWN0aW9uNSksIFtyb3dEYXRhXSk7CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIF9zZWxlY3Rpb241KTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0JywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgdHlwZTogJ2NoZWNrYm94JwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgdG9nZ2xlUm93c1dpdGhDaGVja2JveDogZnVuY3Rpb24gdG9nZ2xlUm93c1dpdGhDaGVja2JveChldmVudCkgewogICAgICB2YXIgcHJvY2Vzc2VkRGF0YSA9IHRoaXMucHJvY2Vzc2VkRGF0YTsKICAgICAgdmFyIGNoZWNrZWQgPSB0aGlzLmFsbFJvd3NTZWxlY3RlZDsKCiAgICAgIHZhciBfc2VsZWN0aW9uID0gY2hlY2tlZCA/IFtdIDogcHJvY2Vzc2VkRGF0YSA/IF90b0NvbnN1bWFibGVBcnJheShwcm9jZXNzZWREYXRhKSA6IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnZhbHVlKTsKCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uKTsKICAgICAgaWYgKGNoZWNrZWQpIHRoaXMuJGVtaXQoJ3Jvdy11bnNlbGVjdC1hbGwnLCB7CiAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQKICAgICAgfSk7ZWxzZSB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0LWFsbCcsIHsKICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICBkYXRhOiBfc2VsZWN0aW9uCiAgICAgIH0pOwogICAgfSwKICAgIGlzU2luZ2xlU2VsZWN0aW9uTW9kZTogZnVuY3Rpb24gaXNTaW5nbGVTZWxlY3Rpb25Nb2RlKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb25Nb2RlID09PSAnc2luZ2xlJzsKICAgIH0sCiAgICBpc011bHRpcGxlU2VsZWN0aW9uTW9kZTogZnVuY3Rpb24gaXNNdWx0aXBsZVNlbGVjdGlvbk1vZGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbk1vZGUgPT09ICdtdWx0aXBsZSc7CiAgICB9LAogICAgaXNTZWxlY3RlZDogZnVuY3Rpb24gaXNTZWxlY3RlZChyb3dEYXRhKSB7CiAgICAgIGlmIChyb3dEYXRhICYmIHRoaXMuc2VsZWN0aW9uKSB7CiAgICAgICAgaWYgKHRoaXMuZGF0YUtleSkgewogICAgICAgICAgcmV0dXJuIHRoaXMuZF9zZWxlY3Rpb25LZXlzID8gdGhpcy5kX3NlbGVjdGlvbktleXNbT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShyb3dEYXRhLCB0aGlzLmRhdGFLZXkpXSAhPT0gdW5kZWZpbmVkIDogZmFsc2U7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbiBpbnN0YW5jZW9mIEFycmF5KSByZXR1cm4gdGhpcy5maW5kSW5kZXhJblNlbGVjdGlvbihyb3dEYXRhKSA+IC0xO2Vsc2UgcmV0dXJuIHRoaXMuZXF1YWxzKHJvd0RhdGEsIHRoaXMuc2VsZWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBmaW5kSW5kZXhJblNlbGVjdGlvbjogZnVuY3Rpb24gZmluZEluZGV4SW5TZWxlY3Rpb24ocm93RGF0YSkgewogICAgICByZXR1cm4gdGhpcy5maW5kSW5kZXgocm93RGF0YSwgdGhpcy5zZWxlY3Rpb24pOwogICAgfSwKICAgIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KHJvd0RhdGEsIGNvbGxlY3Rpb24pIHsKICAgICAgdmFyIGluZGV4ID0gLTE7CgogICAgICBpZiAoY29sbGVjdGlvbiAmJiBjb2xsZWN0aW9uLmxlbmd0aCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29sbGVjdGlvbi5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWYgKHRoaXMuZXF1YWxzKHJvd0RhdGEsIGNvbGxlY3Rpb25baV0pKSB7CiAgICAgICAgICAgIGluZGV4ID0gaTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gaW5kZXg7CiAgICB9LAogICAgdXBkYXRlU2VsZWN0aW9uS2V5czogZnVuY3Rpb24gdXBkYXRlU2VsZWN0aW9uS2V5cyhzZWxlY3Rpb24pIHsKICAgICAgdGhpcy5kX3NlbGVjdGlvbktleXMgPSB7fTsKCiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNlbGVjdGlvbikpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHNlbGVjdGlvbiksCiAgICAgICAgICAgIF9zdGVwMjsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBkYXRhID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICB0aGlzLmRfc2VsZWN0aW9uS2V5c1tTdHJpbmcoT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShkYXRhLCB0aGlzLmRhdGFLZXkpKV0gPSAxOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmRfc2VsZWN0aW9uS2V5c1tTdHJpbmcoT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShzZWxlY3Rpb24sIHRoaXMuZGF0YUtleSkpXSA9IDE7CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVFeHBhbmRlZFJvd0tleXM6IGZ1bmN0aW9uIHVwZGF0ZUV4cGFuZGVkUm93S2V5cyhleHBhbmRlZFJvd3MpIHsKICAgICAgaWYgKGV4cGFuZGVkUm93cyAmJiBleHBhbmRlZFJvd3MubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5kX2V4cGFuZGVkUm93S2V5cyA9IHt9OwoKICAgICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGV4cGFuZGVkUm93cyksCiAgICAgICAgICAgIF9zdGVwMzsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBkYXRhID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgICB0aGlzLmRfZXhwYW5kZWRSb3dLZXlzW1N0cmluZyhPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGEsIHRoaXMuZGF0YUtleSkpXSA9IDE7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IzLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZF9leHBhbmRlZFJvd0tleXMgPSBudWxsOwogICAgICB9CiAgICB9LAogICAgdXBkYXRlRWRpdGluZ1Jvd0tleXM6IGZ1bmN0aW9uIHVwZGF0ZUVkaXRpbmdSb3dLZXlzKGVkaXRpbmdSb3dzKSB7CiAgICAgIGlmIChlZGl0aW5nUm93cyAmJiBlZGl0aW5nUm93cy5sZW5ndGgpIHsKICAgICAgICB0aGlzLmRfZWRpdGluZ1Jvd0tleXMgPSB7fTsKCiAgICAgICAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlZGl0aW5nUm93cyksCiAgICAgICAgICAgIF9zdGVwNDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBkYXRhID0gX3N0ZXA0LnZhbHVlOwogICAgICAgICAgICB0aGlzLmRfZWRpdGluZ1Jvd0tleXNbU3RyaW5nKE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YSwgdGhpcy5kYXRhS2V5KSldID0gMTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjQuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3I0LmYoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kX2VkaXRpbmdSb3dLZXlzID0gbnVsbDsKICAgICAgfQogICAgfSwKICAgIGVxdWFsczogZnVuY3Rpb24gZXF1YWxzKGRhdGExLCBkYXRhMikgewogICAgICByZXR1cm4gdGhpcy5jb21wYXJlU2VsZWN0aW9uQnkgPT09ICdlcXVhbHMnID8gZGF0YTEgPT09IGRhdGEyIDogT2JqZWN0VXRpbHMuZXF1YWxzKGRhdGExLCBkYXRhMiwgdGhpcy5kYXRhS2V5KTsKICAgIH0sCiAgICBzZWxlY3RSYW5nZTogZnVuY3Rpb24gc2VsZWN0UmFuZ2UoZXZlbnQpIHsKICAgICAgdmFyIHJhbmdlU3RhcnQsIHJhbmdlRW5kOwoKICAgICAgaWYgKHRoaXMucmFuZ2VSb3dJbmRleCA+IHRoaXMuYW5jaG9yUm93SW5kZXgpIHsKICAgICAgICByYW5nZVN0YXJ0ID0gdGhpcy5hbmNob3JSb3dJbmRleDsKICAgICAgICByYW5nZUVuZCA9IHRoaXMucmFuZ2VSb3dJbmRleDsKICAgICAgfSBlbHNlIGlmICh0aGlzLnJhbmdlUm93SW5kZXggPCB0aGlzLmFuY2hvclJvd0luZGV4KSB7CiAgICAgICAgcmFuZ2VTdGFydCA9IHRoaXMucmFuZ2VSb3dJbmRleDsKICAgICAgICByYW5nZUVuZCA9IHRoaXMuYW5jaG9yUm93SW5kZXg7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmFuZ2VTdGFydCA9IHRoaXMucmFuZ2VSb3dJbmRleDsKICAgICAgICByYW5nZUVuZCA9IHRoaXMucmFuZ2VSb3dJbmRleDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMubGF6eSAmJiB0aGlzLnBhZ2luYXRvcikgewogICAgICAgIHJhbmdlU3RhcnQgLT0gdGhpcy5maXJzdDsKICAgICAgICByYW5nZUVuZCAtPSB0aGlzLmZpcnN0OwogICAgICB9CgogICAgICB2YXIgdmFsdWUgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgIHZhciBfc2VsZWN0aW9uID0gW107CgogICAgICBmb3IgKHZhciBpID0gcmFuZ2VTdGFydDsgaSA8PSByYW5nZUVuZDsgaSsrKSB7CiAgICAgICAgdmFyIHJhbmdlUm93RGF0YSA9IHZhbHVlW2ldOwoKICAgICAgICBfc2VsZWN0aW9uLnB1c2gocmFuZ2VSb3dEYXRhKTsKCiAgICAgICAgdGhpcy4kZW1pdCgncm93LXNlbGVjdCcsIHsKICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgZGF0YTogcmFuZ2VSb3dEYXRhLAogICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIF9zZWxlY3Rpb24pOwogICAgfSwKICAgIGV4cG9ydENTVjogZnVuY3Rpb24gZXhwb3J0Q1NWKG9wdGlvbnMpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHRoaXMucHJvY2Vzc2VkRGF0YTsKICAgICAgdmFyIGNzdiA9ICJcdUZFRkYiOwoKICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5zZWxlY3Rpb25Pbmx5KSB7CiAgICAgICAgZGF0YSA9IHRoaXMuc2VsZWN0aW9uIHx8IFtdOwogICAgICB9IC8vaGVhZGVycwoKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb2x1bW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGNvbHVtbiA9IHRoaXMuY29sdW1uc1tpXTsKCiAgICAgICAgaWYgKGNvbHVtbi5leHBvcnRhYmxlICE9PSBmYWxzZSAmJiBjb2x1bW4uZmllbGQpIHsKICAgICAgICAgIGNzdiArPSAnIicgKyAoY29sdW1uLmhlYWRlciB8fCBjb2x1bW4uZmllbGQpICsgJyInOwoKICAgICAgICAgIGlmIChpIDwgdGhpcy5jb2x1bW5zLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgY3N2ICs9IHRoaXMuY3N2U2VwYXJhdG9yOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSAvL2JvZHkKCgogICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKHJlY29yZCkgewogICAgICAgIGNzdiArPSAnXG4nOwoKICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgX3RoaXMzLmNvbHVtbnMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICB2YXIgX2NvbHVtbiA9IF90aGlzMy5jb2x1bW5zW19pXTsKCiAgICAgICAgICBpZiAoX2NvbHVtbi5leHBvcnRhYmxlICE9PSBmYWxzZSAmJiBfY29sdW1uLmZpZWxkKSB7CiAgICAgICAgICAgIHZhciBjZWxsRGF0YSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEocmVjb3JkLCBfY29sdW1uLmZpZWxkKTsKCiAgICAgICAgICAgIGlmIChjZWxsRGF0YSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgaWYgKF90aGlzMy5leHBvcnRGdW5jdGlvbikgewogICAgICAgICAgICAgICAgY2VsbERhdGEgPSBfdGhpczMuZXhwb3J0RnVuY3Rpb24oewogICAgICAgICAgICAgICAgICBkYXRhOiBjZWxsRGF0YSwKICAgICAgICAgICAgICAgICAgZmllbGQ6IF9jb2x1bW4uZmllbGQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSBjZWxsRGF0YSA9IFN0cmluZyhjZWxsRGF0YSkucmVwbGFjZSgvIi9nLCAnIiInKTsKICAgICAgICAgICAgfSBlbHNlIGNlbGxEYXRhID0gJyc7CgogICAgICAgICAgICBjc3YgKz0gJyInICsgY2VsbERhdGEgKyAnIic7CgogICAgICAgICAgICBpZiAoX2kgPCBfdGhpczMuY29sdW1ucy5sZW5ndGggLSAxKSB7CiAgICAgICAgICAgICAgY3N2ICs9IF90aGlzMy5jc3ZTZXBhcmF0b3I7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3ZdLCB7CiAgICAgICAgdHlwZTogJ3RleHQvY3N2O2NoYXJzZXQ9dXRmLTg7JwogICAgICB9KTsKCiAgICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IpIHsKICAgICAgICBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihibG9iLCB0aGlzLmV4cG9ydEZpbGVuYW1lICsgJy5jc3YnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgICAgICBsaW5rLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTsKCiAgICAgICAgaWYgKGxpbmsuZG93bmxvYWQgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpKTsKICAgICAgICAgIGxpbmsuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsIHRoaXMuZXhwb3J0RmlsZW5hbWUgKyAnLmNzdicpOwogICAgICAgICAgbGluay5jbGljaygpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjc3YgPSAnZGF0YTp0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04LCcgKyBjc3Y7CiAgICAgICAgICB3aW5kb3cub3BlbihlbmNvZGVVUkkoY3N2KSk7CiAgICAgICAgfQoKICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspOwogICAgICB9CiAgICB9LAogICAgcmVzZXRQYWdlOiBmdW5jdGlvbiByZXNldFBhZ2UoKSB7CiAgICAgIHRoaXMuZF9maXJzdCA9IDA7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpmaXJzdCcsIHRoaXMuZF9maXJzdCk7CiAgICB9LAogICAgb25Db2x1bW5SZXNpemVTdGFydDogZnVuY3Rpb24gb25Db2x1bW5SZXNpemVTdGFydChldmVudCkgewogICAgICB2YXIgY29udGFpbmVyTGVmdCA9IERvbUhhbmRsZXIuZ2V0T2Zmc2V0KHRoaXMuJGVsKS5sZWZ0OwogICAgICB0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQgPSBldmVudC50YXJnZXQucGFyZW50RWxlbWVudDsKICAgICAgdGhpcy5jb2x1bW5SZXNpemluZyA9IHRydWU7CiAgICAgIHRoaXMubGFzdFJlc2l6ZUhlbHBlclggPSBldmVudC5wYWdlWCAtIGNvbnRhaW5lckxlZnQgKyB0aGlzLiRlbC5zY3JvbGxMZWZ0OwogICAgICB0aGlzLmJpbmRDb2x1bW5SZXNpemVFdmVudHMoKTsKICAgIH0sCiAgICBvbkNvbHVtblJlc2l6ZTogZnVuY3Rpb24gb25Db2x1bW5SZXNpemUoZXZlbnQpIHsKICAgICAgdmFyIGNvbnRhaW5lckxlZnQgPSBEb21IYW5kbGVyLmdldE9mZnNldCh0aGlzLiRlbCkubGVmdDsKICAgICAgRG9tSGFuZGxlci5hZGRDbGFzcyh0aGlzLiRlbCwgJ3AtdW5zZWxlY3RhYmxlLXRleHQnKTsKICAgICAgdGhpcy4kcmVmcy5yZXNpemVIZWxwZXIuc3R5bGUuaGVpZ2h0ID0gdGhpcy4kZWwub2Zmc2V0SGVpZ2h0ICsgJ3B4JzsKICAgICAgdGhpcy4kcmVmcy5yZXNpemVIZWxwZXIuc3R5bGUudG9wID0gMCArICdweCc7CiAgICAgIHRoaXMuJHJlZnMucmVzaXplSGVscGVyLnN0eWxlLmxlZnQgPSBldmVudC5wYWdlWCAtIGNvbnRhaW5lckxlZnQgKyB0aGlzLiRlbC5zY3JvbGxMZWZ0ICsgJ3B4JzsKICAgICAgdGhpcy4kcmVmcy5yZXNpemVIZWxwZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICB9LAogICAgb25Db2x1bW5SZXNpemVFbmQ6IGZ1bmN0aW9uIG9uQ29sdW1uUmVzaXplRW5kKCkgewogICAgICB2YXIgZGVsdGEgPSB0aGlzLiRyZWZzLnJlc2l6ZUhlbHBlci5vZmZzZXRMZWZ0IC0gdGhpcy5sYXN0UmVzaXplSGVscGVyWDsKICAgICAgdmFyIGNvbHVtbldpZHRoID0gdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50Lm9mZnNldFdpZHRoOwogICAgICB2YXIgbmV3Q29sdW1uV2lkdGggPSBjb2x1bW5XaWR0aCArIGRlbHRhOwogICAgICB2YXIgbWluV2lkdGggPSB0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQuc3R5bGUubWluV2lkdGggfHwgMTU7CgogICAgICBpZiAoY29sdW1uV2lkdGggKyBkZWx0YSA+IHBhcnNlSW50KG1pbldpZHRoLCAxMCkpIHsKICAgICAgICBpZiAodGhpcy5jb2x1bW5SZXNpemVNb2RlID09PSAnZml0JykgewogICAgICAgICAgdmFyIG5leHRDb2x1bW4gPSB0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nOwogICAgICAgICAgdmFyIG5leHRDb2x1bW5XaWR0aCA9IG5leHRDb2x1bW4ub2Zmc2V0V2lkdGggLSBkZWx0YTsKCiAgICAgICAgICBpZiAobmV3Q29sdW1uV2lkdGggPiAxNSAmJiBuZXh0Q29sdW1uV2lkdGggPiAxNSkgewogICAgICAgICAgICBpZiAodGhpcy5zY3JvbGxhYmxlKSB7CiAgICAgICAgICAgICAgdmFyIHNjcm9sbGFibGVWaWV3ID0gdGhpcy5maW5kUGFyZW50U2Nyb2xsYWJsZVZpZXcodGhpcy5yZXNpemVDb2x1bW5FbGVtZW50KTsKICAgICAgICAgICAgICB2YXIgc2Nyb2xsYWJsZUJvZHlUYWJsZSA9IERvbUhhbmRsZXIuZmluZFNpbmdsZShzY3JvbGxhYmxlVmlldywgJ3RhYmxlLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keS10YWJsZScpOwogICAgICAgICAgICAgIHZhciBzY3JvbGxhYmxlSGVhZGVyVGFibGUgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZVZpZXcsICd0YWJsZS5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWhlYWRlci10YWJsZScpOwogICAgICAgICAgICAgIHZhciBzY3JvbGxhYmxlRm9vdGVyVGFibGUgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZVZpZXcsICd0YWJsZS5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWZvb3Rlci10YWJsZScpOwogICAgICAgICAgICAgIHZhciByZXNpemVDb2x1bW5JbmRleCA9IERvbUhhbmRsZXIuaW5kZXgodGhpcy5yZXNpemVDb2x1bW5FbGVtZW50KTsKICAgICAgICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVIZWFkZXJUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBuZXh0Q29sdW1uV2lkdGgpOwogICAgICAgICAgICAgIHRoaXMucmVzaXplQ29sR3JvdXAoc2Nyb2xsYWJsZUJvZHlUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBuZXh0Q29sdW1uV2lkdGgpOwogICAgICAgICAgICAgIHRoaXMucmVzaXplQ29sR3JvdXAoc2Nyb2xsYWJsZUZvb3RlclRhYmxlLCByZXNpemVDb2x1bW5JbmRleCwgbmV3Q29sdW1uV2lkdGgsIG5leHRDb2x1bW5XaWR0aCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50LnN0eWxlLndpZHRoID0gbmV3Q29sdW1uV2lkdGggKyAncHgnOwoKICAgICAgICAgICAgICBpZiAobmV4dENvbHVtbikgewogICAgICAgICAgICAgICAgbmV4dENvbHVtbi5zdHlsZS53aWR0aCA9IG5leHRDb2x1bW5XaWR0aCArICdweCc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbHVtblJlc2l6ZU1vZGUgPT09ICdleHBhbmQnKSB7CiAgICAgICAgICBpZiAodGhpcy5zY3JvbGxhYmxlKSB7CiAgICAgICAgICAgIHRoaXMucmVzaXplU2Nyb2xsYWJsZVRhYmxlKHRoaXMucmVzaXplQ29sdW1uRWxlbWVudCwgbmV3Q29sdW1uV2lkdGgsIGRlbHRhKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMudGFibGUuc3R5bGUud2lkdGggPSB0aGlzLiRyZWZzLnRhYmxlLm9mZnNldFdpZHRoICsgZGVsdGEgKyAncHgnOwogICAgICAgICAgICB0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQuc3R5bGUud2lkdGggPSBuZXdDb2x1bW5XaWR0aCArICdweCc7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRlbWl0KCdjb2x1bW4tcmVzaXplLWVuZCcsIHsKICAgICAgICAgIGVsZW1lbnQ6IHRoaXMucmVzaXplQ29sdW1uRWxlbWVudCwKICAgICAgICAgIGRlbHRhOiBkZWx0YQogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzLnJlc2l6ZUhlbHBlci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICB0aGlzLnJlc2l6ZUNvbHVtbiA9IG51bGw7CiAgICAgIERvbUhhbmRsZXIucmVtb3ZlQ2xhc3ModGhpcy4kZWwsICdwLXVuc2VsZWN0YWJsZS10ZXh0Jyk7CiAgICAgIHRoaXMudW5iaW5kQ29sdW1uUmVzaXplRXZlbnRzKCk7CgogICAgICBpZiAodGhpcy5pc1N0YXRlZnVsKCkpIHsKICAgICAgICB0aGlzLnNhdmVTdGF0ZSgpOwogICAgICB9CiAgICB9LAogICAgcmVzaXplQ29sR3JvdXA6IGZ1bmN0aW9uIHJlc2l6ZUNvbEdyb3VwKHRhYmxlLCByZXNpemVDb2x1bW5JbmRleCwgbmV3Q29sdW1uV2lkdGgsIG5leHRDb2x1bW5XaWR0aCkgewogICAgICBpZiAodGFibGUpIHsKICAgICAgICB2YXIgY29sR3JvdXAgPSB0YWJsZS5jaGlsZHJlblswXS5ub2RlTmFtZSA9PT0gJ0NPTEdST1VQJyA/IHRhYmxlLmNoaWxkcmVuWzBdIDogbnVsbDsKCiAgICAgICAgaWYgKGNvbEdyb3VwKSB7CiAgICAgICAgICB2YXIgY29sID0gY29sR3JvdXAuY2hpbGRyZW5bcmVzaXplQ29sdW1uSW5kZXhdOwogICAgICAgICAgdmFyIG5leHRDb2wgPSBjb2wubmV4dEVsZW1lbnRTaWJsaW5nOwogICAgICAgICAgY29sLnN0eWxlLndpZHRoID0gbmV3Q29sdW1uV2lkdGggKyAncHgnOwoKICAgICAgICAgIGlmIChuZXh0Q29sICYmIG5leHRDb2x1bW5XaWR0aCkgewogICAgICAgICAgICBuZXh0Q29sLnN0eWxlLndpZHRoID0gbmV4dENvbHVtbldpZHRoICsgJ3B4JzsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJTY3JvbGxhYmxlIHRhYmxlcyByZXF1aXJlIGEgY29sZ3JvdXAgdG8gc3VwcG9ydCByZXNpemFibGUgY29sdW1ucyIpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGJpbmRDb2x1bW5SZXNpemVFdmVudHM6IGZ1bmN0aW9uIGJpbmRDb2x1bW5SZXNpemVFdmVudHMoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplTGlzdGVuZXIpIHsKICAgICAgICB0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplTGlzdGVuZXIgPSBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoX3RoaXM0LmNvbHVtblJlc2l6aW5nKSB7CiAgICAgICAgICAgIF90aGlzNC5vbkNvbHVtblJlc2l6ZShldmVudCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUVuZExpc3RlbmVyKSB7CiAgICAgICAgdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUVuZExpc3RlbmVyID0gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChfdGhpczQuY29sdW1uUmVzaXppbmcpIHsKICAgICAgICAgICAgX3RoaXM0LmNvbHVtblJlc2l6aW5nID0gZmFsc2U7CgogICAgICAgICAgICBfdGhpczQub25Db2x1bW5SZXNpemVFbmQoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHVuYmluZENvbHVtblJlc2l6ZUV2ZW50czogZnVuY3Rpb24gdW5iaW5kQ29sdW1uUmVzaXplRXZlbnRzKCkgewogICAgICBpZiAodGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUxpc3RlbmVyKSB7CiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZG9jdW1lbnQnLCB0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplTGlzdGVuZXIpOwogICAgICAgIHRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVMaXN0ZW5lciA9IG51bGw7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplRW5kTGlzdGVuZXIpIHsKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdkb2N1bWVudCcsIHRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVFbmRMaXN0ZW5lcik7CiAgICAgICAgdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUVuZExpc3RlbmVyID0gbnVsbDsKICAgICAgfQogICAgfSwKICAgIG9uQ29sdW1uSGVhZGVyTW91c2VEb3duOiBmdW5jdGlvbiBvbkNvbHVtbkhlYWRlck1vdXNlRG93bihlKSB7CiAgICAgIHZhciBldmVudCA9IGUub3JpZ2luYWxFdmVudDsKICAgICAgdmFyIGNvbHVtbiA9IGUuY29sdW1uOwoKICAgICAgaWYgKHRoaXMucmVvcmRlcmFibGVDb2x1bW5zICYmIGNvbHVtbi5yZW9yZGVyYWJsZUNvbHVtbikgewogICAgICAgIGlmIChldmVudC50YXJnZXQubm9kZU5hbWUgPT09ICdJTlBVVCcgfHwgZXZlbnQudGFyZ2V0Lm5vZGVOYW1lID09PSAnVEVYVEFSRUEnIHx8IERvbUhhbmRsZXIuaGFzQ2xhc3MoZXZlbnQudGFyZ2V0LCAncC1jb2x1bW4tcmVzaXplcicpKSBldmVudC5jdXJyZW50VGFyZ2V0LmRyYWdnYWJsZSA9IGZhbHNlO2Vsc2UgZXZlbnQuY3VycmVudFRhcmdldC5kcmFnZ2FibGUgPSB0cnVlOwogICAgICB9CiAgICB9LAogICAgb25Db2x1bW5IZWFkZXJEcmFnU3RhcnQ6IGZ1bmN0aW9uIG9uQ29sdW1uSGVhZGVyRHJhZ1N0YXJ0KGV2ZW50KSB7CiAgICAgIGlmICh0aGlzLmNvbHVtblJlc2l6aW5nKSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuY29sUmVvcmRlckljb25XaWR0aCA9IERvbUhhbmRsZXIuZ2V0SGlkZGVuRWxlbWVudE91dGVyV2lkdGgodGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXApOwogICAgICB0aGlzLmNvbFJlb3JkZXJJY29uSGVpZ2h0ID0gRG9tSGFuZGxlci5nZXRIaWRkZW5FbGVtZW50T3V0ZXJIZWlnaHQodGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXApOwogICAgICB0aGlzLmRyYWdnZWRDb2x1bW4gPSB0aGlzLmZpbmRQYXJlbnRIZWFkZXIoZXZlbnQudGFyZ2V0KTsKICAgICAgZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQnLCAnYicpOyAvLyBGaXJlZm94IHJlcXVpcmVzIHRoaXMgdG8gbWFrZSBkcmFnZ2luZyBwb3NzaWJsZQogICAgfSwKICAgIG9uQ29sdW1uSGVhZGVyRHJhZ092ZXI6IGZ1bmN0aW9uIG9uQ29sdW1uSGVhZGVyRHJhZ092ZXIoZXZlbnQpIHsKICAgICAgdmFyIGRyb3BIZWFkZXIgPSB0aGlzLmZpbmRQYXJlbnRIZWFkZXIoZXZlbnQudGFyZ2V0KTsKCiAgICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucyAmJiB0aGlzLmRyYWdnZWRDb2x1bW4gJiYgZHJvcEhlYWRlcikgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdmFyIGNvbnRhaW5lck9mZnNldCA9IERvbUhhbmRsZXIuZ2V0T2Zmc2V0KHRoaXMuJGVsKTsKICAgICAgICB2YXIgZHJvcEhlYWRlck9mZnNldCA9IERvbUhhbmRsZXIuZ2V0T2Zmc2V0KGRyb3BIZWFkZXIpOwoKICAgICAgICBpZiAodGhpcy5kcmFnZ2VkQ29sdW1uICE9PSBkcm9wSGVhZGVyKSB7CiAgICAgICAgICB2YXIgdGFyZ2V0TGVmdCA9IGRyb3BIZWFkZXJPZmZzZXQubGVmdCAtIGNvbnRhaW5lck9mZnNldC5sZWZ0OwogICAgICAgICAgdmFyIGNvbHVtbkNlbnRlciA9IGRyb3BIZWFkZXJPZmZzZXQubGVmdCArIGRyb3BIZWFkZXIub2Zmc2V0V2lkdGggLyAyOwogICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXAuc3R5bGUudG9wID0gZHJvcEhlYWRlck9mZnNldC50b3AgLSBjb250YWluZXJPZmZzZXQudG9wIC0gKHRoaXMuY29sUmVvcmRlckljb25IZWlnaHQgLSAxKSArICdweCc7CiAgICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JEb3duLnN0eWxlLnRvcCA9IGRyb3BIZWFkZXJPZmZzZXQudG9wIC0gY29udGFpbmVyT2Zmc2V0LnRvcCArIGRyb3BIZWFkZXIub2Zmc2V0SGVpZ2h0ICsgJ3B4JzsKCiAgICAgICAgICBpZiAoZXZlbnQucGFnZVggPiBjb2x1bW5DZW50ZXIpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXAuc3R5bGUubGVmdCA9IHRhcmdldExlZnQgKyBkcm9wSGVhZGVyLm9mZnNldFdpZHRoIC0gTWF0aC5jZWlsKHRoaXMuY29sUmVvcmRlckljb25XaWR0aCAvIDIpICsgJ3B4JzsKICAgICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yRG93bi5zdHlsZS5sZWZ0ID0gdGFyZ2V0TGVmdCArIGRyb3BIZWFkZXIub2Zmc2V0V2lkdGggLSBNYXRoLmNlaWwodGhpcy5jb2xSZW9yZGVySWNvbldpZHRoIC8gMikgKyAncHgnOwogICAgICAgICAgICB0aGlzLmRyb3BQb3NpdGlvbiA9IDE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JVcC5zdHlsZS5sZWZ0ID0gdGFyZ2V0TGVmdCAtIE1hdGguY2VpbCh0aGlzLmNvbFJlb3JkZXJJY29uV2lkdGggLyAyKSArICdweCc7CiAgICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvckRvd24uc3R5bGUubGVmdCA9IHRhcmdldExlZnQgLSBNYXRoLmNlaWwodGhpcy5jb2xSZW9yZGVySWNvbldpZHRoIC8gMikgKyAncHgnOwogICAgICAgICAgICB0aGlzLmRyb3BQb3NpdGlvbiA9IC0xOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yRG93bi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBvbkNvbHVtbkhlYWRlckRyYWdMZWF2ZTogZnVuY3Rpb24gb25Db2x1bW5IZWFkZXJEcmFnTGVhdmUoZXZlbnQpIHsKICAgICAgaWYgKHRoaXMucmVvcmRlcmFibGVDb2x1bW5zICYmIHRoaXMuZHJhZ2dlZENvbHVtbikgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXAuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JEb3duLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgIH0KICAgIH0sCiAgICBvbkNvbHVtbkhlYWRlckRyb3A6IGZ1bmN0aW9uIG9uQ29sdW1uSGVhZGVyRHJvcChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgaWYgKHRoaXMuZHJhZ2dlZENvbHVtbikgewogICAgICAgIHZhciBkcmFnSW5kZXggPSBEb21IYW5kbGVyLmluZGV4KHRoaXMuZHJhZ2dlZENvbHVtbik7CiAgICAgICAgdmFyIGRyb3BJbmRleCA9IERvbUhhbmRsZXIuaW5kZXgodGhpcy5maW5kUGFyZW50SGVhZGVyKGV2ZW50LnRhcmdldCkpOwogICAgICAgIHZhciBhbGxvd0Ryb3AgPSBkcmFnSW5kZXggIT09IGRyb3BJbmRleDsKCiAgICAgICAgaWYgKGFsbG93RHJvcCAmJiAoZHJvcEluZGV4IC0gZHJhZ0luZGV4ID09PSAxICYmIHRoaXMuZHJvcFBvc2l0aW9uID09PSAtMSB8fCBkcmFnSW5kZXggLSBkcm9wSW5kZXggPT09IDEgJiYgdGhpcy5kcm9wUG9zaXRpb24gPT09IDEpKSB7CiAgICAgICAgICBhbGxvd0Ryb3AgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmIChhbGxvd0Ryb3ApIHsKICAgICAgICAgIE9iamVjdFV0aWxzLnJlb3JkZXJBcnJheSh0aGlzLmRfY29sdW1uT3JkZXIsIGRyYWdJbmRleCwgZHJvcEluZGV4KTsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2NvbHVtbi1yZW9yZGVyJywgewogICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgICAgZHJhZ0luZGV4OiBkcmFnSW5kZXgsCiAgICAgICAgICAgIGRyb3BJbmRleDogZHJvcEluZGV4CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yRG93bi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIHRoaXMuZHJhZ2dlZENvbHVtbi5kcmFnZ2FibGUgPSBmYWxzZTsKICAgICAgICB0aGlzLmRyYWdnZWRDb2x1bW4gPSBudWxsOwogICAgICAgIHRoaXMuZHJvcFBvc2l0aW9uID0gbnVsbDsKICAgICAgfQogICAgfSwKICAgIGZpbmRQYXJlbnRIZWFkZXI6IGZ1bmN0aW9uIGZpbmRQYXJlbnRIZWFkZXIoZWxlbWVudCkgewogICAgICBpZiAoZWxlbWVudC5ub2RlTmFtZSA9PT0gJ1RIJykgewogICAgICAgIHJldHVybiBlbGVtZW50OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwYXJlbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7CgogICAgICAgIHdoaWxlIChwYXJlbnQubm9kZU5hbWUgIT09ICdUSCcpIHsKICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnRFbGVtZW50OwogICAgICAgICAgaWYgKCFwYXJlbnQpIGJyZWFrOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHBhcmVudDsKICAgICAgfQogICAgfSwKICAgIGZpbmRQYXJlbnRTY3JvbGxhYmxlVmlldzogZnVuY3Rpb24gZmluZFBhcmVudFNjcm9sbGFibGVWaWV3KGNvbHVtbikgewogICAgICBpZiAoY29sdW1uKSB7CiAgICAgICAgdmFyIHBhcmVudCA9IGNvbHVtbi5wYXJlbnRFbGVtZW50OwoKICAgICAgICB3aGlsZSAocGFyZW50ICYmICFEb21IYW5kbGVyLmhhc0NsYXNzKHBhcmVudCwgJ3AtZGF0YXRhYmxlLXNjcm9sbGFibGUtdmlldycpKSB7CiAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50RWxlbWVudDsKICAgICAgICB9CgogICAgICAgIHJldHVybiBwYXJlbnQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBmaW5kQ29sdW1uQnlLZXk6IGZ1bmN0aW9uIGZpbmRDb2x1bW5CeUtleShjb2x1bW5zLCBrZXkpIHsKICAgICAgaWYgKGNvbHVtbnMgJiYgY29sdW1ucy5sZW5ndGgpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbHVtbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHZhciBjaGlsZCA9IGNvbHVtbnNbaV07CgogICAgICAgICAgaWYgKGNoaWxkLmNvbHVtbktleSA9PT0ga2V5IHx8IGNoaWxkLmZpZWxkID09PSBrZXkpIHsKICAgICAgICAgICAgcmV0dXJuIGNoaWxkOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgcmVzaXplU2Nyb2xsYWJsZVRhYmxlOiBmdW5jdGlvbiByZXNpemVTY3JvbGxhYmxlVGFibGUoY29sdW1uLCBuZXdDb2x1bW5XaWR0aCwgZGVsdGEpIHsKICAgICAgdmFyIHNjcm9sbGFibGVWaWV3ID0gY29sdW1uID8gdGhpcy5maW5kUGFyZW50U2Nyb2xsYWJsZVZpZXcoY29sdW1uKSA6IHRoaXMuJGVsOwogICAgICB2YXIgc2Nyb2xsYWJsZUJvZHkgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZVZpZXcsICcucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1ib2R5Jyk7CiAgICAgIHZhciBzY3JvbGxhYmxlSGVhZGVyID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVWaWV3LCAnLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyJyk7CiAgICAgIHZhciBzY3JvbGxhYmxlRm9vdGVyID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVWaWV3LCAnLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtZm9vdGVyJyk7CiAgICAgIHZhciBzY3JvbGxhYmxlQm9keVRhYmxlID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVCb2R5LCAndGFibGUucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1ib2R5LXRhYmxlJyk7CiAgICAgIHZhciBzY3JvbGxhYmxlSGVhZGVyVGFibGUgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZUhlYWRlciwgJ3RhYmxlLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyLXRhYmxlJyk7CiAgICAgIHZhciBzY3JvbGxhYmxlRm9vdGVyVGFibGUgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZUZvb3RlciwgJ3RhYmxlLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtZm9vdGVyLXRhYmxlJyk7CiAgICAgIHZhciBzY3JvbGxhYmxlQm9keVRhYmxlV2lkdGggPSBjb2x1bW4gPyBzY3JvbGxhYmxlQm9keVRhYmxlLm9mZnNldFdpZHRoICsgZGVsdGEgOiBuZXdDb2x1bW5XaWR0aDsKICAgICAgdmFyIHNjcm9sbGFibGVIZWFkZXJUYWJsZVdpZHRoID0gY29sdW1uID8gc2Nyb2xsYWJsZUhlYWRlclRhYmxlLm9mZnNldFdpZHRoICsgZGVsdGEgOiBuZXdDb2x1bW5XaWR0aDsKICAgICAgdmFyIGlzQ29udGFpbmVySW5WaWV3cG9ydCA9IHRoaXMuJGVsLm9mZnNldFdpZHRoID49IHBhcnNlRmxvYXQoc2Nyb2xsYWJsZUJvZHlUYWJsZVdpZHRoKTsKCiAgICAgIHZhciBzZXRXaWR0aCA9IGZ1bmN0aW9uIHNldFdpZHRoKGNvbnRhaW5lciwgdGFibGUsIHdpZHRoLCBpc0NvbnRhaW5lckluVmlld3BvcnQpIHsKICAgICAgICBpZiAoY29udGFpbmVyICYmIHRhYmxlKSB7CiAgICAgICAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSBpc0NvbnRhaW5lckluVmlld3BvcnQgPyB3aWR0aCArIERvbUhhbmRsZXIuY2FsY3VsYXRlU2Nyb2xsYmFyV2lkdGgoc2Nyb2xsYWJsZUJvZHkpICsgJ3B4JyA6ICdhdXRvJzsKICAgICAgICAgIHRhYmxlLnN0eWxlLndpZHRoID0gd2lkdGggKyAncHgnOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHNldFdpZHRoKHNjcm9sbGFibGVCb2R5LCBzY3JvbGxhYmxlQm9keVRhYmxlLCBzY3JvbGxhYmxlQm9keVRhYmxlV2lkdGgsIGlzQ29udGFpbmVySW5WaWV3cG9ydCk7CiAgICAgIHNldFdpZHRoKHNjcm9sbGFibGVIZWFkZXIsIHNjcm9sbGFibGVIZWFkZXJUYWJsZSwgc2Nyb2xsYWJsZUhlYWRlclRhYmxlV2lkdGgsIGlzQ29udGFpbmVySW5WaWV3cG9ydCk7CiAgICAgIHNldFdpZHRoKHNjcm9sbGFibGVGb290ZXIsIHNjcm9sbGFibGVGb290ZXJUYWJsZSwgc2Nyb2xsYWJsZUhlYWRlclRhYmxlV2lkdGgsIGlzQ29udGFpbmVySW5WaWV3cG9ydCk7CgogICAgICBpZiAoY29sdW1uKSB7CiAgICAgICAgdmFyIHJlc2l6ZUNvbHVtbkluZGV4ID0gRG9tSGFuZGxlci5pbmRleChjb2x1bW4pOwogICAgICAgIHRoaXMucmVzaXplQ29sR3JvdXAoc2Nyb2xsYWJsZUhlYWRlclRhYmxlLCByZXNpemVDb2x1bW5JbmRleCwgbmV3Q29sdW1uV2lkdGgsIG51bGwpOwogICAgICAgIHRoaXMucmVzaXplQ29sR3JvdXAoc2Nyb2xsYWJsZUJvZHlUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBudWxsKTsKICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVGb290ZXJUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBudWxsKTsKICAgICAgfQogICAgfSwKICAgIG9uUm93TW91c2VEb3duOiBmdW5jdGlvbiBvblJvd01vdXNlRG93bihldmVudCkgewogICAgICBpZiAoRG9tSGFuZGxlci5oYXNDbGFzcyhldmVudC50YXJnZXQsICdwLWRhdGF0YWJsZS1yZW9yZGVyYWJsZXJvdy1oYW5kbGUnKSkgZXZlbnQuY3VycmVudFRhcmdldC5kcmFnZ2FibGUgPSB0cnVlO2Vsc2UgZXZlbnQuY3VycmVudFRhcmdldC5kcmFnZ2FibGUgPSBmYWxzZTsKICAgIH0sCiAgICBvblJvd0RyYWdTdGFydDogZnVuY3Rpb24gb25Sb3dEcmFnU3RhcnQoZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CiAgICAgIHZhciBpbmRleCA9IGUuaW5kZXg7CiAgICAgIHRoaXMucm93RHJhZ2dpbmcgPSB0cnVlOwogICAgICB0aGlzLmRyYWdnZWRSb3dJbmRleCA9IGluZGV4OwogICAgICBldmVudC5kYXRhVHJhbnNmZXIuc2V0RGF0YSgndGV4dCcsICdiJyk7IC8vIEZvciBmaXJlZm94CiAgICB9LAogICAgb25Sb3dEcmFnT3ZlcjogZnVuY3Rpb24gb25Sb3dEcmFnT3ZlcihlKSB7CiAgICAgIHZhciBldmVudCA9IGUub3JpZ2luYWxFdmVudDsKICAgICAgdmFyIGluZGV4ID0gZS5pbmRleDsKCiAgICAgIGlmICh0aGlzLnJvd0RyYWdnaW5nICYmIHRoaXMuZHJhZ2dlZFJvd0luZGV4ICE9PSBpbmRleCkgewogICAgICAgIHZhciByb3dFbGVtZW50ID0gZXZlbnQuY3VycmVudFRhcmdldDsKICAgICAgICB2YXIgcm93WSA9IERvbUhhbmRsZXIuZ2V0T2Zmc2V0KHJvd0VsZW1lbnQpLnRvcCArIERvbUhhbmRsZXIuZ2V0V2luZG93U2Nyb2xsVG9wKCk7CiAgICAgICAgdmFyIHBhZ2VZID0gZXZlbnQucGFnZVk7CiAgICAgICAgdmFyIHJvd01pZFkgPSByb3dZICsgRG9tSGFuZGxlci5nZXRPdXRlckhlaWdodChyb3dFbGVtZW50KSAvIDI7CiAgICAgICAgdmFyIHByZXZSb3dFbGVtZW50ID0gcm93RWxlbWVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwoKICAgICAgICBpZiAocGFnZVkgPCByb3dNaWRZKSB7CiAgICAgICAgICBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtYm90dG9tJyk7CiAgICAgICAgICB0aGlzLmRyb3BwZWRSb3dJbmRleCA9IGluZGV4OwogICAgICAgICAgaWYgKHByZXZSb3dFbGVtZW50KSBEb21IYW5kbGVyLmFkZENsYXNzKHByZXZSb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LWJvdHRvbScpO2Vsc2UgRG9tSGFuZGxlci5hZGRDbGFzcyhyb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LXRvcCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAocHJldlJvd0VsZW1lbnQpIERvbUhhbmRsZXIucmVtb3ZlQ2xhc3MocHJldlJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtYm90dG9tJyk7ZWxzZSBEb21IYW5kbGVyLmFkZENsYXNzKHJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtdG9wJyk7CiAgICAgICAgICB0aGlzLmRyb3BwZWRSb3dJbmRleCA9IGluZGV4ICsgMTsKICAgICAgICAgIERvbUhhbmRsZXIuYWRkQ2xhc3Mocm93RWxlbWVudCwgJ3AtZGF0YXRhYmxlLWRyYWdwb2ludC1ib3R0b20nKTsKICAgICAgICB9CgogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIH0KICAgIH0sCiAgICBvblJvd0RyYWdMZWF2ZTogZnVuY3Rpb24gb25Sb3dEcmFnTGVhdmUoZXZlbnQpIHsKICAgICAgdmFyIHJvd0VsZW1lbnQgPSBldmVudC5jdXJyZW50VGFyZ2V0OwogICAgICB2YXIgcHJldlJvd0VsZW1lbnQgPSByb3dFbGVtZW50LnByZXZpb3VzRWxlbWVudFNpYmxpbmc7CgogICAgICBpZiAocHJldlJvd0VsZW1lbnQpIHsKICAgICAgICBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHByZXZSb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LWJvdHRvbScpOwogICAgICB9CgogICAgICBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtYm90dG9tJyk7CiAgICAgIERvbUhhbmRsZXIucmVtb3ZlQ2xhc3Mocm93RWxlbWVudCwgJ3AtZGF0YXRhYmxlLWRyYWdwb2ludC10b3AnKTsKICAgIH0sCiAgICBvblJvd0RyYWdFbmQ6IGZ1bmN0aW9uIG9uUm93RHJhZ0VuZChldmVudCkgewogICAgICB0aGlzLnJvd0RyYWdnaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuZHJhZ2dlZFJvd0luZGV4ID0gbnVsbDsKICAgICAgdGhpcy5kcm9wcGVkUm93SW5kZXggPSBudWxsOwogICAgICBldmVudC5jdXJyZW50VGFyZ2V0LmRyYWdnYWJsZSA9IGZhbHNlOwogICAgfSwKICAgIG9uUm93RHJvcDogZnVuY3Rpb24gb25Sb3dEcm9wKGV2ZW50KSB7CiAgICAgIGlmICh0aGlzLmRyb3BwZWRSb3dJbmRleCAhPSBudWxsKSB7CiAgICAgICAgdmFyIGRyb3BJbmRleCA9IHRoaXMuZHJhZ2dlZFJvd0luZGV4ID4gdGhpcy5kcm9wcGVkUm93SW5kZXggPyB0aGlzLmRyb3BwZWRSb3dJbmRleCA6IHRoaXMuZHJvcHBlZFJvd0luZGV4ID09PSAwID8gMCA6IHRoaXMuZHJvcHBlZFJvd0luZGV4IC0gMTsKCiAgICAgICAgdmFyIHByb2Nlc3NlZERhdGEgPSBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5wcm9jZXNzZWREYXRhKTsKCiAgICAgICAgT2JqZWN0VXRpbHMucmVvcmRlckFycmF5KHByb2Nlc3NlZERhdGEsIHRoaXMuZHJhZ2dlZFJvd0luZGV4LCBkcm9wSW5kZXgpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1yZW9yZGVyJywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkcmFnSW5kZXg6IHRoaXMuZHJhZ2dlZFJvd0luZGV4LAogICAgICAgICAgZHJvcEluZGV4OiBkcm9wSW5kZXgsCiAgICAgICAgICB2YWx1ZTogcHJvY2Vzc2VkRGF0YQogICAgICAgIH0pOwogICAgICB9IC8vY2xlYW51cAoKCiAgICAgIHRoaXMub25Sb3dEcmFnTGVhdmUoZXZlbnQpOwogICAgICB0aGlzLm9uUm93RHJhZ0VuZChldmVudCk7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAogICAgdG9nZ2xlUm93OiBmdW5jdGlvbiB0b2dnbGVSb3coZXZlbnQpIHsKICAgICAgdmFyIHJvd0RhdGEgPSBldmVudC5kYXRhOwogICAgICB2YXIgZXhwYW5kZWQ7CiAgICAgIHZhciBleHBhbmRlZFJvd0luZGV4OwoKICAgICAgdmFyIF9leHBhbmRlZFJvd3MgPSB0aGlzLmV4cGFuZGVkUm93cyA/IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmV4cGFuZGVkUm93cykgOiBbXTsKCiAgICAgIGlmICh0aGlzLmRhdGFLZXkpIHsKICAgICAgICBleHBhbmRlZCA9IHRoaXMuZF9leHBhbmRlZFJvd0tleXMgPyB0aGlzLmRfZXhwYW5kZWRSb3dLZXlzW09iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEocm93RGF0YSwgdGhpcy5kYXRhS2V5KV0gIT09IHVuZGVmaW5lZCA6IGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIGV4cGFuZGVkUm93SW5kZXggPSB0aGlzLmZpbmRJbmRleChyb3dEYXRhLCB0aGlzLmV4cGFuZGVkUm93cyk7CiAgICAgICAgZXhwYW5kZWQgPSBleHBhbmRlZFJvd0luZGV4ID4gLTE7CiAgICAgIH0KCiAgICAgIGlmIChleHBhbmRlZCkgewogICAgICAgIGlmIChleHBhbmRlZFJvd0luZGV4ID09IG51bGwpIHsKICAgICAgICAgIGV4cGFuZGVkUm93SW5kZXggPSB0aGlzLmZpbmRJbmRleChyb3dEYXRhLCB0aGlzLmV4cGFuZGVkUm93cyk7CiAgICAgICAgfQoKICAgICAgICBfZXhwYW5kZWRSb3dzLnNwbGljZShleHBhbmRlZFJvd0luZGV4LCAxKTsKCiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmV4cGFuZGVkUm93cycsIF9leHBhbmRlZFJvd3MpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1jb2xsYXBzZScsIGV2ZW50KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfZXhwYW5kZWRSb3dzLnB1c2gocm93RGF0YSk7CgogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZFJvd3MnLCBfZXhwYW5kZWRSb3dzKTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctZXhwYW5kJywgZXZlbnQpOwogICAgICB9CiAgICB9LAogICAgdG9nZ2xlUm93R3JvdXA6IGZ1bmN0aW9uIHRvZ2dsZVJvd0dyb3VwKGUpIHsKICAgICAgdmFyIGV2ZW50ID0gZS5vcmlnaW5hbEV2ZW50OwogICAgICB2YXIgZGF0YSA9IGUuZGF0YTsKICAgICAgdmFyIGdyb3VwRmllbGRWYWx1ZSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YSwgdGhpcy5ncm91cFJvd3NCeSk7CgogICAgICB2YXIgX2V4cGFuZGVkUm93R3JvdXBzID0gdGhpcy5leHBhbmRlZFJvd0dyb3VwcyA/IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmV4cGFuZGVkUm93R3JvdXBzKSA6IFtdOwoKICAgICAgaWYgKHRoaXMuaXNSb3dHcm91cEV4cGFuZGVkKGRhdGEpKSB7CiAgICAgICAgX2V4cGFuZGVkUm93R3JvdXBzID0gX2V4cGFuZGVkUm93R3JvdXBzLmZpbHRlcihmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgICAgIHJldHVybiBncm91cCAhPT0gZ3JvdXBGaWVsZFZhbHVlOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZFJvd0dyb3VwcycsIF9leHBhbmRlZFJvd0dyb3Vwcyk7CiAgICAgICAgdGhpcy4kZW1pdCgncm93Z3JvdXAtY29sbGFwc2UnLCB7CiAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgIGRhdGE6IGdyb3VwRmllbGRWYWx1ZQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIF9leHBhbmRlZFJvd0dyb3Vwcy5wdXNoKGdyb3VwRmllbGRWYWx1ZSk7CgogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZFJvd0dyb3VwcycsIF9leHBhbmRlZFJvd0dyb3Vwcyk7CiAgICAgICAgdGhpcy4kZW1pdCgncm93Z3JvdXAtZXhwYW5kJywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiBncm91cEZpZWxkVmFsdWUKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGlzUm93R3JvdXBFeHBhbmRlZDogZnVuY3Rpb24gaXNSb3dHcm91cEV4cGFuZGVkKHJvd0RhdGEpIHsKICAgICAgaWYgKHRoaXMuZXhwYW5kYWJsZVJvd0dyb3VwcyAmJiB0aGlzLmV4cGFuZGVkUm93R3JvdXBzKSB7CiAgICAgICAgdmFyIGdyb3VwRmllbGRWYWx1ZSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEocm93RGF0YSwgdGhpcy5ncm91cFJvd3NCeSk7CiAgICAgICAgcmV0dXJuIHRoaXMuZXhwYW5kZWRSb3dHcm91cHMuaW5kZXhPZihncm91cEZpZWxkVmFsdWUpID4gLTE7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBpc1N0YXRlZnVsOiBmdW5jdGlvbiBpc1N0YXRlZnVsKCkgewogICAgICByZXR1cm4gdGhpcy5zdGF0ZUtleSAhPSBudWxsOwogICAgfSwKICAgIGdldFN0b3JhZ2U6IGZ1bmN0aW9uIGdldFN0b3JhZ2UoKSB7CiAgICAgIHN3aXRjaCAodGhpcy5zdGF0ZVN0b3JhZ2UpIHsKICAgICAgICBjYXNlICdsb2NhbCc6CiAgICAgICAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTsKCiAgICAgICAgY2FzZSAnc2Vzc2lvbic6CiAgICAgICAgICByZXR1cm4gd2luZG93LnNlc3Npb25TdG9yYWdlOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMuc3RhdGVTdG9yYWdlICsgJyBpcyBub3QgYSB2YWxpZCB2YWx1ZSBmb3IgdGhlIHN0YXRlIHN0b3JhZ2UsIHN1cHBvcnRlZCB2YWx1ZXMgYXJlICJsb2NhbCIgYW5kICJzZXNzaW9uIi4nKTsKICAgICAgfQogICAgfSwKICAgIHNhdmVTdGF0ZTogZnVuY3Rpb24gc2F2ZVN0YXRlKCkgewogICAgICB2YXIgc3RvcmFnZSA9IHRoaXMuZ2V0U3RvcmFnZSgpOwogICAgICB2YXIgc3RhdGUgPSB7fTsKCiAgICAgIGlmICh0aGlzLnBhZ2luYXRvcikgewogICAgICAgIHN0YXRlLmZpcnN0ID0gdGhpcy5kX2ZpcnN0OwogICAgICAgIHN0YXRlLnJvd3MgPSB0aGlzLmRfcm93czsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZF9zb3J0RmllbGQpIHsKICAgICAgICBzdGF0ZS5zb3J0RmllbGQgPSB0aGlzLmRfc29ydEZpZWxkOwogICAgICAgIHN0YXRlLnNvcnRPcmRlciA9IHRoaXMuZF9zb3J0T3JkZXI7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmRfbXVsdGlTb3J0TWV0YSkgewogICAgICAgIHN0YXRlLm11bHRpU29ydE1ldGEgPSB0aGlzLmRfbXVsdGlTb3J0TWV0YTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaGFzRmlsdGVycykgewogICAgICAgIHN0YXRlLmZpbHRlcnMgPSB0aGlzLmZpbHRlcnM7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnJlc2l6YWJsZUNvbHVtbnMpIHsKICAgICAgICB0aGlzLnNhdmVDb2x1bW5XaWR0aHMoc3RhdGUpOwogICAgICB9CgogICAgICBpZiAodGhpcy5yZW9yZGVyYWJsZUNvbHVtbnMpIHsKICAgICAgICBzdGF0ZS5jb2x1bW5PcmRlciA9IHRoaXMuZF9jb2x1bW5PcmRlcjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZXhwYW5kZWRSb3dzKSB7CiAgICAgICAgc3RhdGUuZXhwYW5kZWRSb3dzID0gdGhpcy5leHBhbmRlZFJvd3M7CiAgICAgICAgc3RhdGUuZXhwYW5kZWRSb3dLZXlzID0gdGhpcy5kX2V4cGFuZGVkUm93S2V5czsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZXhwYW5kZWRSb3dHcm91cHMpIHsKICAgICAgICBzdGF0ZS5leHBhbmRlZFJvd0dyb3VwcyA9IHRoaXMuZXhwYW5kZWRSb3dHcm91cHM7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNlbGVjdGlvbikgewogICAgICAgIHN0YXRlLnNlbGVjdGlvbiA9IHRoaXMuc2VsZWN0aW9uOwogICAgICAgIHN0YXRlLnNlbGVjdGlvbktleXMgPSB0aGlzLmRfc2VsZWN0aW9uS2V5czsKICAgICAgfQoKICAgICAgaWYgKE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGgpIHsKICAgICAgICBzdG9yYWdlLnNldEl0ZW0odGhpcy5zdGF0ZUtleSwgSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTsKICAgICAgfQogICAgfSwKICAgIHJlc3RvcmVTdGF0ZTogZnVuY3Rpb24gcmVzdG9yZVN0YXRlKCkgewogICAgICB2YXIgc3RvcmFnZSA9IHRoaXMuZ2V0U3RvcmFnZSgpOwogICAgICB2YXIgc3RhdGVTdHJpbmcgPSBzdG9yYWdlLmdldEl0ZW0odGhpcy5zdGF0ZUtleSk7CgogICAgICBpZiAoc3RhdGVTdHJpbmcpIHsKICAgICAgICB2YXIgcmVzdG9yZWRTdGF0ZSA9IEpTT04ucGFyc2Uoc3RhdGVTdHJpbmcpOwoKICAgICAgICBpZiAodGhpcy5wYWdpbmF0b3IpIHsKICAgICAgICAgIHRoaXMuZF9maXJzdCA9IHJlc3RvcmVkU3RhdGUuZmlyc3Q7CiAgICAgICAgICB0aGlzLmRfcm93cyA9IHJlc3RvcmVkU3RhdGUucm93czsKICAgICAgICB9CgogICAgICAgIGlmIChyZXN0b3JlZFN0YXRlLnNvcnRGaWVsZCkgewogICAgICAgICAgdGhpcy5kX3NvcnRGaWVsZCA9IHJlc3RvcmVkU3RhdGUuc29ydEZpZWxkOwogICAgICAgICAgdGhpcy5kX3NvcnRPcmRlciA9IHJlc3RvcmVkU3RhdGUuc29ydE9yZGVyOwogICAgICAgIH0KCiAgICAgICAgaWYgKHJlc3RvcmVkU3RhdGUubXVsdGlTb3J0TWV0YSkgewogICAgICAgICAgdGhpcy5kX211bHRpU29ydE1ldGEgPSByZXN0b3JlZFN0YXRlLm11bHRpU29ydE1ldGE7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdG9yZWRTdGF0ZS5maWx0ZXJzKSB7CiAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZmlsdGVycycsIHJlc3RvcmVkU3RhdGUuZmlsdGVycyk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5yZXNpemFibGVDb2x1bW5zKSB7CiAgICAgICAgICB0aGlzLmNvbHVtbldpZHRoc1N0YXRlID0gcmVzdG9yZWRTdGF0ZS5jb2x1bW5XaWR0aHM7CiAgICAgICAgICB0aGlzLnRhYmxlV2lkdGhTdGF0ZSA9IHJlc3RvcmVkU3RhdGUudGFibGVXaWR0aDsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucykgewogICAgICAgICAgdGhpcy5kX2NvbHVtbk9yZGVyID0gcmVzdG9yZWRTdGF0ZS5jb2x1bW5PcmRlcjsKICAgICAgICB9CgogICAgICAgIGlmIChyZXN0b3JlZFN0YXRlLmV4cGFuZGVkUm93cykgewogICAgICAgICAgdGhpcy5kX2V4cGFuZGVkUm93S2V5cyA9IHJlc3RvcmVkU3RhdGUuZXhwYW5kZWRSb3dLZXlzOwogICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmV4cGFuZGVkUm93cycsIHJlc3RvcmVkU3RhdGUuZXhwYW5kZWRSb3dzKTsKICAgICAgICB9CgogICAgICAgIGlmIChyZXN0b3JlZFN0YXRlLmV4cGFuZGVkUm93R3JvdXBzKSB7CiAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWRSb3dHcm91cHMnLCByZXN0b3JlZFN0YXRlLmV4cGFuZGVkUm93R3JvdXBzKTsKICAgICAgICB9CgogICAgICAgIGlmIChyZXN0b3JlZFN0YXRlLnNlbGVjdGlvbikgewogICAgICAgICAgdGhpcy5kX3NlbGVjdGlvbktleXMgPSByZXN0b3JlZFN0YXRlLmRfc2VsZWN0aW9uS2V5czsKICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCByZXN0b3JlZFN0YXRlLnNlbGVjdGlvbik7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgc2F2ZUNvbHVtbldpZHRoczogZnVuY3Rpb24gc2F2ZUNvbHVtbldpZHRocyhzdGF0ZSkgewogICAgICB2YXIgd2lkdGhzID0gW107CiAgICAgIHZhciBoZWFkZXJzID0gRG9tSGFuZGxlci5maW5kKHRoaXMuJGVsLCAnLnAtZGF0YXRhYmxlLXRoZWFkID4gdHIgPiB0aCcpOwogICAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24gKGhlYWRlcikgewogICAgICAgIHJldHVybiB3aWR0aHMucHVzaChEb21IYW5kbGVyLmdldE91dGVyV2lkdGgoaGVhZGVyKSk7CiAgICAgIH0pOwogICAgICBzdGF0ZS5jb2x1bW5XaWR0aHMgPSB3aWR0aHMuam9pbignLCcpOwoKICAgICAgaWYgKHRoaXMuY29sdW1uUmVzaXplTW9kZSA9PT0gJ2V4cGFuZCcpIHsKICAgICAgICBzdGF0ZS50YWJsZVdpZHRoID0gdGhpcy5zY3JvbGxhYmxlID8gRG9tSGFuZGxlci5maW5kU2luZ2xlKHRoaXMuJGVsLCAnLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyLXRhYmxlJykuc3R5bGUud2lkdGggOiBEb21IYW5kbGVyLmdldE91dGVyV2lkdGgodGhpcy4kcmVmcy50YWJsZSkgKyAncHgnOwogICAgICB9CiAgICB9LAogICAgcmVzdG9yZUNvbHVtbldpZHRoczogZnVuY3Rpb24gcmVzdG9yZUNvbHVtbldpZHRocygpIHsKICAgICAgaWYgKHRoaXMuY29sdW1uV2lkdGhzU3RhdGUpIHsKICAgICAgICB2YXIgd2lkdGhzID0gdGhpcy5jb2x1bW5XaWR0aHNTdGF0ZS5zcGxpdCgnLCcpOwoKICAgICAgICBpZiAodGhpcy5jb2x1bW5SZXNpemVNb2RlID09PSAnZXhwYW5kJyAmJiB0aGlzLnRhYmxlV2lkdGhTdGF0ZSkgewogICAgICAgICAgaWYgKHRoaXMuc2Nyb2xsYWJsZSkgewogICAgICAgICAgICB0aGlzLnJlc2l6ZVNjcm9sbGFibGVUYWJsZShudWxsLCB0aGlzLnRhYmxlV2lkdGhTdGF0ZSwgMCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRyZWZzLnRhYmxlLnN0eWxlLndpZHRoID0gdGhpcy50YWJsZVdpZHRoU3RhdGU7CiAgICAgICAgICAgIHRoaXMuJGVsLnN0eWxlLndpZHRoID0gdGhpcy50YWJsZVdpZHRoU3RhdGU7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5zY3JvbGxhYmxlKSB7CiAgICAgICAgICB2YXIgaGVhZGVyQ29scyA9IERvbUhhbmRsZXIuZmluZCh0aGlzLiRlbCwgJy5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWhlYWRlci10YWJsZSA+IGNvbGdyb3VwID4gY29sJyk7CiAgICAgICAgICB2YXIgYm9keUNvbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kZWwsICcucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1ib2R5LXRhYmxlID4gY29sZ3JvdXAgPiBjb2wnKTsKICAgICAgICAgIGhlYWRlckNvbHMuZm9yRWFjaChmdW5jdGlvbiAoY29sLCBpbmRleCkgewogICAgICAgICAgICByZXR1cm4gY29sLnN0eWxlLndpZHRoID0gd2lkdGhzW2luZGV4XSArICdweCc7CiAgICAgICAgICB9KTsKICAgICAgICAgIGJvZHlDb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbCwgaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIGNvbC5zdHlsZS53aWR0aCA9IHdpZHRoc1tpbmRleF0gKyAncHgnOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBoZWFkZXJzID0gRG9tSGFuZGxlci5maW5kKHRoaXMuJHJlZnMudGFibGUsICcucC1kYXRhdGFibGUtdGhlYWQgPiB0ciA+IHRoJyk7CiAgICAgICAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24gKGhlYWRlciwgaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIGhlYWRlci5zdHlsZS53aWR0aCA9IHdpZHRoc1tpbmRleF0gKyAncHgnOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25DZWxsRWRpdEluaXQ6IGZ1bmN0aW9uIG9uQ2VsbEVkaXRJbml0KGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NlbGwtZWRpdC1pbml0JywgZXZlbnQpOwogICAgfSwKICAgIG9uQ2VsbEVkaXRDb21wbGV0ZTogZnVuY3Rpb24gb25DZWxsRWRpdENvbXBsZXRlKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NlbGwtZWRpdC1jb21wbGV0ZScsIGV2ZW50KTsKICAgIH0sCiAgICBvbkNlbGxFZGl0Q2FuY2VsOiBmdW5jdGlvbiBvbkNlbGxFZGl0Q2FuY2VsKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NlbGwtZWRpdC1jYW5jZWwnLCBldmVudCk7CiAgICB9LAogICAgb25Sb3dFZGl0SW5pdDogZnVuY3Rpb24gb25Sb3dFZGl0SW5pdChldmVudCkgewogICAgICB2YXIgX2VkaXRpbmdSb3dzID0gdGhpcy5lZGl0aW5nUm93cyA/IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmVkaXRpbmdSb3dzKSA6IFtdOwoKICAgICAgX2VkaXRpbmdSb3dzLnB1c2goZXZlbnQuZGF0YSk7CgogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZWRpdGluZ1Jvd3MnLCBfZWRpdGluZ1Jvd3MpOwogICAgICB0aGlzLiRlbWl0KCdyb3ctZWRpdC1pbml0JywgZXZlbnQpOwogICAgfSwKICAgIG9uUm93RWRpdFNhdmU6IGZ1bmN0aW9uIG9uUm93RWRpdFNhdmUoZXZlbnQpIHsKICAgICAgdmFyIF9lZGl0aW5nUm93cyA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmVkaXRpbmdSb3dzKTsKCiAgICAgIF9lZGl0aW5nUm93cy5zcGxpY2UodGhpcy5maW5kSW5kZXgoZXZlbnQuZGF0YSwgX2VkaXRpbmdSb3dzKSwgMSk7CgogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZWRpdGluZ1Jvd3MnLCBfZWRpdGluZ1Jvd3MpOwogICAgICB0aGlzLiRlbWl0KCdyb3ctZWRpdC1zYXZlJywgZXZlbnQpOwogICAgfSwKICAgIG9uUm93RWRpdENhbmNlbDogZnVuY3Rpb24gb25Sb3dFZGl0Q2FuY2VsKGV2ZW50KSB7CiAgICAgIHZhciBfZWRpdGluZ1Jvd3MgPSBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5lZGl0aW5nUm93cyk7CgogICAgICBfZWRpdGluZ1Jvd3Muc3BsaWNlKHRoaXMuZmluZEluZGV4KGV2ZW50LmRhdGEsIF9lZGl0aW5nUm93cyksIDEpOwoKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmVkaXRpbmdSb3dzJywgX2VkaXRpbmdSb3dzKTsKICAgICAgdGhpcy4kZW1pdCgncm93LWVkaXQtY2FuY2VsJywgZXZlbnQpOwogICAgfSwKICAgIG9uVmlydHVhbFNjcm9sbDogZnVuY3Rpb24gb25WaXJ0dWFsU2Nyb2xsKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudmlydHVhbFNjcm9sbFRpbWVyKSB7CiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudmlydHVhbFNjcm9sbFRpbWVyKTsKICAgICAgfQoKICAgICAgdGhpcy52aXJ0dWFsU2Nyb2xsVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuJGVtaXQoJ3ZpcnR1YWwtc2Nyb2xsJywgewogICAgICAgICAgZmlyc3Q6IChldmVudC5wYWdlIC0gMSkgKiBfdGhpczUucm93cywKICAgICAgICAgIHJvd3M6IF90aGlzNS5yb3dzICogMgogICAgICAgIH0pOwogICAgICB9LCB0aGlzLnZpcnR1YWxTY3JvbGxEZWxheSk7CiAgICB9LAogICAgY3JlYXRlTGF6eUxvYWRFdmVudDogZnVuY3Rpb24gY3JlYXRlTGF6eUxvYWRFdmVudChldmVudCkgewogICAgICB2YXIgZmlsdGVyTWF0Y2hNb2RlczsKCiAgICAgIGlmICh0aGlzLmhhc0ZpbHRlcnMpIHsKICAgICAgICBmaWx0ZXJNYXRjaE1vZGVzID0ge307CiAgICAgICAgdGhpcy5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24gKGNvbCkgewogICAgICAgICAgaWYgKGNvbC5maWVsZCkgewogICAgICAgICAgICBmaWx0ZXJNYXRjaE1vZGVzW2NvbC5maWVsZF0gPSBjb2wuZmlsdGVyTWF0Y2hNb2RlOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgIGZpcnN0OiB0aGlzLmRfZmlyc3QsCiAgICAgICAgcm93czogdGhpcy5kX3Jvd3MsCiAgICAgICAgc29ydEZpZWxkOiB0aGlzLmRfc29ydEZpZWxkLAogICAgICAgIHNvcnRPcmRlcjogdGhpcy5kX3NvcnRPcmRlciwKICAgICAgICBtdWx0aVNvcnRNZXRhOiB0aGlzLmRfbXVsdGlTb3J0TWV0YSwKICAgICAgICBmaWx0ZXJzOiB0aGlzLmZpbHRlcnMsCiAgICAgICAgZmlsdGVyTWF0Y2hNb2RlczogZmlsdGVyTWF0Y2hNb2RlcwogICAgICB9OwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbnRhaW5lckNsYXNzOiBmdW5jdGlvbiBjb250YWluZXJDbGFzcygpIHsKICAgICAgcmV0dXJuIFsncC1kYXRhdGFibGUgcC1jb21wb25lbnQnLCB7CiAgICAgICAgJ3AtZGF0YXRhYmxlLWhvdmVyYWJsZS1yb3dzJzogdGhpcy5yb3dIb3ZlciB8fCB0aGlzLnNlbGVjdGlvbk1vZGUsCiAgICAgICAgJ3AtZGF0YXRhYmxlLWF1dG8tbGF5b3V0JzogdGhpcy5hdXRvTGF5b3V0LAogICAgICAgICdwLWRhdGF0YWJsZS1yZXNpemFibGUnOiB0aGlzLnJlc2l6YWJsZUNvbHVtbnMsCiAgICAgICAgJ3AtZGF0YXRhYmxlLXJlc2l6YWJsZS1maXQnOiB0aGlzLnJlc2l6YWJsZUNvbHVtbnMgJiYgdGhpcy5jb2x1bW5SZXNpemVNb2RlID09PSAnZml0JywKICAgICAgICAncC1kYXRhdGFibGUtc2Nyb2xsYWJsZSc6IHRoaXMuc2Nyb2xsYWJsZSwKICAgICAgICAncC1kYXRhdGFibGUtdmlydHVhbC1zY3JvbGxhYmxlJzogdGhpcy52aXJ0dWFsU2Nyb2xsCiAgICAgIH1dOwogICAgfSwKICAgIGNvbHVtbnM6IGZ1bmN0aW9uIGNvbHVtbnMoKSB7CiAgICAgIHZhciBjb2x1bW5zID0gW107CgogICAgICBpZiAodGhpcy5hbGxDaGlsZHJlbikgewogICAgICAgIGNvbHVtbnMgPSB0aGlzLmFsbENoaWxkcmVuLmZpbHRlcihmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICAgIHJldHVybiBjaGlsZC4kb3B0aW9ucy5fcHJvcEtleXMuaW5kZXhPZignY29sdW1uS2V5JykgIT09IC0xOwogICAgICAgIH0pOwoKICAgICAgICBpZiAodGhpcy5yZW9yZGVyYWJsZUNvbHVtbnMgJiYgdGhpcy5kX2NvbHVtbk9yZGVyKSB7CiAgICAgICAgICB2YXIgb3JkZXJlZENvbHVtbnMgPSBbXTsKCiAgICAgICAgICB2YXIgX2l0ZXJhdG9yNSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuZF9jb2x1bW5PcmRlciksCiAgICAgICAgICAgICAgX3N0ZXA1OwoKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNS5zKCk7ICEoX3N0ZXA1ID0gX2l0ZXJhdG9yNS5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgdmFyIGNvbHVtbktleSA9IF9zdGVwNS52YWx1ZTsKICAgICAgICAgICAgICB2YXIgY29sdW1uID0gdGhpcy5maW5kQ29sdW1uQnlLZXkoY29sdW1ucywgY29sdW1uS2V5KTsKCiAgICAgICAgICAgICAgaWYgKGNvbHVtbikgewogICAgICAgICAgICAgICAgb3JkZXJlZENvbHVtbnMucHVzaChjb2x1bW4pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgIF9pdGVyYXRvcjUuZShlcnIpOwogICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgX2l0ZXJhdG9yNS5mKCk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChvcmRlcmVkQ29sdW1ucywgX3RvQ29uc3VtYWJsZUFycmF5KGNvbHVtbnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBvcmRlcmVkQ29sdW1ucy5pbmRleE9mKGl0ZW0pIDwgMDsKICAgICAgICAgIH0pKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gY29sdW1uczsKICAgIH0sCiAgICBmcm96ZW5Db2x1bW5zOiBmdW5jdGlvbiBmcm96ZW5Db2x1bW5zKCkgewogICAgICB2YXIgZnJvemVuQ29sdW1ucyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvcjYgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmNvbHVtbnMpLAogICAgICAgICAgX3N0ZXA2OwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjYucygpOyAhKF9zdGVwNiA9IF9pdGVyYXRvcjYubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGNvbCA9IF9zdGVwNi52YWx1ZTsKCiAgICAgICAgICBpZiAoY29sLmZyb3plbikgewogICAgICAgICAgICBmcm96ZW5Db2x1bW5zID0gZnJvemVuQ29sdW1ucyB8fCBbXTsKICAgICAgICAgICAgZnJvemVuQ29sdW1ucy5wdXNoKGNvbCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I2LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I2LmYoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZyb3plbkNvbHVtbnM7CiAgICB9LAogICAgc2Nyb2xsYWJsZUNvbHVtbnM6IGZ1bmN0aW9uIHNjcm9sbGFibGVDb2x1bW5zKCkgewogICAgICB2YXIgc2Nyb2xsYWJsZUNvbHVtbnMgPSBbXTsKCiAgICAgIHZhciBfaXRlcmF0b3I3ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5jb2x1bW5zKSwKICAgICAgICAgIF9zdGVwNzsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3I3LnMoKTsgIShfc3RlcDcgPSBfaXRlcmF0b3I3Lm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBjb2wgPSBfc3RlcDcudmFsdWU7CgogICAgICAgICAgaWYgKCFjb2wuZnJvemVuKSB7CiAgICAgICAgICAgIHNjcm9sbGFibGVDb2x1bW5zID0gc2Nyb2xsYWJsZUNvbHVtbnMgfHwgW107CiAgICAgICAgICAgIHNjcm9sbGFibGVDb2x1bW5zLnB1c2goY29sKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjcuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjcuZigpOwogICAgICB9CgogICAgICByZXR1cm4gc2Nyb2xsYWJsZUNvbHVtbnM7CiAgICB9LAogICAgaGFzRnJvemVuQ29sdW1uczogZnVuY3Rpb24gaGFzRnJvemVuQ29sdW1ucygpIHsKICAgICAgcmV0dXJuIHRoaXMuZnJvemVuQ29sdW1ucy5sZW5ndGggPiAwOwogICAgfSwKICAgIGhlYWRlckNvbHVtbkdyb3VwOiBmdW5jdGlvbiBoZWFkZXJDb2x1bW5Hcm91cCgpIHsKICAgICAgaWYgKHRoaXMuYWxsQ2hpbGRyZW4pIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yOCA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuYWxsQ2hpbGRyZW4pLAogICAgICAgICAgICBfc3RlcDg7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjgucygpOyAhKF9zdGVwOCA9IF9pdGVyYXRvcjgubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgY2hpbGQgPSBfc3RlcDgudmFsdWU7CgogICAgICAgICAgICBpZiAoY2hpbGQuJHZub2RlLnRhZy5pbmRleE9mKCdjb2x1bW5ncm91cCcpICE9PSAtMSAmJiBjaGlsZC50eXBlID09PSAnaGVhZGVyJykgewogICAgICAgICAgICAgIHJldHVybiBjaGlsZDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yOC5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjguZigpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgZnJvemVuSGVhZGVyQ29sdW1uR3JvdXA6IGZ1bmN0aW9uIGZyb3plbkhlYWRlckNvbHVtbkdyb3VwKCkgewogICAgICBpZiAodGhpcy5hbGxDaGlsZHJlbikgewogICAgICAgIHZhciBfaXRlcmF0b3I5ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbGxDaGlsZHJlbiksCiAgICAgICAgICAgIF9zdGVwOTsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yOS5zKCk7ICEoX3N0ZXA5ID0gX2l0ZXJhdG9yOS5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBjaGlsZCA9IF9zdGVwOS52YWx1ZTsKCiAgICAgICAgICAgIGlmIChjaGlsZC4kdm5vZGUudGFnLmluZGV4T2YoJ2NvbHVtbmdyb3VwJykgIT09IC0xICYmIGNoaWxkLnR5cGUgPT09ICdmcm96ZW5oZWFkZXInKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I5LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yOS5mKCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBmb290ZXJDb2x1bW5Hcm91cDogZnVuY3Rpb24gZm9vdGVyQ29sdW1uR3JvdXAoKSB7CiAgICAgIGlmICh0aGlzLmFsbENoaWxkcmVuKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjEwID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbGxDaGlsZHJlbiksCiAgICAgICAgICAgIF9zdGVwMTA7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjEwLnMoKTsgIShfc3RlcDEwID0gX2l0ZXJhdG9yMTAubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgY2hpbGQgPSBfc3RlcDEwLnZhbHVlOwoKICAgICAgICAgICAgaWYgKGNoaWxkLiR2bm9kZS50YWcuaW5kZXhPZignY29sdW1uZ3JvdXAnKSAhPT0gLTEgJiYgY2hpbGQudHlwZSA9PT0gJ2Zvb3RlcicpIHsKICAgICAgICAgICAgICByZXR1cm4gY2hpbGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjEwLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yMTAuZigpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgZnJvemVuRm9vdGVyQ29sdW1uR3JvdXA6IGZ1bmN0aW9uIGZyb3plbkZvb3RlckNvbHVtbkdyb3VwKCkgewogICAgICBpZiAodGhpcy5hbGxDaGlsZHJlbikgewogICAgICAgIHZhciBfaXRlcmF0b3IxMSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuYWxsQ2hpbGRyZW4pLAogICAgICAgICAgICBfc3RlcDExOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IxMS5zKCk7ICEoX3N0ZXAxMSA9IF9pdGVyYXRvcjExLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGNoaWxkID0gX3N0ZXAxMS52YWx1ZTsKCiAgICAgICAgICAgIGlmIChjaGlsZC4kdm5vZGUudGFnLmluZGV4T2YoJ2NvbHVtbmdyb3VwJykgIT09IC0xICYmIGNoaWxkLnR5cGUgPT09ICdmcm96ZW5mb290ZXInKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IxMS5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjExLmYoKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIHByb2Nlc3NlZERhdGE6IGZ1bmN0aW9uIHByb2Nlc3NlZERhdGEoKSB7CiAgICAgIGlmICh0aGlzLmxhenkpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodGhpcy52YWx1ZSAmJiB0aGlzLnZhbHVlLmxlbmd0aCkgewogICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnZhbHVlOwoKICAgICAgICAgIGlmICh0aGlzLnNvcnRlZCkgewogICAgICAgICAgICBpZiAodGhpcy5zb3J0TW9kZSA9PT0gJ3NpbmdsZScpIGRhdGEgPSB0aGlzLnNvcnRTaW5nbGUoZGF0YSk7ZWxzZSBpZiAodGhpcy5zb3J0TW9kZSA9PT0gJ211bHRpcGxlJykgZGF0YSA9IHRoaXMuc29ydE11bHRpcGxlKGRhdGEpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0aGlzLmhhc0ZpbHRlcnMpIHsKICAgICAgICAgICAgZGF0YSA9IHRoaXMuZmlsdGVyKGRhdGEpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBkYXRhOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBkYXRhVG9SZW5kZXI6IGZ1bmN0aW9uIGRhdGFUb1JlbmRlcigpIHsKICAgICAgdmFyIGRhdGEgPSB0aGlzLnByb2Nlc3NlZERhdGE7CgogICAgICBpZiAoZGF0YSAmJiB0aGlzLnBhZ2luYXRvcikgewogICAgICAgIHZhciBmaXJzdCA9IHRoaXMubGF6eSA/IDAgOiB0aGlzLmRfZmlyc3Q7CiAgICAgICAgcmV0dXJuIGRhdGEuc2xpY2UoZmlyc3QsIGZpcnN0ICsgdGhpcy5kX3Jvd3MpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBkYXRhOwogICAgICB9CiAgICB9LAogICAgdG90YWxSZWNvcmRzTGVuZ3RoOiBmdW5jdGlvbiB0b3RhbFJlY29yZHNMZW5ndGgoKSB7CiAgICAgIGlmICh0aGlzLmxhenkpIHsKICAgICAgICByZXR1cm4gdGhpcy50b3RhbFJlY29yZHM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgICAgcmV0dXJuIGRhdGEgPyBkYXRhLmxlbmd0aCA6IDA7CiAgICAgIH0KICAgIH0sCiAgICBlbXB0eTogZnVuY3Rpb24gZW1wdHkoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy5wcm9jZXNzZWREYXRhOwogICAgICByZXR1cm4gIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDA7CiAgICB9LAogICAgcGFnaW5hdG9yVG9wOiBmdW5jdGlvbiBwYWdpbmF0b3JUb3AoKSB7CiAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRvciAmJiAodGhpcy5wYWdpbmF0b3JQb3NpdGlvbiAhPT0gJ2JvdHRvbScgfHwgdGhpcy5wYWdpbmF0b3JQb3NpdGlvbiA9PT0gJ2JvdGgnKTsKICAgIH0sCiAgICBwYWdpbmF0b3JCb3R0b206IGZ1bmN0aW9uIHBhZ2luYXRvckJvdHRvbSgpIHsKICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdG9yICYmICh0aGlzLnBhZ2luYXRvclBvc2l0aW9uICE9PSAndG9wJyB8fCB0aGlzLnBhZ2luYXRvclBvc2l0aW9uID09PSAnYm90aCcpOwogICAgfSwKICAgIHNvcnRlZDogZnVuY3Rpb24gc29ydGVkKCkgewogICAgICByZXR1cm4gdGhpcy5kX3NvcnRGaWVsZCB8fCB0aGlzLmRfbXVsdGlTb3J0TWV0YSAmJiB0aGlzLmRfbXVsdGlTb3J0TWV0YS5sZW5ndGggPiAwOwogICAgfSwKICAgIGhhc0ZpbHRlcnM6IGZ1bmN0aW9uIGhhc0ZpbHRlcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcnMgJiYgT2JqZWN0LmtleXModGhpcy5maWx0ZXJzKS5sZW5ndGggPiAwICYmIHRoaXMuZmlsdGVycy5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0OwogICAgfSwKICAgIGhhc0dsb2JhbEZpbHRlcjogZnVuY3Rpb24gaGFzR2xvYmFsRmlsdGVyKCkgewogICAgICByZXR1cm4gdGhpcy5maWx0ZXJzICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmZpbHRlcnMsICdnbG9iYWwnKTsKICAgIH0sCiAgICBsb2FkaW5nSWNvbkNsYXNzOiBmdW5jdGlvbiBsb2FkaW5nSWNvbkNsYXNzKCkgewogICAgICByZXR1cm4gWydwLWRhdGF0YWJsZS1sb2FkaW5nLWljb24gcGktc3BpbicsIHRoaXMubG9hZGluZ0ljb25dOwogICAgfSwKICAgIGFsbFJvd3NTZWxlY3RlZDogZnVuY3Rpb24gYWxsUm93c1NlbGVjdGVkKCkgewogICAgICB2YXIgdmFsID0gdGhpcy5wcm9jZXNzZWREYXRhOwogICAgICByZXR1cm4gdmFsICYmIHZhbC5sZW5ndGggPiAwICYmIHRoaXMuc2VsZWN0aW9uICYmIHRoaXMuc2VsZWN0aW9uLmxlbmd0aCA+IDAgJiYgdGhpcy5zZWxlY3Rpb24ubGVuZ3RoID09PSB2YWwubGVuZ3RoOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgJ0RUUGFnaW5hdG9yJzogUGFnaW5hdG9yLAogICAgJ0RUU2Nyb2xsYWJsZVZpZXcnOiBTY3JvbGxhYmxlVmlldywKICAgICdEVFRhYmxlSGVhZGVyJzogVGFibGVIZWFkZXIsCiAgICAnRFRUYWJsZUJvZHknOiBUYWJsZUJvZHksCiAgICAnRFRUYWJsZUZvb3Rlcic6IFRhYmxlRm9vdGVyCiAgfQp9Ow=="},{"version":3,"sources":["DataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA,OAAA,WAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,sBAAA;AACA,OAAA,UAAA,MAAA,qBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,cAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7BA;AAiCA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjCA;AAqCA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArCA;AAyCA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzCA;AA6CA,IAAA,yBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7CA;AAiDA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjDA;AAqDA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArDA;AAyDA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzDA;AA6DA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7DA;AAiEA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjEA;AAqEA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArEA;AAyEA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzEA;AA6EA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7EA;AAiFA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjFA;AAqFA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArFA;AAyFA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzFA;AA6FA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,KAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7FA;AAiGA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjGA;AAqGA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArGA;AAyGA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzGA;AA6GA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7GA;AAiHA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjHA;AAqHA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArHA;AAyHA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzHA;AA6HA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7HA;AAiIA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjIA;AAqIA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArIA;AAyIA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzIA;AA6IA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7IA;AAiJA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjJA;AAqJA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArJA;AAyJA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzJA;AA6JA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7JA;AAiKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,KAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjKA;AAqKA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArKA;AAyKA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzKA;AA6KA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7KA;AAiLA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjLA;AAqLA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArLA;AAyLA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzLA;AA6LA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7LA;AAiMA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjMA;AAqMA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArMA;AAyMA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzMA;AA6MA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7MA;AAiNA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjNA;AAqNA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArNA;AAyNA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAzNA,GADA;AA+NA,EAAA,IA/NA,kBA+NA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,KAAA,KAFA;AAGA,MAAA,MAAA,EAAA,KAAA,IAHA;AAIA,MAAA,WAAA,EAAA,KAAA,SAJA;AAKA,MAAA,WAAA,EAAA,KAAA,SALA;AAMA,MAAA,eAAA,EAAA,KAAA,aAAA,sBAAA,KAAA,aAAA,IAAA,EANA;AAOA,MAAA,eAAA,EAAA,IAPA;AAQA,MAAA,iBAAA,EAAA,IARA;AASA,MAAA,aAAA,EAAA,IATA;AAUA,MAAA,gBAAA,EAAA;AAVA,KAAA;AAYA,GA5OA;AA6OA,EAAA,UAAA,EAAA,KA7OA;AA8OA,EAAA,cAAA,EAAA,IA9OA;AA+OA,EAAA,aAAA,EAAA,IA/OA;AAgPA,EAAA,4BAAA,EAAA,IAhPA;AAiPA,EAAA,+BAAA,EAAA,IAjPA;AAkPA,EAAA,iBAAA,EAAA,IAlPA;AAmPA,EAAA,mBAAA,EAAA,IAnPA;AAoPA,EAAA,cAAA,EAAA,KApPA;AAqPA,EAAA,mBAAA,EAAA,IArPA;AAsPA,EAAA,oBAAA,EAAA,IAtPA;AAuPA,EAAA,aAAA,EAAA,IAvPA;AAwPA,EAAA,eAAA,EAAA,IAxPA;AAyPA,EAAA,eAAA,EAAA,IAzPA;AA0PA,EAAA,WAAA,EAAA,IA1PA;AA2PA,EAAA,iBAAA,EAAA,IA3PA;AA4PA,EAAA,eAAA,EAAA,IA5PA;AA6PA,EAAA,oBAAA,EAAA,KA7PA;AA8PA,EAAA,kBAAA,EAAA,IA9PA;AA+PA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,QADA,EACA;AACA,WAAA,OAAA,GAAA,QAAA;AACA,KAHA;AAIA,IAAA,IAJA,gBAIA,QAJA,EAIA;AACA,WAAA,MAAA,GAAA,QAAA;AACA,KANA;AAOA,IAAA,SAPA,qBAOA,QAPA,EAOA;AACA,WAAA,WAAA,GAAA,QAAA;AACA,KATA;AAUA,IAAA,SAVA,qBAUA,QAVA,EAUA;AACA,WAAA,WAAA,GAAA,QAAA;AACA,KAZA;AAaA,IAAA,aAbA,yBAaA,QAbA,EAaA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,KAfA;AAgBA,IAAA,SAhBA,qBAgBA,QAhBA,EAgBA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,mBAAA,CAAA,QAAA;AACA;AACA,KApBA;AAqBA,IAAA,YArBA,wBAqBA,QArBA,EAqBA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,qBAAA,CAAA,QAAA;AACA;AACA,KAzBA;AA0BA,IAAA,WA1BA,uBA0BA,QA1BA,EA0BA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,aAAA,oBAAA,CAAA,QAAA;AACA;AACA;AA9BA,GA/PA;AA+RA,EAAA,WA/RA,yBA+RA;AACA,QAAA,KAAA,UAAA,EAAA,EAAA;AACA,WAAA,YAAA;AACA;AACA,GAnSA;AAoSA,EAAA,OApSA,qBAoSA;AACA,SAAA,WAAA,GAAA,KAAA,SAAA;;AAEA,QAAA,KAAA,kBAAA,EAAA;AACA,UAAA,WAAA,GAAA,EAAA;;AADA,iDAEA,KAAA,WAFA;AAAA;;AAAA;AAEA,4DAAA;AAAA,cAAA,KAAA;;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,WAAA,MAAA,CAAA,CAAA,EAAA;AACA,YAAA,WAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,IAAA,KAAA,CAAA,KAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;;AAOA,WAAA,aAAA,GAAA,WAAA;AACA;AACA,GAhTA;AAiTA,EAAA,aAjTA,2BAiTA;AACA,SAAA,wBAAA;AACA,GAnTA;AAoTA,EAAA,OApTA,qBAoTA;AACA,QAAA,KAAA,UAAA,EAAA,EAAA;AACA,WAAA,SAAA;;AAEA,UAAA,KAAA,gBAAA,IAAA,CAAA,KAAA,oBAAA,EAAA;AACA,aAAA,mBAAA;AACA,aAAA,oBAAA,GAAA,IAAA;AACA;AACA;AACA,GA7TA;AA8TA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,WAAA,OAAA,GAAA,KAAA,CAAA,KAAA;AACA,WAAA,MAAA,GAAA,KAAA,CAAA,IAAA;AAEA,UAAA,SAAA,GAAA,KAAA,mBAAA,CAAA,KAAA,CAAA;AACA,MAAA,SAAA,CAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AACA,MAAA,SAAA,CAAA,IAAA,GAAA,KAAA,CAAA,IAAA;AAEA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,OAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,SAAA;AACA,KAZA;AAaA,IAAA,mBAbA,+BAaA,CAbA,EAaA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,MAAA;;AAEA,UAAA,MAAA,CAAA,QAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA,CAAA,MAAA;AACA,YAAA,WAAA,GAAA,MAAA,CAAA,SAAA,IAAA,MAAA,CAAA,KAAA;;AAEA,YAAA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,mBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,gBAAA,CAAA,IACA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,wBAAA,CADA,IACA,UAAA,CAAA,QAAA,CAAA,UAAA,CAAA,aAAA,EAAA,wBAAA,CADA,EACA;AACA,UAAA,UAAA,CAAA,cAAA;;AAEA,cAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AACA,gBAAA,KAAA,WAAA,KAAA,WAAA,EAAA;AACA,kBAAA,KAAA,aAAA,IAAA,KAAA,WAAA,GAAA,CAAA,CAAA,KAAA,KAAA,gBAAA,EAAA;AACA,qBAAA,WAAA,GAAA,IAAA;AACA,qBAAA,WAAA,GAAA,IAAA;AACA,eAHA,MAIA;AACA,qBAAA,WAAA,GAAA,KAAA,WAAA,GAAA,CAAA,CAAA;AACA;AACA,aARA,MASA;AACA,mBAAA,WAAA,GAAA,KAAA,gBAAA;AACA,mBAAA,WAAA,GAAA,WAAA;AACA;;AAEA,iBAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,WAAA;AACA,iBAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,WAAA;AACA,iBAAA,SAAA;AACA,WAlBA,MAmBA,IAAA,KAAA,QAAA,KAAA,UAAA,EAAA;AACA,gBAAA,OAAA,GAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,OAAA;;AACA,gBAAA,CAAA,OAAA,EAAA;AACA,mBAAA,eAAA,GAAA,KAAA,eAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,uBAAA,IAAA,CAAA,KAAA,KAAA,WAAA;AAAA,eAAA,CAAA;AACA;;AAEA,iBAAA,iBAAA,CAAA,WAAA;AACA,iBAAA,KAAA,CAAA,sBAAA,EAAA,KAAA,eAAA;AACA;;AAEA,eAAA,KAAA,CAAA,MAAA,EAAA,KAAA,mBAAA,CAAA,KAAA,CAAA;AACA;AACA;AACA,KAzDA;AA0DA,IAAA,UA1DA,sBA0DA,KA1DA,EA0DA;AAAA;;AACA,UAAA,IAAA,sBAAA,KAAA,CAAA;;AAEA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,KAAA,EAAA,KAAA,EAAA;AACA,YAAA,MAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,CAAA,WAAA,CAAA;AACA,YAAA,MAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,CAAA,WAAA,CAAA;AAEA,YAAA,MAAA,GAAA,IAAA;AAEA,YAAA,MAAA,IAAA,IAAA,IAAA,MAAA,IAAA,IAAA,EACA,MAAA,GAAA,CAAA,CAAA,CADA,KAEA,IAAA,MAAA,IAAA,IAAA,IAAA,MAAA,IAAA,IAAA,EACA,MAAA,GAAA,CAAA,CADA,KAEA,IAAA,MAAA,IAAA,IAAA,IAAA,MAAA,IAAA,IAAA,EACA,MAAA,GAAA,CAAA,CADA,KAEA,IAAA,OAAA,MAAA,KAAA,QAAA,IAAA,OAAA,MAAA,KAAA,QAAA,EACA,MAAA,GAAA,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA,SAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAAA,CADA,KAGA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAA,CAAA,CAAA,GAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,CAAA;AAEA,eAAA,KAAA,CAAA,WAAA,GAAA,MAAA;AACA,OAlBA;AAoBA,aAAA,IAAA;AACA,KAlFA;AAmFA,IAAA,YAnFA,wBAmFA,KAnFA,EAmFA;AAAA;;AACA,UAAA,IAAA,sBAAA,KAAA,CAAA;;AAEA,MAAA,IAAA,CAAA,IAAA,CAAA,UAAA,KAAA,EAAA,KAAA,EAAA;AACA,eAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AACA,OAFA;AAIA,aAAA,IAAA;AACA,KA3FA;AA4FA,IAAA,cA5FA,0BA4FA,KA5FA,EA4FA,KA5FA,EA4FA,KA5FA,EA4FA;AACA,UAAA,MAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,UAAA,MAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA;;AAEA,UAAA,OAAA,MAAA,KAAA,QAAA,IAAA,MAAA,YAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,aAAA,IAAA,MAAA,KAAA,MAAA,EAAA;AACA,iBAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA,SAAA,EAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA,CAAA;AACA;AACA,OAJA,MAKA;AACA,QAAA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAA,CAAA,CAAA,GAAA,CAAA;AACA;;AAEA,UAAA,MAAA,KAAA,MAAA,EAAA;AACA,eAAA,KAAA,eAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,KAAA,cAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,CAAA,CAAA,GAAA,CAAA;AACA;;AAEA,aAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,GAAA,MAAA;AACA,KA/GA;AAgHA,IAAA,iBAhHA,6BAgHA,KAhHA,EAgHA;AACA,UAAA,KAAA,GAAA,KAAA,eAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,KAAA,KAAA,KAAA;AAAA,OAAA,CAAA;;AAEA,UAAA,KAAA,IAAA,CAAA,EAAA;AACA,YAAA,KAAA,aAAA,IAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,GAAA,CAAA,CAAA,KAAA,KAAA,gBAAA,EACA,KAAA,eAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EADA,KAGA,KAAA,eAAA,CAAA,KAAA,IAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,KAAA,EAAA,KAAA,eAAA,CAAA,KAAA,EAAA,KAAA,GAAA,CAAA;AAAA,SAAA;AACA,OALA,MAMA;AACA,aAAA,eAAA,CAAA,IAAA,CAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,SAAA;AACA;;AAEA,WAAA,eAAA,sBAAA,KAAA,eAAA;AACA,KA9HA;AA+HA,IAAA,MA/HA,kBA+HA,IA/HA,EA+HA;AACA,UAAA,aAAA,GAAA,EAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,UAAA,GAAA,IAAA;AACA,YAAA,WAAA,GAAA,KAAA;;AAEA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,GAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,cAAA,WAAA,GAAA,GAAA,CAAA,WAAA,IAAA,GAAA,CAAA,KAAA,CAFA,CAIA;;AACA,cAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,WAAA,CAAA,EAAA;AACA,gBAAA,WAAA,GAAA,KAAA,OAAA,CAAA,WAAA,CAAA;AACA,gBAAA,cAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,WAAA,CAAA;AACA,gBAAA,gBAAA,GAAA,GAAA,CAAA,eAAA,KAAA,QAAA,GAAA,GAAA,CAAA,cAAA,GAAA,WAAA,CAAA,GAAA,CAAA,eAAA,CAAA;;AACA,gBAAA,CAAA,gBAAA,CAAA,cAAA,EAAA,WAAA,EAAA,KAAA,YAAA,CAAA,EAAA;AACA,cAAA,UAAA,GAAA,KAAA;AACA;;AAEA,gBAAA,CAAA,UAAA,EAAA;AACA;AACA;AACA;;AAEA,cAAA,CAAA,GAAA,CAAA,mBAAA,IAAA,KAAA,eAAA,IAAA,CAAA,WAAA,EAAA;AACA,YAAA,WAAA,GAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,KAAA,OAAA,CAAA,QAAA,CAAA,EAAA,KAAA,YAAA,CAAA;AACA;AACA;;AAEA,YAAA,OAAA,GAAA,UAAA;;AACA,YAAA,KAAA,eAAA,EAAA;AACA,UAAA,OAAA,GAAA,UAAA,IAAA,WAAA;AACA;;AAEA,YAAA,OAAA,EAAA;AACA,UAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,UAAA,aAAA,CAAA,MAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA,QAAA,aAAA,GAAA,IAAA;AACA;;AAEA,UAAA,WAAA,GAAA,KAAA,mBAAA,CAAA,KAAA,CAAA;AACA,MAAA,WAAA,CAAA,aAAA,GAAA,aAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AAEA,aAAA,aAAA;AACA,KAhLA;AAiLA,IAAA,UAjLA,sBAiLA,CAjLA,EAiLA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,MAAA,GAAA,KAAA,CAAA,MAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,QAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,aAAA,IAAA,MAAA,CAAA,aAAA,CAAA,QAAA;;AAEA,UAAA,UAAA,IAAA,OAAA,IAAA,UAAA,IAAA,QAAA,IAAA,UAAA,IAAA,GAAA,IACA,UAAA,IAAA,OADA,IACA,UAAA,IAAA,QADA,IACA,UAAA,IAAA,GADA,IAEA,UAAA,CAAA,QAAA,CAAA,MAAA,EAAA,aAAA,CAFA,EAEA;AACA;AACA;;AAEA,WAAA,KAAA,CAAA,WAAA,EAAA,CAAA;;AAEA,UAAA,KAAA,aAAA,EAAA;AACA,YAAA,OAAA,GAAA,CAAA,CAAA,IAAA;AACA,YAAA,QAAA,GAAA,CAAA,CAAA,KAAA;;AAEA,YAAA,KAAA,uBAAA,MAAA,KAAA,CAAA,QAAA,IAAA,KAAA,cAAA,IAAA,IAAA,EAAA;AACA,UAAA,UAAA,CAAA,cAAA;AACA,eAAA,aAAA,GAAA,QAAA;AACA,eAAA,WAAA,CAAA,KAAA;AACA,SAJA,MAKA;AACA,cAAA,QAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA;AACA,cAAA,aAAA,GAAA,KAAA,UAAA,GAAA,KAAA,GAAA,KAAA,gBAAA;AACA,eAAA,cAAA,GAAA,QAAA;AACA,eAAA,aAAA,GAAA,QAAA;;AAEA,cAAA,aAAA,EAAA;AACA,gBAAA,OAAA,GAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,OAAA;;AAEA,gBAAA,QAAA,IAAA,OAAA,EAAA;AACA,kBAAA,KAAA,qBAAA,EAAA,EAAA;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,IAAA;AACA,eAFA,MAGA;AACA,oBAAA,cAAA,GAAA,KAAA,oBAAA,CAAA,OAAA,CAAA;;AACA,oBAAA,UAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA;AAAA,yBAAA,CAAA,IAAA,cAAA;AAAA,iBAAA,CAAA;;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,UAAA;AACA;;AAEA,mBAAA,KAAA,CAAA,cAAA,EAAA;AAAA,gBAAA,aAAA,EAAA,KAAA;AAAA,gBAAA,IAAA,EAAA,OAAA;AAAA,gBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA;AACA,aAXA,MAYA;AACA,kBAAA,KAAA,qBAAA,EAAA,EAAA;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,OAAA;AACA,eAFA,MAGA,IAAA,KAAA,uBAAA,EAAA,EAAA;AACA,oBAAA,WAAA,GAAA,OAAA,GAAA,KAAA,SAAA,IAAA,EAAA,GAAA,EAAA;;AACA,gBAAA,WAAA,gCAAA,WAAA,IAAA,OAAA,EAAA;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,WAAA;AACA;;AAEA,mBAAA,KAAA,CAAA,YAAA,EAAA;AAAA,gBAAA,aAAA,EAAA,KAAA;AAAA,gBAAA,IAAA,EAAA,OAAA;AAAA,gBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA;AACA;AACA,WA3BA,MA4BA;AACA,gBAAA,KAAA,aAAA,KAAA,QAAA,EAAA;AACA,kBAAA,QAAA,EAAA;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,IAAA;AACA,qBAAA,KAAA,CAAA,cAAA,EAAA;AAAA,kBAAA,aAAA,EAAA,KAAA;AAAA,kBAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AACA,eAHA,MAIA;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,OAAA;AACA,qBAAA,KAAA,CAAA,YAAA,EAAA;AAAA,kBAAA,aAAA,EAAA,KAAA;AAAA,kBAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AACA;AACA,aATA,MAUA,IAAA,KAAA,aAAA,KAAA,UAAA,EAAA;AACA,kBAAA,QAAA,EAAA;AACA,oBAAA,eAAA,GAAA,KAAA,oBAAA,CAAA,OAAA,CAAA;;AACA,oBAAA,WAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA;AAAA,yBAAA,CAAA,IAAA,eAAA;AAAA,iBAAA,CAAA;;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,WAAA;AACA,qBAAA,KAAA,CAAA,cAAA,EAAA;AAAA,kBAAA,aAAA,EAAA,KAAA;AAAA,kBAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AACA,eALA,MAMA;AACA,oBAAA,WAAA,GAAA,KAAA,SAAA,gCAAA,KAAA,SAAA,IAAA,OAAA,KAAA,CAAA,OAAA,CAAA;;AACA,qBAAA,KAAA,CAAA,kBAAA,EAAA,WAAA;AACA,qBAAA,KAAA,CAAA,YAAA,EAAA;AAAA,kBAAA,aAAA,EAAA,KAAA;AAAA,kBAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,KAAA,EAAA,KAAA,CAAA,KAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAA,UAAA,GAAA,KAAA;AACA,KAvQA;AAwQA,IAAA,eAxQA,2BAwQA,KAxQA,EAwQA;AACA,MAAA,UAAA,CAAA,cAAA;AACA,MAAA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,KAAA;AAEA,WAAA,KAAA,CAAA,6BAAA,EAAA,KAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,KAAA;AACA,KA9QA;AA+QA,IAAA,aA/QA,2BA+QA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAjRA;AAkRA,IAAA,YAlRA,wBAkRA,CAlRA,EAkRA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,OAAA,GAAA,CAAA,CAAA,IAAA;AACA,UAAA,QAAA,GAAA,CAAA,CAAA,KAAA;;AAEA,UAAA,KAAA,aAAA,EAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,MAAA;;AAEA,gBAAA,KAAA,CAAA,KAAA;AACA;AACA,eAAA,EAAA;AACA,gBAAA,OAAA,GAAA,KAAA,qBAAA,CAAA,GAAA,CAAA;;AACA,gBAAA,OAAA,EAAA;AACA,cAAA,OAAA,CAAA,KAAA;AACA;;AAEA,YAAA,KAAA,CAAA,cAAA;AACA;AAEA;;AACA,eAAA,EAAA;AACA,gBAAA,OAAA,GAAA,KAAA,qBAAA,CAAA,GAAA,CAAA;;AACA,gBAAA,OAAA,EAAA;AACA,cAAA,OAAA,CAAA,KAAA;AACA;;AAEA,YAAA,KAAA,CAAA,cAAA;AACA;AAEA;;AACA,eAAA,EAAA;AACA,iBAAA,UAAA,CAAA;AAAA,cAAA,aAAA,EAAA,KAAA;AAAA,cAAA,IAAA,EAAA,OAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAAA;AACA;;AAEA;AACA;AACA;AA5BA;AA8BA;AACA,KAzTA;AA0TA,IAAA,qBA1TA,iCA0TA,GA1TA,EA0TA;AACA,UAAA,OAAA,GAAA,GAAA,CAAA,kBAAA;;AACA,UAAA,OAAA,EAAA;AACA,YAAA,UAAA,CAAA,QAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,EACA,OAAA,OAAA,CADA,KAGA,OAAA,KAAA,qBAAA,CAAA,OAAA,CAAA;AACA,OALA,MAMA;AACA,eAAA,IAAA;AACA;AACA,KArUA;AAsUA,IAAA,qBAtUA,iCAsUA,GAtUA,EAsUA;AACA,UAAA,OAAA,GAAA,GAAA,CAAA,sBAAA;;AACA,UAAA,OAAA,EAAA;AACA,YAAA,UAAA,CAAA,QAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,EACA,OAAA,OAAA,CADA,KAGA,OAAA,KAAA,qBAAA,CAAA,OAAA,CAAA;AACA,OALA,MAMA;AACA,eAAA,IAAA;AACA;AACA,KAjVA;AAkVA,IAAA,kBAlVA,8BAkVA,KAlVA,EAkVA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,IAAA;;AAEA,UAAA,KAAA,UAAA,CAAA,OAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,kBAAA,EAAA,IAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAHA,MAIA;AACA,aAAA,KAAA,CAAA,kBAAA,EAAA,OAAA;AACA,aAAA,KAAA,CAAA,YAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;AACA,KA7VA;AA8VA,IAAA,qBA9VA,iCA8VA,KA9VA,EA8VA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,IAAA;;AAEA,UAAA,KAAA,UAAA,CAAA,OAAA,CAAA,EAAA;AACA,YAAA,cAAA,GAAA,KAAA,oBAAA,CAAA,OAAA,CAAA;;AACA,YAAA,UAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA;AAAA,iBAAA,CAAA,IAAA,cAAA;AAAA,SAAA,CAAA;;AACA,aAAA,KAAA,CAAA,kBAAA,EAAA,UAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OALA,MAMA;AACA,YAAA,WAAA,GAAA,KAAA,SAAA,sBAAA,KAAA,SAAA,IAAA,EAAA;;AACA,QAAA,WAAA,gCAAA,WAAA,IAAA,OAAA,EAAA;AACA,aAAA,KAAA,CAAA,kBAAA,EAAA,WAAA;AACA,aAAA,KAAA,CAAA,YAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;AACA,KA7WA;AA8WA,IAAA,sBA9WA,kCA8WA,KA9WA,EA8WA;AACA,UAAA,aAAA,GAAA,KAAA,aAAA;AACA,UAAA,OAAA,GAAA,KAAA,eAAA;;AACA,UAAA,UAAA,GAAA,OAAA,GAAA,EAAA,GAAA,aAAA,sBAAA,aAAA,uBAAA,KAAA,KAAA,CAAA;;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,UAAA;AAEA,UAAA,OAAA,EACA,KAAA,KAAA,CAAA,kBAAA,EAAA;AAAA,QAAA,aAAA,EAAA;AAAA,OAAA,EADA,KAGA,KAAA,KAAA,CAAA,gBAAA,EAAA;AAAA,QAAA,aAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAxXA;AAyXA,IAAA,qBAzXA,mCAyXA;AACA,aAAA,KAAA,aAAA,KAAA,QAAA;AACA,KA3XA;AA4XA,IAAA,uBA5XA,qCA4XA;AACA,aAAA,KAAA,aAAA,KAAA,UAAA;AACA,KA9XA;AA+XA,IAAA,UA/XA,sBA+XA,OA/XA,EA+XA;AACA,UAAA,OAAA,IAAA,KAAA,SAAA,EAAA;AACA,YAAA,KAAA,OAAA,EAAA;AACA,iBAAA,KAAA,eAAA,GAAA,KAAA,eAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,OAAA,CAAA,MAAA,SAAA,GAAA,KAAA;AACA,SAFA,MAGA;AACA,cAAA,KAAA,SAAA,YAAA,KAAA,EACA,OAAA,KAAA,oBAAA,CAAA,OAAA,IAAA,CAAA,CAAA,CADA,KAGA,OAAA,KAAA,MAAA,CAAA,OAAA,EAAA,KAAA,SAAA,CAAA;AACA;AACA;;AAEA,aAAA,KAAA;AACA,KA7YA;AA8YA,IAAA,oBA9YA,gCA8YA,OA9YA,EA8YA;AACA,aAAA,KAAA,SAAA,CAAA,OAAA,EAAA,KAAA,SAAA,CAAA;AACA,KAhZA;AAiZA,IAAA,SAjZA,qBAiZA,OAjZA,EAiZA,UAjZA,EAiZA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA;;AACA,UAAA,UAAA,IAAA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,MAAA,CAAA,OAAA,EAAA,UAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,CAAA;AACA;AACA;AACA;AACA;;AAEA,aAAA,KAAA;AACA,KA7ZA;AA8ZA,IAAA,mBA9ZA,+BA8ZA,SA9ZA,EA8ZA;AACA,WAAA,eAAA,GAAA,EAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA;AAAA,oDACA,SADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,eAAA,CAAA,MAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAAA,CAAA,IAAA,CAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA,OAJA,MAKA;AACA,aAAA,eAAA,CAAA,MAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,OAAA,CAAA,CAAA,IAAA,CAAA;AACA;AACA,KAxaA;AAyaA,IAAA,qBAzaA,iCAyaA,YAzaA,EAyaA;AACA,UAAA,YAAA,IAAA,YAAA,CAAA,MAAA,EAAA;AACA,aAAA,iBAAA,GAAA,EAAA;;AADA,oDAEA,YAFA;AAAA;;AAAA;AAEA,iEAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,iBAAA,CAAA,MAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAAA,CAAA,IAAA,CAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAKA,OALA,MAMA;AACA,aAAA,iBAAA,GAAA,IAAA;AACA;AACA,KAnbA;AAobA,IAAA,oBApbA,gCAobA,WApbA,EAobA;AACA,UAAA,WAAA,IAAA,WAAA,CAAA,MAAA,EAAA;AACA,aAAA,gBAAA,GAAA,EAAA;;AADA,oDAEA,WAFA;AAAA;;AAAA;AAEA,iEAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,gBAAA,CAAA,MAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAAA,CAAA,IAAA,CAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAKA,OALA,MAMA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA;AACA,KA9bA;AA+bA,IAAA,MA/bA,kBA+bA,KA/bA,EA+bA,KA/bA,EA+bA;AACA,aAAA,KAAA,kBAAA,KAAA,QAAA,GAAA,KAAA,KAAA,KAAA,GAAA,WAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAAA,CAAA;AACA,KAjcA;AAkcA,IAAA,WAlcA,uBAkcA,KAlcA,EAkcA;AACA,UAAA,UAAA,EAAA,QAAA;;AAEA,UAAA,KAAA,aAAA,GAAA,KAAA,cAAA,EAAA;AACA,QAAA,UAAA,GAAA,KAAA,cAAA;AACA,QAAA,QAAA,GAAA,KAAA,aAAA;AACA,OAHA,MAIA,IAAA,KAAA,aAAA,GAAA,KAAA,cAAA,EAAA;AACA,QAAA,UAAA,GAAA,KAAA,aAAA;AACA,QAAA,QAAA,GAAA,KAAA,cAAA;AACA,OAHA,MAIA;AACA,QAAA,UAAA,GAAA,KAAA,aAAA;AACA,QAAA,QAAA,GAAA,KAAA,aAAA;AACA;;AAEA,UAAA,KAAA,IAAA,IAAA,KAAA,SAAA,EAAA;AACA,QAAA,UAAA,IAAA,KAAA,KAAA;AACA,QAAA,QAAA,IAAA,KAAA,KAAA;AACA;;AAEA,UAAA,KAAA,GAAA,KAAA,aAAA;AACA,UAAA,UAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,UAAA,EAAA,CAAA,IAAA,QAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,YAAA,GAAA,KAAA,CAAA,CAAA,CAAA;;AACA,QAAA,UAAA,CAAA,IAAA,CAAA,YAAA;;AACA,aAAA,KAAA,CAAA,YAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA,YAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;;AAEA,WAAA,KAAA,CAAA,kBAAA,EAAA,UAAA;AACA,KAheA;AAieA,IAAA,SAjeA,qBAieA,OAjeA,EAieA;AAAA;;AACA,UAAA,IAAA,GAAA,KAAA,aAAA;AACA,UAAA,GAAA,GAAA,QAAA;;AAEA,UAAA,OAAA,IAAA,OAAA,CAAA,aAAA,EAAA;AACA,QAAA,IAAA,GAAA,KAAA,SAAA,IAAA,EAAA;AACA,OANA,CAQA;;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;;AACA,YAAA,MAAA,CAAA,UAAA,KAAA,KAAA,IAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,GAAA,IAAA,OAAA,MAAA,CAAA,MAAA,IAAA,MAAA,CAAA,KAAA,IAAA,GAAA;;AAEA,cAAA,CAAA,GAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,KAAA,YAAA;AACA;AACA;AACA,OAlBA,CAoBA;;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,QAAA,GAAA,IAAA,IAAA;;AACA,aAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;AACA,cAAA,OAAA,GAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA;;AACA,cAAA,OAAA,CAAA,UAAA,KAAA,KAAA,IAAA,OAAA,CAAA,KAAA,EAAA;AACA,gBAAA,QAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,OAAA,CAAA,KAAA,CAAA;;AAEA,gBAAA,QAAA,IAAA,IAAA,EAAA;AACA,kBAAA,MAAA,CAAA,cAAA,EAAA;AACA,gBAAA,QAAA,GAAA,MAAA,CAAA,cAAA,CAAA;AACA,kBAAA,IAAA,EAAA,QADA;AAEA,kBAAA,KAAA,EAAA,OAAA,CAAA;AAFA,iBAAA,CAAA;AAIA,eALA,MAOA,QAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA,aATA,MAWA,QAAA,GAAA,EAAA;;AAGA,YAAA,GAAA,IAAA,MAAA,QAAA,GAAA,GAAA;;AAEA,gBAAA,EAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,GAAA,IAAA,MAAA,CAAA,YAAA;AACA;AACA;AACA;AACA,OA5BA;AA8BA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA,CAAA,GAAA,CAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,CAAA;;AAIA,UAAA,MAAA,CAAA,SAAA,CAAA,gBAAA,EAAA;AACA,QAAA,SAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,cAAA,GAAA,MAAA;AACA,OAFA,MAGA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;;AACA,YAAA,IAAA,CAAA,QAAA,KAAA,SAAA,EAAA;AACA,UAAA,IAAA,CAAA,YAAA,CAAA,MAAA,EAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,CAAA,YAAA,CAAA,UAAA,EAAA,KAAA,cAAA,GAAA,MAAA;AACA,UAAA,IAAA,CAAA,KAAA;AACA,SAJA,MAKA;AACA,UAAA,GAAA,GAAA,iCAAA,GAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA;AACA;;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA;AACA,KA1iBA;AA2iBA,IAAA,SA3iBA,uBA2iBA;AACA,WAAA,OAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,OAAA;AACA,KA9iBA;AA+iBA,IAAA,mBA/iBA,+BA+iBA,KA/iBA,EA+iBA;AACA,UAAA,aAAA,GAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,EAAA,IAAA;AACA,WAAA,mBAAA,GAAA,KAAA,CAAA,MAAA,CAAA,aAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,iBAAA,GAAA,KAAA,CAAA,KAAA,GAAA,aAAA,GAAA,KAAA,GAAA,CAAA,UAAA;AAEA,WAAA,sBAAA;AACA,KAtjBA;AAujBA,IAAA,cAvjBA,0BAujBA,KAvjBA,EAujBA;AACA,UAAA,aAAA,GAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,EAAA,IAAA;AACA,MAAA,UAAA,CAAA,QAAA,CAAA,KAAA,GAAA,EAAA,qBAAA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,GAAA,CAAA,YAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,GAAA,GAAA,IAAA,IAAA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA,KAAA,GAAA,aAAA,GAAA,KAAA,GAAA,CAAA,UAAA,GAAA,IAAA;AAEA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,KA/jBA;AAgkBA,IAAA,iBAhkBA,+BAgkBA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,YAAA,CAAA,UAAA,GAAA,KAAA,iBAAA;AACA,UAAA,WAAA,GAAA,KAAA,mBAAA,CAAA,WAAA;AACA,UAAA,cAAA,GAAA,WAAA,GAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,IAAA,EAAA;;AAEA,UAAA,WAAA,GAAA,KAAA,GAAA,QAAA,CAAA,QAAA,EAAA,EAAA,CAAA,EAAA;AACA,YAAA,KAAA,gBAAA,KAAA,KAAA,EAAA;AACA,cAAA,UAAA,GAAA,KAAA,mBAAA,CAAA,kBAAA;AACA,cAAA,eAAA,GAAA,UAAA,CAAA,WAAA,GAAA,KAAA;;AAEA,cAAA,cAAA,GAAA,EAAA,IAAA,eAAA,GAAA,EAAA,EAAA;AACA,gBAAA,KAAA,UAAA,EAAA;AACA,kBAAA,cAAA,GAAA,KAAA,wBAAA,CAAA,KAAA,mBAAA,CAAA;AACA,kBAAA,mBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,yCAAA,CAAA;AACA,kBAAA,qBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,2CAAA,CAAA;AACA,kBAAA,qBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,2CAAA,CAAA;AACA,kBAAA,iBAAA,GAAA,UAAA,CAAA,KAAA,CAAA,KAAA,mBAAA,CAAA;AAEA,mBAAA,cAAA,CAAA,qBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,eAAA;AACA,mBAAA,cAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,eAAA;AACA,mBAAA,cAAA,CAAA,qBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,eAAA;AACA,aAVA,MAWA;AACA,mBAAA,mBAAA,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,GAAA,IAAA;;AACA,kBAAA,UAAA,EAAA;AACA,gBAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,eAAA,GAAA,IAAA;AACA;AACA;AACA;AACA,SAvBA,MAwBA,IAAA,KAAA,gBAAA,KAAA,QAAA,EAAA;AACA,cAAA,KAAA,UAAA,EAAA;AACA,iBAAA,qBAAA,CAAA,KAAA,mBAAA,EAAA,cAAA,EAAA,KAAA;AACA,WAFA,MAGA;AACA,iBAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA,GAAA,KAAA,GAAA,IAAA;AACA,iBAAA,mBAAA,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,GAAA,IAAA;AACA;AACA;;AAEA,aAAA,KAAA,CAAA,mBAAA,EAAA;AACA,UAAA,OAAA,EAAA,KAAA,mBADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAAA;AAIA;;AAEA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,WAAA,CAAA,KAAA,GAAA,EAAA,qBAAA;AAEA,WAAA,wBAAA;;AAEA,UAAA,KAAA,UAAA,EAAA,EAAA;AACA,aAAA,SAAA;AACA;AACA,KAxnBA;AAynBA,IAAA,cAznBA,0BAynBA,KAznBA,EAynBA,iBAznBA,EAynBA,cAznBA,EAynBA,eAznBA,EAynBA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,QAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,KAAA,UAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,IAAA;;AAEA,YAAA,QAAA,EAAA;AACA,cAAA,GAAA,GAAA,QAAA,CAAA,QAAA,CAAA,iBAAA,CAAA;AACA,cAAA,OAAA,GAAA,GAAA,CAAA,kBAAA;AACA,UAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,GAAA,IAAA;;AAEA,cAAA,OAAA,IAAA,eAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,KAAA,GAAA,eAAA,GAAA,IAAA;AACA;AACA,SARA,MASA;AACA,gBAAA,IAAA,KAAA,CAAA,mEAAA,CAAA;AACA;AACA;AACA,KA1oBA;AA2oBA,IAAA,sBA3oBA,oCA2oBA;AAAA;;AACA,UAAA,CAAA,KAAA,4BAAA,EAAA;AACA,aAAA,4BAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,WAAA,EAAA,YAAA;AACA,cAAA,MAAA,CAAA,cAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,KAAA;AACA;AACA,SAJA,CAAA;AAKA;;AAEA,UAAA,CAAA,KAAA,+BAAA,EAAA;AACA,aAAA,+BAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,YAAA;AACA,cAAA,MAAA,CAAA,cAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,KAAA;;AACA,YAAA,MAAA,CAAA,iBAAA;AACA;AACA,SALA,CAAA;AAMA;AAEA,KA7pBA;AA8pBA,IAAA,wBA9pBA,sCA8pBA;AACA,UAAA,KAAA,4BAAA,EAAA;AACA,QAAA,QAAA,CAAA,mBAAA,CAAA,UAAA,EAAA,KAAA,4BAAA;AACA,aAAA,4BAAA,GAAA,IAAA;AACA;;AAEA,UAAA,KAAA,+BAAA,EAAA;AACA,QAAA,QAAA,CAAA,mBAAA,CAAA,UAAA,EAAA,KAAA,+BAAA;AACA,aAAA,+BAAA,GAAA,IAAA;AACA;AACA,KAxqBA;AAyqBA,IAAA,uBAzqBA,mCAyqBA,CAzqBA,EAyqBA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,MAAA;;AAEA,UAAA,KAAA,kBAAA,IAAA,MAAA,CAAA,iBAAA,EAAA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,QAAA,KAAA,OAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,KAAA,UAAA,IAAA,UAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,EAAA,kBAAA,CAAA,EACA,KAAA,CAAA,aAAA,CAAA,SAAA,GAAA,KAAA,CADA,KAGA,KAAA,CAAA,aAAA,CAAA,SAAA,GAAA,IAAA;AACA;AACA,KAnrBA;AAorBA,IAAA,uBAprBA,mCAorBA,KAprBA,EAorBA;AACA,UAAA,KAAA,cAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA;AACA;AACA;;AAEA,WAAA,mBAAA,GAAA,UAAA,CAAA,0BAAA,CAAA,KAAA,KAAA,CAAA,kBAAA,CAAA;AACA,WAAA,oBAAA,GAAA,UAAA,CAAA,2BAAA,CAAA,KAAA,KAAA,CAAA,kBAAA,CAAA;AAEA,WAAA,aAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,CAAA,MAAA,CAAA;AACA,MAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EAVA,CAUA;AACA,KA/rBA;AAgsBA,IAAA,sBAhsBA,kCAgsBA,KAhsBA,EAgsBA;AACA,UAAA,UAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,CAAA,MAAA,CAAA;;AACA,UAAA,KAAA,kBAAA,IAAA,KAAA,aAAA,IAAA,UAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA;AACA,YAAA,eAAA,GAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,CAAA;AACA,YAAA,gBAAA,GAAA,UAAA,CAAA,SAAA,CAAA,UAAA,CAAA;;AAEA,YAAA,KAAA,aAAA,KAAA,UAAA,EAAA;AACA,cAAA,UAAA,GAAA,gBAAA,CAAA,IAAA,GAAA,eAAA,CAAA,IAAA;AACA,cAAA,YAAA,GAAA,gBAAA,CAAA,IAAA,GAAA,UAAA,CAAA,WAAA,GAAA,CAAA;AAEA,eAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,GAAA,gBAAA,CAAA,GAAA,GAAA,eAAA,CAAA,GAAA,IAAA,KAAA,oBAAA,GAAA,CAAA,IAAA,IAAA;AACA,eAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,GAAA,GAAA,gBAAA,CAAA,GAAA,GAAA,eAAA,CAAA,GAAA,GAAA,UAAA,CAAA,YAAA,GAAA,IAAA;;AAEA,cAAA,KAAA,CAAA,KAAA,GAAA,YAAA,EAAA;AACA,iBAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,IAAA,GAAA,UAAA,GAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,mBAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,iBAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,IAAA,GAAA,UAAA,GAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,mBAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,iBAAA,YAAA,GAAA,CAAA;AACA,WAJA,MAKA;AACA,iBAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,IAAA,GAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,mBAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,iBAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,IAAA,GAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,mBAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,iBAAA,YAAA,GAAA,CAAA,CAAA;AACA;;AAEA,eAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,eAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA;AACA;AACA,KA7tBA;AA8tBA,IAAA,uBA9tBA,mCA8tBA,KA9tBA,EA8tBA;AACA,UAAA,KAAA,kBAAA,IAAA,KAAA,aAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA;AACA,aAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,aAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA;AACA,KApuBA;AAquBA,IAAA,kBAruBA,8BAquBA,KAruBA,EAquBA;AACA,MAAA,KAAA,CAAA,cAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,YAAA,SAAA,GAAA,UAAA,CAAA,KAAA,CAAA,KAAA,aAAA,CAAA;AACA,YAAA,SAAA,GAAA,UAAA,CAAA,KAAA,CAAA,KAAA,gBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AACA,YAAA,SAAA,GAAA,SAAA,KAAA,SAAA;;AACA,YAAA,SAAA,KAAA,SAAA,GAAA,SAAA,KAAA,CAAA,IAAA,KAAA,YAAA,KAAA,CAAA,CAAA,IAAA,SAAA,GAAA,SAAA,KAAA,CAAA,IAAA,KAAA,YAAA,KAAA,CAAA,CAAA,EAAA;AACA,UAAA,SAAA,GAAA,KAAA;AACA;;AAEA,YAAA,SAAA,EAAA;AACA,UAAA,WAAA,CAAA,YAAA,CAAA,KAAA,aAAA,EAAA,SAAA,EAAA,SAAA;AAEA,eAAA,KAAA,CAAA,gBAAA,EAAA;AACA,YAAA,aAAA,EAAA,KADA;AAEA,YAAA,SAAA,EAAA,SAFA;AAGA,YAAA,SAAA,EAAA;AAHA,WAAA;AAKA;;AAEA,aAAA,KAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,aAAA,KAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,aAAA,aAAA,CAAA,SAAA,GAAA,KAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA,KA/vBA;AAgwBA,IAAA,gBAhwBA,4BAgwBA,OAhwBA,EAgwBA;AACA,UAAA,OAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,eAAA,OAAA;AACA,OAFA,MAGA;AACA,YAAA,MAAA,GAAA,OAAA,CAAA,aAAA;;AACA,eAAA,MAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,aAAA;AACA,cAAA,CAAA,MAAA,EAAA;AACA;;AACA,eAAA,MAAA;AACA;AACA,KA5wBA;AA6wBA,IAAA,wBA7wBA,oCA6wBA,MA7wBA,EA6wBA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,aAAA;;AACA,eAAA,MAAA,IAAA,CAAA,UAAA,CAAA,QAAA,CAAA,MAAA,EAAA,6BAAA,CAAA,EAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,aAAA;AACA;;AAEA,eAAA,MAAA;AACA,OAPA,MAQA;AACA,eAAA,IAAA;AACA;AACA,KAzxBA;AA0xBA,IAAA,eA1xBA,2BA0xBA,OA1xBA,EA0xBA,GA1xBA,EA0xBA;AACA,UAAA,OAAA,IAAA,OAAA,CAAA,MAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA;;AACA,cAAA,KAAA,CAAA,SAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,KAAA,GAAA,EAAA;AACA,mBAAA,KAAA;AACA;AACA;AACA;;AAEA,aAAA,IAAA;AACA,KAryBA;AAsyBA,IAAA,qBAtyBA,iCAsyBA,MAtyBA,EAsyBA,cAtyBA,EAsyBA,KAtyBA,EAsyBA;AACA,UAAA,cAAA,GAAA,MAAA,GAAA,KAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,KAAA,GAAA;AACA,UAAA,cAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,8BAAA,CAAA;AACA,UAAA,gBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,gCAAA,CAAA;AACA,UAAA,gBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,gCAAA,CAAA;AACA,UAAA,mBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,cAAA,EAAA,yCAAA,CAAA;AACA,UAAA,qBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,gBAAA,EAAA,2CAAA,CAAA;AACA,UAAA,qBAAA,GAAA,UAAA,CAAA,UAAA,CAAA,gBAAA,EAAA,2CAAA,CAAA;AAEA,UAAA,wBAAA,GAAA,MAAA,GAAA,mBAAA,CAAA,WAAA,GAAA,KAAA,GAAA,cAAA;AACA,UAAA,0BAAA,GAAA,MAAA,GAAA,qBAAA,CAAA,WAAA,GAAA,KAAA,GAAA,cAAA;AACA,UAAA,qBAAA,GAAA,KAAA,GAAA,CAAA,WAAA,IAAA,UAAA,CAAA,wBAAA,CAAA;;AAEA,UAAA,QAAA,GAAA,SAAA,QAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,qBAAA,EAAA;AACA,YAAA,SAAA,IAAA,KAAA,EAAA;AACA,UAAA,SAAA,CAAA,KAAA,CAAA,KAAA,GAAA,qBAAA,GAAA,KAAA,GAAA,UAAA,CAAA,uBAAA,CAAA,cAAA,CAAA,GAAA,IAAA,GAAA,MAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,GAAA,IAAA;AACA;AACA,OALA;;AAOA,MAAA,QAAA,CAAA,cAAA,EAAA,mBAAA,EAAA,wBAAA,EAAA,qBAAA,CAAA;AACA,MAAA,QAAA,CAAA,gBAAA,EAAA,qBAAA,EAAA,0BAAA,EAAA,qBAAA,CAAA;AACA,MAAA,QAAA,CAAA,gBAAA,EAAA,qBAAA,EAAA,0BAAA,EAAA,qBAAA,CAAA;;AAEA,UAAA,MAAA,EAAA;AACA,YAAA,iBAAA,GAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA;AAEA,aAAA,cAAA,CAAA,qBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,IAAA;AACA,aAAA,cAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,IAAA;AACA,aAAA,cAAA,CAAA,qBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,IAAA;AACA;AACA,KAr0BA;AAs0BA,IAAA,cAt0BA,0BAs0BA,KAt0BA,EAs0BA;AACA,UAAA,UAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,EAAA,mCAAA,CAAA,EACA,KAAA,CAAA,aAAA,CAAA,SAAA,GAAA,IAAA,CADA,KAGA,KAAA,CAAA,aAAA,CAAA,SAAA,GAAA,KAAA;AACA,KA30BA;AA40BA,IAAA,cA50BA,0BA40BA,CA50BA,EA40BA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,KAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,eAAA,GAAA,KAAA;AACA,MAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EALA,CAKA;AACA,KAl1BA;AAm1BA,IAAA,aAn1BA,yBAm1BA,CAn1BA,EAm1BA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,KAAA;;AAEA,UAAA,KAAA,WAAA,IAAA,KAAA,eAAA,KAAA,KAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA,CAAA,aAAA;AACA,YAAA,IAAA,GAAA,UAAA,CAAA,SAAA,CAAA,UAAA,EAAA,GAAA,GAAA,UAAA,CAAA,kBAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AACA,YAAA,OAAA,GAAA,IAAA,GAAA,UAAA,CAAA,cAAA,CAAA,UAAA,IAAA,CAAA;AACA,YAAA,cAAA,GAAA,UAAA,CAAA,sBAAA;;AAEA,YAAA,KAAA,GAAA,OAAA,EAAA;AACA,UAAA,UAAA,CAAA,WAAA,CAAA,UAAA,EAAA,8BAAA;AAEA,eAAA,eAAA,GAAA,KAAA;AACA,cAAA,cAAA,EACA,UAAA,CAAA,QAAA,CAAA,cAAA,EAAA,8BAAA,EADA,KAGA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,2BAAA;AACA,SARA,MASA;AACA,cAAA,cAAA,EACA,UAAA,CAAA,WAAA,CAAA,cAAA,EAAA,8BAAA,EADA,KAGA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,2BAAA;AAEA,eAAA,eAAA,GAAA,KAAA,GAAA,CAAA;AACA,UAAA,UAAA,CAAA,QAAA,CAAA,UAAA,EAAA,8BAAA;AACA;;AAEA,QAAA,KAAA,CAAA,cAAA;AACA;AACA,KAn3BA;AAo3BA,IAAA,cAp3BA,0BAo3BA,KAp3BA,EAo3BA;AACA,UAAA,UAAA,GAAA,KAAA,CAAA,aAAA;AACA,UAAA,cAAA,GAAA,UAAA,CAAA,sBAAA;;AACA,UAAA,cAAA,EAAA;AACA,QAAA,UAAA,CAAA,WAAA,CAAA,cAAA,EAAA,8BAAA;AACA;;AAEA,MAAA,UAAA,CAAA,WAAA,CAAA,UAAA,EAAA,8BAAA;AACA,MAAA,UAAA,CAAA,WAAA,CAAA,UAAA,EAAA,2BAAA;AACA,KA73BA;AA83BA,IAAA,YA93BA,wBA83BA,KA93BA,EA83BA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA,aAAA,CAAA,SAAA,GAAA,KAAA;AACA,KAn4BA;AAo4BA,IAAA,SAp4BA,qBAo4BA,KAp4BA,EAo4BA;AACA,UAAA,KAAA,eAAA,IAAA,IAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,eAAA,GAAA,KAAA,eAAA,GAAA,KAAA,eAAA,GAAA,KAAA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,KAAA,eAAA,GAAA,CAAA;;AACA,YAAA,aAAA,sBAAA,KAAA,aAAA,CAAA;;AACA,QAAA,WAAA,CAAA,YAAA,CAAA,aAAA,EAAA,KAAA,eAAA,EAAA,SAAA;AAEA,aAAA,KAAA,CAAA,aAAA,EAAA;AACA,UAAA,aAAA,EAAA,KADA;AAEA,UAAA,SAAA,EAAA,KAAA,eAFA;AAGA,UAAA,SAAA,EAAA,SAHA;AAIA,UAAA,KAAA,EAAA;AAJA,SAAA;AAMA,OAZA,CAcA;;;AACA,WAAA,cAAA,CAAA,KAAA;AACA,WAAA,YAAA,CAAA,KAAA;AACA,MAAA,KAAA,CAAA,cAAA;AACA,KAt5BA;AAu5BA,IAAA,SAv5BA,qBAu5BA,KAv5BA,EAu5BA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,IAAA;AACA,UAAA,QAAA;AACA,UAAA,gBAAA;;AACA,UAAA,aAAA,GAAA,KAAA,YAAA,sBAAA,KAAA,YAAA,IAAA,EAAA;;AAEA,UAAA,KAAA,OAAA,EAAA;AACA,QAAA,QAAA,GAAA,KAAA,iBAAA,GAAA,KAAA,iBAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,OAAA,CAAA,MAAA,SAAA,GAAA,KAAA;AACA,OAFA,MAGA;AACA,QAAA,gBAAA,GAAA,KAAA,SAAA,CAAA,OAAA,EAAA,KAAA,YAAA,CAAA;AACA,QAAA,QAAA,GAAA,gBAAA,GAAA,CAAA,CAAA;AACA;;AAEA,UAAA,QAAA,EAAA;AACA,YAAA,gBAAA,IAAA,IAAA,EAAA;AACA,UAAA,gBAAA,GAAA,KAAA,SAAA,CAAA,OAAA,EAAA,KAAA,YAAA,CAAA;AACA;;AACA,QAAA,aAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,CAAA;;AACA,aAAA,KAAA,CAAA,qBAAA,EAAA,aAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA,KAAA;AACA,OAPA,MAQA;AACA,QAAA,aAAA,CAAA,IAAA,CAAA,OAAA;;AACA,aAAA,KAAA,CAAA,qBAAA,EAAA,aAAA;AACA,aAAA,KAAA,CAAA,YAAA,EAAA,KAAA;AACA;AACA,KAl7BA;AAm7BA,IAAA,cAn7BA,0BAm7BA,CAn7BA,EAm7BA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,aAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,IAAA;AACA,UAAA,eAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,WAAA,CAAA;;AACA,UAAA,kBAAA,GAAA,KAAA,iBAAA,sBAAA,KAAA,iBAAA,IAAA,EAAA;;AAEA,UAAA,KAAA,kBAAA,CAAA,IAAA,CAAA,EAAA;AACA,QAAA,kBAAA,GAAA,kBAAA,CAAA,MAAA,CAAA,UAAA,KAAA;AAAA,iBAAA,KAAA,KAAA,eAAA;AAAA,SAAA,CAAA;AACA,aAAA,KAAA,CAAA,0BAAA,EAAA,kBAAA;AACA,aAAA,KAAA,CAAA,mBAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAJA,MAKA;AACA,QAAA,kBAAA,CAAA,IAAA,CAAA,eAAA;;AACA,aAAA,KAAA,CAAA,0BAAA,EAAA,kBAAA;AACA,aAAA,KAAA,CAAA,iBAAA,EAAA;AAAA,UAAA,aAAA,EAAA,KAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;AACA,KAn8BA;AAo8BA,IAAA,kBAp8BA,8BAo8BA,OAp8BA,EAo8BA;AACA,UAAA,KAAA,mBAAA,IAAA,KAAA,iBAAA,EAAA;AACA,YAAA,eAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,WAAA,CAAA;AACA,eAAA,KAAA,iBAAA,CAAA,OAAA,CAAA,eAAA,IAAA,CAAA,CAAA;AACA;;AACA,aAAA,KAAA;AACA,KA18BA;AA28BA,IAAA,UA38BA,wBA28BA;AACA,aAAA,KAAA,QAAA,IAAA,IAAA;AACA,KA78BA;AA88BA,IAAA,UA98BA,wBA88BA;AACA,cAAA,KAAA,YAAA;AACA,aAAA,OAAA;AACA,iBAAA,MAAA,CAAA,YAAA;;AAEA,aAAA,SAAA;AACA,iBAAA,MAAA,CAAA,cAAA;;AAEA;AACA,gBAAA,IAAA,KAAA,CAAA,KAAA,YAAA,GAAA,0FAAA,CAAA;AARA;AAUA,KAz9BA;AA09BA,IAAA,SA19BA,uBA09BA;AACA,UAAA,OAAA,GAAA,KAAA,UAAA,EAAA;AACA,UAAA,KAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA,OAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,KAAA,MAAA;AACA;;AAEA,UAAA,KAAA,WAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,WAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,WAAA;AACA;;AAEA,UAAA,KAAA,eAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,KAAA,eAAA;AACA;;AAEA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA,OAAA;AACA;;AAEA,UAAA,KAAA,gBAAA,EAAA;AACA,aAAA,gBAAA,CAAA,KAAA;AACA;;AAEA,UAAA,KAAA,kBAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA,aAAA;AACA;;AAEA,UAAA,KAAA,YAAA,EAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,KAAA,YAAA;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,KAAA,iBAAA;AACA;;AAEA,UAAA,KAAA,iBAAA,EAAA;AACA,QAAA,KAAA,CAAA,iBAAA,GAAA,KAAA,iBAAA;AACA;;AAEA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,SAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,KAAA,eAAA;AACA;;AAEA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,OAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA;AACA,KAzgCA;AA0gCA,IAAA,YA1gCA,0BA0gCA;AACA,UAAA,OAAA,GAAA,KAAA,UAAA,EAAA;AACA,UAAA,WAAA,GAAA,OAAA,CAAA,OAAA,CAAA,KAAA,QAAA,CAAA;;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,aAAA,GAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA;;AAEA,YAAA,KAAA,SAAA,EAAA;AACA,eAAA,OAAA,GAAA,aAAA,CAAA,KAAA;AACA,eAAA,MAAA,GAAA,aAAA,CAAA,IAAA;AACA;;AAEA,YAAA,aAAA,CAAA,SAAA,EAAA;AACA,eAAA,WAAA,GAAA,aAAA,CAAA,SAAA;AACA,eAAA,WAAA,GAAA,aAAA,CAAA,SAAA;AACA;;AAEA,YAAA,aAAA,CAAA,aAAA,EAAA;AACA,eAAA,eAAA,GAAA,aAAA,CAAA,aAAA;AACA;;AAEA,YAAA,aAAA,CAAA,OAAA,EAAA;AACA,eAAA,KAAA,CAAA,gBAAA,EAAA,aAAA,CAAA,OAAA;AACA;;AAEA,YAAA,KAAA,gBAAA,EAAA;AACA,eAAA,iBAAA,GAAA,aAAA,CAAA,YAAA;AACA,eAAA,eAAA,GAAA,aAAA,CAAA,UAAA;AACA;;AAEA,YAAA,KAAA,kBAAA,EAAA;AACA,eAAA,aAAA,GAAA,aAAA,CAAA,WAAA;AACA;;AAEA,YAAA,aAAA,CAAA,YAAA,EAAA;AACA,eAAA,iBAAA,GAAA,aAAA,CAAA,eAAA;AACA,eAAA,KAAA,CAAA,qBAAA,EAAA,aAAA,CAAA,YAAA;AACA;;AAEA,YAAA,aAAA,CAAA,iBAAA,EAAA;AACA,eAAA,KAAA,CAAA,0BAAA,EAAA,aAAA,CAAA,iBAAA;AACA;;AAEA,YAAA,aAAA,CAAA,SAAA,EAAA;AACA,eAAA,eAAA,GAAA,aAAA,CAAA,eAAA;AACA,eAAA,KAAA,CAAA,kBAAA,EAAA,aAAA,CAAA,SAAA;AACA;AACA;AACA,KA1jCA;AA2jCA,IAAA,gBA3jCA,4BA2jCA,KA3jCA,EA2jCA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,OAAA,GAAA,UAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,8BAAA,CAAA;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA,YAAA,GAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;;AAEA,UAAA,KAAA,gBAAA,KAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA,UAAA,GAAA,UAAA,CAAA,UAAA,CAAA,KAAA,GAAA,EAAA,sCAAA,EAAA,KAAA,CAAA,KAAA,GACA,UAAA,CAAA,aAAA,CAAA,KAAA,KAAA,CAAA,KAAA,IAAA,IADA;AAEA;AACA,KArkCA;AAskCA,IAAA,mBAtkCA,iCAskCA;AACA,UAAA,KAAA,iBAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,iBAAA,CAAA,KAAA,CAAA,GAAA,CAAA;;AAEA,YAAA,KAAA,gBAAA,KAAA,QAAA,IAAA,KAAA,eAAA,EAAA;AACA,cAAA,KAAA,UAAA,EAAA;AACA,iBAAA,qBAAA,CAAA,IAAA,EAAA,KAAA,eAAA,EAAA,CAAA;AACA,WAFA,MAGA;AACA,iBAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,eAAA;AACA,iBAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,eAAA;AACA;AACA;;AAEA,YAAA,KAAA,UAAA,EAAA;AACA,cAAA,UAAA,GAAA,UAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,uDAAA,CAAA;AACA,cAAA,QAAA,GAAA,UAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,qDAAA,CAAA;AAEA,UAAA,UAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA;AAAA,mBAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AAAA,WAAA;AACA,UAAA,QAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA;AAAA,mBAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AAAA,WAAA;AACA,SANA,MAOA;AACA,cAAA,OAAA,GAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA,8BAAA,CAAA;AACA,UAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA,KAAA;AAAA,mBAAA,MAAA,CAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AAAA,WAAA;AACA;AAGA;AACA,KAlmCA;AAmmCA,IAAA,cAnmCA,0BAmmCA,KAnmCA,EAmmCA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KArmCA;AAsmCA,IAAA,kBAtmCA,8BAsmCA,KAtmCA,EAsmCA;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,KAAA;AACA,KAxmCA;AAymCA,IAAA,gBAzmCA,4BAymCA,KAzmCA,EAymCA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA;AACA,KA3mCA;AA4mCA,IAAA,aA5mCA,yBA4mCA,KA5mCA,EA4mCA;AACA,UAAA,YAAA,GAAA,KAAA,WAAA,sBAAA,KAAA,WAAA,IAAA,EAAA;;AACA,MAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA;;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,YAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,KAAA;AACA,KAjnCA;AAknCA,IAAA,aAlnCA,yBAknCA,KAlnCA,EAknCA;AACA,UAAA,YAAA,sBAAA,KAAA,WAAA,CAAA;;AACA,MAAA,YAAA,CAAA,MAAA,CAAA,KAAA,SAAA,CAAA,KAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA;;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,YAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,KAAA;AACA,KAvnCA;AAwnCA,IAAA,eAxnCA,2BAwnCA,KAxnCA,EAwnCA;AACA,UAAA,YAAA,sBAAA,KAAA,WAAA,CAAA;;AACA,MAAA,YAAA,CAAA,MAAA,CAAA,KAAA,SAAA,CAAA,KAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA;;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,YAAA;AACA,WAAA,KAAA,CAAA,iBAAA,EAAA,KAAA;AACA,KA7nCA;AA8nCA,IAAA,eA9nCA,2BA8nCA,KA9nCA,EA8nCA;AAAA;;AACA,UAAA,KAAA,kBAAA,EAAA;AACA,QAAA,YAAA,CAAA,KAAA,kBAAA,CAAA;AACA;;AAEA,WAAA,kBAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,EAAA;AACA,UAAA,KAAA,EAAA,CAAA,KAAA,CAAA,IAAA,GAAA,CAAA,IAAA,MAAA,CAAA,IADA;AAEA,UAAA,IAAA,EAAA,MAAA,CAAA,IAAA,GAAA;AAFA,SAAA;AAIA,OALA,EAKA,KAAA,kBALA,CAAA;AAMA,KAzoCA;AA0oCA,IAAA,mBA1oCA,+BA0oCA,KA1oCA,EA0oCA;AACA,UAAA,gBAAA;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,gBAAA,GAAA,EAAA;AACA,aAAA,OAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,KAAA,EAAA;AACA,YAAA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,eAAA;AACA;AACA,SAJA;AAKA;;AAEA,aAAA;AACA,QAAA,aAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAAA,OAFA;AAGA,QAAA,IAAA,EAAA,KAAA,MAHA;AAIA,QAAA,SAAA,EAAA,KAAA,WAJA;AAKA,QAAA,SAAA,EAAA,KAAA,WALA;AAMA,QAAA,aAAA,EAAA,KAAA,eANA;AAOA,QAAA,OAAA,EAAA,KAAA,OAPA;AAQA,QAAA,gBAAA,EAAA;AARA,OAAA;AAUA;AA/pCA,GA9TA;AA+9CA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,CACA,yBADA,EACA;AACA,sCAAA,KAAA,QAAA,IAAA,KAAA,aADA;AAEA,mCAAA,KAAA,UAFA;AAGA,iCAAA,KAAA,gBAHA;AAIA,qCAAA,KAAA,gBAAA,IAAA,KAAA,gBAAA,KAAA,KAJA;AAKA,kCAAA,KAAA,UALA;AAMA,0CAAA,KAAA;AANA,OADA,CAAA;AAUA,KAZA;AAaA,IAAA,OAbA,qBAaA;AACA,UAAA,OAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,WAAA,EAAA;AACA,QAAA,OAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,WAAA,MAAA,CAAA,CAAA;AAAA,SAAA,CAAA;;AAEA,YAAA,KAAA,kBAAA,IAAA,KAAA,aAAA,EAAA;AACA,cAAA,cAAA,GAAA,EAAA;;AADA,sDAEA,KAAA,aAFA;AAAA;;AAAA;AAEA,mEAAA;AAAA,kBAAA,SAAA;AACA,kBAAA,MAAA,GAAA,KAAA,eAAA,CAAA,OAAA,EAAA,SAAA,CAAA;;AACA,kBAAA,MAAA,EAAA;AACA,gBAAA,cAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;;AASA,2BAAA,cAAA,qBAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,mBAAA,cAAA,CAAA,OAAA,CAAA,IAAA,IAAA,CAAA;AACA,WAFA,CAAA;AAGA;AACA;;AACA,aAAA,OAAA;AACA,KAlCA;AAmCA,IAAA,aAnCA,2BAmCA;AACA,UAAA,aAAA,GAAA,EAAA;;AADA,kDAGA,KAAA,OAHA;AAAA;;AAAA;AAGA,+DAAA;AAAA,cAAA,GAAA;;AACA,cAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,aAAA,GAAA,aAAA,IAAA,EAAA;AACA,YAAA,aAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AAUA,aAAA,aAAA;AACA,KA9CA;AA+CA,IAAA,iBA/CA,+BA+CA;AACA,UAAA,iBAAA,GAAA,EAAA;;AADA,kDAGA,KAAA,OAHA;AAAA;;AAAA;AAGA,+DAAA;AAAA,cAAA,GAAA;;AACA,cAAA,CAAA,GAAA,CAAA,MAAA,EAAA;AACA,YAAA,iBAAA,GAAA,iBAAA,IAAA,EAAA;AACA,YAAA,iBAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AAUA,aAAA,iBAAA;AACA,KA1DA;AA2DA,IAAA,gBA3DA,8BA2DA;AACA,aAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA;AACA,KA7DA;AA8DA,IAAA,iBA9DA,+BA8DA;AACA,UAAA,KAAA,WAAA,EAAA;AAAA,oDACA,KAAA,WADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,KAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,MAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAEA,aAAA,IAAA;AACA,KAxEA;AAyEA,IAAA,uBAzEA,qCAyEA;AACA,UAAA,KAAA,WAAA,EAAA;AAAA,oDACA,KAAA,WADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,KAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,MAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,cAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAEA,aAAA,IAAA;AACA,KAnFA;AAoFA,IAAA,iBApFA,+BAoFA;AACA,UAAA,KAAA,WAAA,EAAA;AAAA,qDACA,KAAA,WADA;AAAA;;AAAA;AACA,oEAAA;AAAA,gBAAA,KAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,MAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAEA,aAAA,IAAA;AACA,KA9FA;AA+FA,IAAA,uBA/FA,qCA+FA;AACA,UAAA,KAAA,WAAA,EAAA;AAAA,qDACA,KAAA,WADA;AAAA;;AAAA;AACA,oEAAA;AAAA,gBAAA,KAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,MAAA,CAAA,CAAA,IAAA,KAAA,CAAA,IAAA,KAAA,cAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAEA,aAAA,IAAA;AACA,KAzGA;AA0GA,IAAA,aA1GA,2BA0GA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,KAAA;AACA,OAFA,MAGA;AACA,YAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,KAAA;;AAEA,cAAA,KAAA,MAAA,EAAA;AACA,gBAAA,KAAA,QAAA,KAAA,QAAA,EACA,IAAA,GAAA,KAAA,UAAA,CAAA,IAAA,CAAA,CADA,KAEA,IAAA,KAAA,QAAA,KAAA,UAAA,EACA,IAAA,GAAA,KAAA,YAAA,CAAA,IAAA,CAAA;AACA;;AAEA,cAAA,KAAA,UAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA;AACA;;AAEA,iBAAA,IAAA;AACA,SAfA,MAgBA;AACA,iBAAA,IAAA;AACA;AACA;AACA,KAnIA;AAoIA,IAAA,YApIA,0BAoIA;AACA,UAAA,IAAA,GAAA,KAAA,aAAA;;AAEA,UAAA,IAAA,IAAA,KAAA,SAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,IAAA,GAAA,CAAA,GAAA,KAAA,OAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,KAAA,GAAA,KAAA,MAAA,CAAA;AACA,OAHA,MAIA;AACA,eAAA,IAAA;AACA;AACA,KA9IA;AA+IA,IAAA,kBA/IA,gCA+IA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,YAAA;AACA,OAFA,MAGA;AACA,YAAA,IAAA,GAAA,KAAA,aAAA;AACA,eAAA,IAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA;AACA,KAvJA;AAwJA,IAAA,KAxJA,mBAwJA;AACA,UAAA,IAAA,GAAA,KAAA,aAAA;AACA,aAAA,CAAA,IAAA,IAAA,IAAA,CAAA,MAAA,KAAA,CAAA;AACA,KA3JA;AA4JA,IAAA,YA5JA,0BA4JA;AACA,aAAA,KAAA,SAAA,KAAA,KAAA,iBAAA,KAAA,QAAA,IAAA,KAAA,iBAAA,KAAA,MAAA,CAAA;AACA,KA9JA;AA+JA,IAAA,eA/JA,6BA+JA;AACA,aAAA,KAAA,SAAA,KAAA,KAAA,iBAAA,KAAA,KAAA,IAAA,KAAA,iBAAA,KAAA,MAAA,CAAA;AACA,KAjKA;AAkKA,IAAA,MAlKA,oBAkKA;AACA,aAAA,KAAA,WAAA,IAAA,KAAA,eAAA,IAAA,KAAA,eAAA,CAAA,MAAA,GAAA,CAAA;AACA,KApKA;AAqKA,IAAA,UArKA,wBAqKA;AACA,aAAA,KAAA,OAAA,IAAA,MAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,MAAA,GAAA,CAAA,IAAA,KAAA,OAAA,CAAA,WAAA,KAAA,MAAA;AACA,KAvKA;AAwKA,IAAA,eAxKA,6BAwKA;AACA,aAAA,KAAA,OAAA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,QAAA,CAAA;AACA,KA1KA;AA2KA,IAAA,gBA3KA,8BA2KA;AACA,aAAA,CAAA,kCAAA,EAAA,KAAA,WAAA,CAAA;AACA,KA7KA;AA8KA,IAAA,eA9KA,6BA8KA;AACA,UAAA,GAAA,GAAA,KAAA,aAAA;AACA,aAAA,GAAA,IAAA,GAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,MAAA,KAAA,GAAA,CAAA,MAAA;AACA;AAjLA,GA/9CA;AAkpDA,EAAA,UAAA,EAAA;AACA,mBAAA,SADA;AAEA,wBAAA,cAFA;AAGA,qBAAA,WAHA;AAIA,mBAAA,SAJA;AAKA,qBAAA;AALA;AAlpDA,CAAA","sourcesContent":["<template>\n    <div :class=\"containerClass\">\n        <slot></slot>\n        <div class=\"p-datatable-loading\" v-if=\"loading\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\"></div>\n            <div class=\"p-datatable-loading-content\">\n                <i :class=\"loadingIconClass\"></i>\n            </div>\n        </div>\n        <div class=\"p-datatable-header\" v-if=\"$scopedSlots.header\">\n            <slot name=\"header\"></slot>\n        </div>\n        <DTPaginator v-if=\"paginatorTop\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-top\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-wrapper\" v-if=\"!scrollable\">\n            <table ref=\"table\" role=\"grid\">\n                <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"columns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                <DTTableBody :value=\"dataToRender\" :columns=\"columns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                    :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                    :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                    :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                    @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                    @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                    @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                    @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                    @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"columns\" />\n            </table>\n        </div>\n        <div class=\"p-datatable-scrollable-wrapper\" v-else>\n            <DTScrollableView v-if=\"hasFrozenColumns\" :scrollHeight=\"scrollHeight\" :columns=\"frozenColumns\" :frozenWidth=\"frozenWidth\" :frozen=\"true\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"frozenHeaderColumnGroup\" :columns=\"frozenColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"frozenColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"frozenColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"frozenFooterColumnGroup\" :columns=\"frozenColumns\" />\n                </template>\n            </DTScrollableView>\n            <DTScrollableView :scrollHeight=\"scrollHeight\" :columns=\"scrollableColumns\" :frozenWidth=\"frozenWidth\" :rows=\"rows\"\n                :virtualScroll=\"virtualScroll\" :virtualRowHeight=\"virtualRowHeight\" :totalRecords=\"totalRecordsLength\" @virtual-scroll=\"onVirtualScroll\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"scrollableColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"scrollableColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody  v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"scrollableColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"scrollableColumns\" />\n                </template>\n            </DTScrollableView>\n        </div>\n        <DTPaginator v-if=\"paginatorBottom\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-bottom\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-footer\" v-if=\"$scopedSlots.footer\">\n            <slot name=\"footer\"></slot>\n        </div>\n        <div ref=\"resizeHelper\" class=\"p-column-resizer-helper p-highlight\" style=\"display: none\"></div>\n        <span ref=\"reorderIndicatorUp\" class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n        <span ref=\"reorderIndicatorDown\" class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n    </div>\n</template>\n\n<script>\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport DomHandler from '../utils/DomHandler';\nimport Paginator from '../paginator/Paginator';\nimport ScrollableView from './ScrollableView.vue';\nimport TableHeader from './TableHeader.vue';\nimport TableBody from './TableBody.vue';\nimport TableFooter from './TableFooter.vue';\n\nexport default {\n    props: {\n        value: {\n            type: Array,\n            default: null\n        },\n        dataKey: {\n            type: String,\n            default: null\n        },\n        rows: {\n            type: Number,\n            default: 0\n        },\n        first: {\n            type: Number,\n            default: 0\n        },\n        totalRecords: {\n            type: Number,\n            default: 0\n        },\n        paginator: {\n            type: Boolean,\n            default: false\n        },\n        paginatorPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        alwaysShowPaginator: {\n            type: Boolean,\n            default: true\n        },\n        paginatorTemplate: {\n            type: String,\n            default: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n        },\n        pageLinkSize: {\n            type: Number,\n            default: 5\n        },\n        rowsPerPageOptions: {\n            type: Array,\n            default: null\n        },\n        currentPageReportTemplate: {\n            type: String,\n            default: '({currentPage} of {totalPages})'\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadingIcon: {\n            type: String,\n            default: 'pi pi-spinner'\n        },\n        sortField: {\n            type: String,\n            default: null\n        },\n        sortOrder: {\n            type: Number,\n            default: null\n        },\n        defaultSortOrder: {\n            type: Number,\n            default: 1\n        },\n        multiSortMeta: {\n            type: Array,\n            default: null\n        },\n        sortMode: {\n            type: String,\n            default: 'single'\n        },\n        removableSort: {\n            type: Boolean,\n            default: false\n        },\n        filters: {\n            type: Object,\n            default: null\n        },\n        filterLocale: {\n            type: String,\n            default: undefined\n        },\n        selection: {\n            type: [Array,Object],\n            default: null\n        },\n        selectionMode: {\n            type: String,\n            default: null\n        },\n        compareSelectionBy: {\n            type: String,\n            default: 'deepEquals'\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: true\n        },\n        contextMenu: {\n            type: Boolean,\n            default: false\n        },\n        contextMenuSelection: {\n            type: Object,\n            default: null\n        },\n        rowHover: {\n            type: Boolean,\n            default: false\n        },\n        csvSeparator: {\n            type: String,\n            default: ','\n        },\n        exportFilename: {\n            type: String,\n            default: 'download'\n        },\n        autoLayout: {\n            type: Boolean,\n            default: false\n        },\n        resizableColumns: {\n            type: Boolean,\n            default: false\n        },\n        columnResizeMode: {\n            type: String,\n            default: 'fit'\n        },\n        reorderableColumns: {\n            type: Boolean,\n            default: false\n        },\n        expandedRows: {\n            type: Array,\n            default: null\n        },\n        expandedRowIcon: {\n            type: String,\n            default: 'pi-chevron-down'\n        },\n        collapsedRowIcon: {\n            type: String,\n            default: 'pi-chevron-right'\n        },\n        rowGroupMode: {\n            type: String,\n            default: null\n        },\n        groupRowsBy: {\n            type: [Array,String],\n            default: null\n        },\n        expandableRowGroups: {\n            type: Boolean,\n            default: false\n        },\n        expandedRowGroups: {\n            type: Array,\n            default: null\n        },\n        stateStorage: {\n            type: String,\n            default: 'session'\n        },\n        stateKey: {\n            type: String,\n            default: null\n        },\n        editMode: {\n            type: String,\n            default: null\n        },\n        editingRows: {\n            type: Array,\n            default: null\n        },\n        rowClass: {\n            type: null,\n            default: null\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        scrollHeight: {\n            type: String,\n            default: null\n        },\n        frozenValue: {\n            type: Array,\n            default: null\n        },\n        frozenWidth: {\n            type: String,\n            default: null\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        virtualRowHeight: {\n            type: Number,\n            default: 28\n        },\n        virtualScrollDelay: {\n            type: Number,\n            default: 150\n        }\n    },\n    data() {\n        return {\n            allChildren: null,\n            d_first: this.first,\n            d_rows: this.rows,\n            d_sortField: this.sortField,\n            d_sortOrder: this.sortOrder,\n            d_multiSortMeta: this.multiSortMeta ? [...this.multiSortMeta] : [],\n            d_selectionKeys: null,\n            d_expandedRowKeys: null,\n            d_columnOrder: null,\n            d_editingRowKeys: null\n        };\n    },\n    rowTouched: false,\n    anchorRowIndex: null,\n    rangeRowIndex: null,\n    documentColumnResizeListener: null,\n    documentColumnResizeEndListener: null,\n    lastResizeHelperX: null,\n    resizeColumnElement: null,\n    columnResizing: false,\n    colReorderIconWidth: null,\n    colReorderIconHeight: null,\n    draggedColumn: null,\n    draggedRowIndex: null,\n    droppedRowIndex: null,\n    rowDragging: null,\n    columnWidthsState: null,\n    tableWidthState: null,\n    columnWidthsRestored: false,\n    virtualScrollTimer: null,\n    watch: {\n        first(newValue) {\n            this.d_first = newValue;\n        },\n        rows(newValue) {\n            this.d_rows = newValue;\n        },\n        sortField(newValue) {\n            this.d_sortField = newValue;\n        },\n        sortOrder(newValue) {\n            this.d_sortOrder = newValue;\n        },\n        multiSortMeta(newValue) {\n            this.d_multiSortMeta = newValue;\n        },\n        selection(newValue) {\n            if (this.dataKey) {\n                this.updateSelectionKeys(newValue);\n            }\n        },\n        expandedRows(newValue) {\n            if (this.dataKey) {\n                this.updateExpandedRowKeys(newValue);\n            }\n        },\n        editingRows(newValue) {\n            if (this.dataKey) {\n                this.updateEditingRowKeys(newValue);\n            }\n        }\n    },\n    beforeMount() {\n        if (this.isStateful()) {\n            this.restoreState();\n        }\n    },\n    mounted() {\n        this.allChildren = this.$children;\n\n        if (this.reorderableColumns) {\n            let columnOrder = [];\n            for (let child of this.allChildren) {\n                if (child.$options._propKeys.indexOf('columnKey') !== -1) {\n                    columnOrder.push(child.columnKey||child.field);\n                }\n            }\n            this.d_columnOrder = columnOrder;\n        }\n    },\n    beforeDestroy() {\n        this.unbindColumnResizeEvents();\n    },\n    updated() {\n        if (this.isStateful()) {\n            this.saveState();\n\n            if (this.resizableColumns && !this.columnWidthsRestored) {\n                this.restoreColumnWidths();\n                this.columnWidthsRestored = true;\n            }\n        }\n    },\n    methods: {\n        onPage(event) {\n            this.d_first = event.first;\n            this.d_rows = event.rows;\n\n            let pageEvent = this.createLazyLoadEvent(event);\n            pageEvent.pageCount = event.pageCount;\n            pageEvent.page = event.page;\n\n            this.$emit('update:first', this.d_first);\n            this.$emit('update:rows', this.d_rows);\n            this.$emit('page', pageEvent);\n        },\n        onColumnHeaderClick(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (column.sortable) {\n                const targetNode = event.target;\n                const columnField = column.sortField || column.field;\n\n                if (DomHandler.hasClass(targetNode, 'p-sortable-column') || DomHandler.hasClass(targetNode, 'p-column-title')\n                    || DomHandler.hasClass(targetNode, 'p-sortable-column-icon') || DomHandler.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\n                    DomHandler.clearSelection();\n\n                    if (this.sortMode === 'single') {\n                        if (this.d_sortField === columnField) {\n                            if (this.removableSort && (this.d_sortOrder * -1 === this.defaultSortOrder)) {\n                                this.d_sortOrder = null;\n                                this.d_sortField = null;\n                            }\n                            else {\n                                this.d_sortOrder = this.d_sortOrder * -1;\n                            }\n                        }\n                        else {\n                            this.d_sortOrder = this.defaultSortOrder;\n                            this.d_sortField = columnField;\n                        }\n\n                        this.$emit('update:sortField', this.d_sortField);\n                        this.$emit('update:sortOrder', this.d_sortOrder);\n                        this.resetPage();\n                    }\n                    else if (this.sortMode === 'multiple') {\n                        let metaKey = event.metaKey || event.ctrlKey;\n                        if (!metaKey) {\n                            this.d_multiSortMeta =  this.d_multiSortMeta.filter(meta => meta.field === columnField);\n                        }\n\n                        this.addMultiSortField(columnField);\n                        this.$emit('update:multiSortMeta', this.d_multiSortMeta);\n                    }\n\n                    this.$emit('sort', this.createLazyLoadEvent(event));\n                }\n            }\n        },\n        sortSingle(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                let value1 = ObjectUtils.resolveFieldData(data1, this.d_sortField);\n                let value2 = ObjectUtils.resolveFieldData(data2, this.d_sortField);\n\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return (this.d_sortOrder * result);\n            });\n\n            return data;\n        },\n        sortMultiple(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                return this.multisortField(data1, data2, 0);\n            });\n\n            return data;\n        },\n        multisortField(data1, data2, index) {\n            const value1 = ObjectUtils.resolveFieldData(data1, this.d_multiSortMeta[index].field);\n            const value2 = ObjectUtils.resolveFieldData(data2, this.d_multiSortMeta[index].field);\n            let result = null;\n\n            if (typeof value1 === 'string' || value1 instanceof String) {\n                if (value1.localeCompare && (value1 !== value2)) {\n                    return (this.d_multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\n                }\n            }\n            else {\n                result = (value1 < value2) ? -1 : 1;\n            }\n\n            if (value1 === value2)  {\n                return (this.d_multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, index + 1)) : 0;\n            }\n\n            return (this.d_multiSortMeta[index].order * result);\n        },\n        addMultiSortField(field) {\n            let index =  this.d_multiSortMeta.findIndex(meta => meta.field === field);\n\n            if (index >= 0) {\n                if (this.removableSort && (this.d_multiSortMeta[index].order * -1 === this.defaultSortOrder))\n                    this.d_multiSortMeta.splice(index, 1);\n                else\n                    this.d_multiSortMeta[index] = {field: field, order: this.d_multiSortMeta[index].order * -1};\n            }\n            else {\n                this.d_multiSortMeta.push({field: field, order: this.defaultSortOrder});\n            }\n\n            this.d_multiSortMeta = [...this.d_multiSortMeta];\n        },\n        filter(data) {\n            let filteredValue = [];\n\n            for(let i = 0; i < data.length; i++) {\n                let localMatch = true;\n                let globalMatch = false;\n\n                for(let j = 0; j < this.columns.length; j++) {\n                    let col = this.columns[j];\n                    let columnField = col.filterField || col.field;\n\n                    //local\n                    if (Object.prototype.hasOwnProperty.call(this.filters, columnField)) {\n                        let filterValue = this.filters[columnField];\n                        let dataFieldValue = ObjectUtils.resolveFieldData(data[i], columnField);\n                        let filterConstraint = col.filterMatchMode === 'custom' ? col.filterFunction : FilterUtils[col.filterMatchMode];\n                        if (!filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n                            localMatch = false;\n                        }\n\n                        if (!localMatch) {\n                            break;\n                        }\n                    }\n\n                    if (!col.excludeGlobalFilter && this.hasGlobalFilter && !globalMatch) {\n                        globalMatch = FilterUtils.contains(ObjectUtils.resolveFieldData(data[i], columnField), this.filters['global'], this.filterLocale);\n                    }\n                }\n\n                let matches = localMatch;\n                if(this.hasGlobalFilter) {\n                    matches = localMatch && globalMatch;\n                }\n\n                if(matches) {\n                    filteredValue.push(data[i]);\n                }\n            }\n\n            if (filteredValue.length === data.length) {\n                filteredValue = data;\n            }\n\n            let filterEvent = this.createLazyLoadEvent(event);\n            filterEvent.filteredValue = filteredValue;\n            this.$emit('filter', filterEvent);\n\n            return filteredValue;\n        },\n        onRowClick(e) {\n            const event = e.originalEvent;\n            const target = event.target;\n            const targetNode = target.nodeName;\n            const parentNode = target.parentElement && target.parentElement.nodeName;\n\n            if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n                parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n                (DomHandler.hasClass(target, 'p-clickable'))) {\n                return;\n            }\n\n            this.$emit('row-click', e);\n\n            if (this.selectionMode) {\n                const rowData = e.data;\n                const rowIndex = e.index;\n\n                if (this.isMultipleSelectionMode() && event.shiftKey && this.anchorRowIndex != null) {\n                    DomHandler.clearSelection();\n                    this.rangeRowIndex = rowIndex;\n                    this.selectRange(event);\n                }\n                else {\n                    const selected = this.isSelected(rowData);\n                    const metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                    this.anchorRowIndex = rowIndex;\n                    this.rangeRowIndex = rowIndex;\n\n                    if (metaSelection) {\n                        let metaKey = event.metaKey || event.ctrlKey;\n\n                        if (selected && metaKey) {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', null);\n                            }\n                            else {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val,i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                        else {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', rowData);\n                            }\n                            else if (this.isMultipleSelectionMode()) {\n                                let _selection = metaKey ? (this.selection || []) : [];\n                                _selection = [..._selection, rowData];\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                    }\n                    else {\n                        if (this.selectionMode === 'single') {\n                            if (selected) {\n                                this.$emit('update:selection', null);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                this.$emit('update:selection', rowData);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                        else if (this.selectionMode === 'multiple') {\n                            if (selected) {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                const _selection = this.selection ? [...this.selection, rowData] : [rowData];\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.rowTouched = false;\n        },\n        onRowRightClick(event) {\n            DomHandler.clearSelection();\n            event.originalEvent.target.focus();\n\n            this.$emit('update:contextMenuSelection', event.data);\n            this.$emit('row-contextmenu', event);\n        },\n        onRowTouchEnd() {\n            this.rowTouched = true;\n        },\n        onRowKeyDown(e) {\n            const event = e.originalEvent;\n            const rowData = e.data;\n            const rowIndex = e.index;\n\n            if (this.selectionMode) {\n                const row = event.target;\n\n                switch (event.which) {\n                    //down arrow\n                    case 40:\n                        var nextRow = this.findNextSelectableRow(row);\n                        if (nextRow) {\n                            nextRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //up arrow\n                    case 38:\n                        var prevRow = this.findPrevSelectableRow(row);\n                        if (prevRow) {\n                            prevRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //enter\n                    case 13:\n                        this.onRowClick({originalEvent: event, data: rowData, index: rowIndex});\n                    break;\n\n                    default:\n                        //no op\n                    break;\n                }\n            }\n        },\n        findNextSelectableRow(row) {\n            let nextRow = row.nextElementSibling;\n            if (nextRow) {\n                if (DomHandler.hasClass(nextRow, 'p-datatable-row'))\n                    return nextRow;\n                else\n                    return this.findNextSelectableRow(nextRow);\n            }\n            else {\n                return null;\n            }\n        },\n        findPrevSelectableRow(row) {\n            let prevRow = row.previousElementSibling;\n            if (prevRow) {\n                if (DomHandler.hasClass(prevRow, 'p-datatable-row'))\n                    return prevRow;\n                else\n                    return this.findPrevSelectableRow(prevRow);\n            }\n            else {\n                return null;\n            }\n        },\n        toggleRowWithRadio(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                this.$emit('update:selection', null);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n            else {\n                this.$emit('update:selection', rowData);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n        },\n        toggleRowWithCheckbox(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                const selectionIndex = this.findIndexInSelection(rowData);\n                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                this.$emit('update:selection', _selection);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n            else {\n                let _selection = this.selection ? [...this.selection] : [];\n                _selection = [..._selection, rowData];\n                this.$emit('update:selection', _selection);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n        },\n        toggleRowsWithCheckbox(event) {\n            const processedData = this.processedData;\n            const checked = this.allRowsSelected;\n            const _selection = checked ? [] : (processedData ? [...processedData] : [...this.value]);\n            this.$emit('update:selection', _selection);\n\n            if (checked)\n                this.$emit('row-unselect-all', {originalEvent: event});\n            else\n                this.$emit('row-select-all', {originalEvent: event, data: _selection});\n        },\n        isSingleSelectionMode() {\n            return this.selectionMode === 'single';\n        },\n        isMultipleSelectionMode() {\n            return this.selectionMode === 'multiple';\n        },\n        isSelected(rowData) {\n            if (rowData && this.selection) {\n                if (this.dataKey) {\n                    return this.d_selectionKeys ? this.d_selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n                }\n                else {\n                    if (this.selection instanceof Array)\n                        return this.findIndexInSelection(rowData) > -1;\n                    else\n                        return this.equals(rowData, this.selection);\n                }\n            }\n\n            return false;\n        },\n        findIndexInSelection(rowData) {\n            return this.findIndex(rowData, this.selection);\n        },\n        findIndex(rowData, collection) {\n            let index = -1;\n            if (collection && collection.length) {\n                for (let i = 0; i < collection.length; i++) {\n                    if (this.equals(rowData, collection[i])) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n\n            return index;\n        },\n        updateSelectionKeys(selection) {\n            this.d_selectionKeys = {};\n            if (Array.isArray(selection)) {\n                for (let data of selection) {\n                    this.d_selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_selectionKeys[String(ObjectUtils.resolveFieldData(selection, this.dataKey))] = 1;\n            }\n        },\n        updateExpandedRowKeys(expandedRows) {\n            if (expandedRows && expandedRows.length) {\n                this.d_expandedRowKeys = {};\n                for (let data of expandedRows) {\n                    this.d_expandedRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_expandedRowKeys = null;\n            }\n        },\n        updateEditingRowKeys(editingRows) {\n            if (editingRows && editingRows.length) {\n                this.d_editingRowKeys = {};\n                for (let data of editingRows) {\n                    this.d_editingRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_editingRowKeys = null;\n            }\n        },\n        equals(data1, data2) {\n            return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n        },\n        selectRange(event) {\n            let rangeStart, rangeEnd;\n\n            if (this.rangeRowIndex > this.anchorRowIndex) {\n                rangeStart = this.anchorRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n            else if(this.rangeRowIndex < this.anchorRowIndex) {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.anchorRowIndex;\n            }\n            else {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n\n            if (this.lazy && this.paginator) {\n                rangeStart -= this.first;\n                rangeEnd -= this.first;\n            }\n\n            const value = this.processedData;\n            let _selection = [];\n            for(let i = rangeStart; i <= rangeEnd; i++) {\n                let rangeRowData = value[i];\n                _selection.push(rangeRowData);\n                this.$emit('row-select', {originalEvent: event, data: rangeRowData, type: 'row'});\n            }\n\n            this.$emit('update:selection', _selection);\n        },\n        exportCSV(options) {\n            let data = this.processedData;\n            let csv = '\\ufeff';\n\n            if (options && options.selectionOnly) {\n                data = this.selection || [];\n            }\n\n            //headers\n            for (let i = 0; i < this.columns.length; i++) {\n                let column = this.columns[i];\n                if (column.exportable !== false && column.field) {\n                    csv += '\"' + (column.header || column.field) + '\"';\n\n                    if (i < (this.columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n\n            //body\n            data.forEach(record => {\n                csv += '\\n';\n                for (let i = 0; i < this.columns.length; i++) {\n                    let column = this.columns[i];\n                    if (column.exportable !== false && column.field) {\n                        let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n                        if (cellData != null) {\n                            if (this.exportFunction) {\n                                cellData = this.exportFunction({\n                                    data: cellData,\n                                    field: column.field\n                                });\n                            }\n                            else\n                                cellData = String(cellData).replace(/\"/g, '\"\"');\n                        }\n                        else\n                            cellData = '';\n\n\n                        csv += '\"' + cellData + '\"';\n\n                        if (i < (this.columns.length - 1)) {\n                            csv += this.csvSeparator;\n                        }\n                    }\n                }\n            });\n\n            let blob = new Blob([csv], {\n                type: 'text/csv;charset=utf-8;'\n            });\n\n            if (window.navigator.msSaveOrOpenBlob) {\n                navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n            }\n            else {\n                let link = document.createElement(\"a\");\n                link.style.display = 'none';\n                document.body.appendChild(link);\n                if (link.download !== undefined) {\n                    link.setAttribute('href', URL.createObjectURL(blob));\n                    link.setAttribute('download', this.exportFilename + '.csv');\n                    link.click();\n                }\n                else {\n                    csv = 'data:text/csv;charset=utf-8,' + csv;\n                    window.open(encodeURI(csv));\n                }\n                document.body.removeChild(link);\n            }\n        },\n        resetPage() {\n            this.d_first = 0;\n            this.$emit('update:first', this.d_first);\n        },\n        onColumnResizeStart(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            this.resizeColumnElement = event.target.parentElement;\n            this.columnResizing = true;\n            this.lastResizeHelperX = (event.pageX - containerLeft + this.$el.scrollLeft);\n\n            this.bindColumnResizeEvents();\n        },\n        onColumnResize(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            DomHandler.addClass(this.$el, 'p-unselectable-text');\n            this.$refs.resizeHelper.style.height = this.$el.offsetHeight + 'px';\n            this.$refs.resizeHelper.style.top = 0 + 'px';\n            this.$refs.resizeHelper.style.left = (event.pageX - containerLeft + this.$el.scrollLeft) + 'px';\n\n            this.$refs.resizeHelper.style.display = 'block';\n        },\n        onColumnResizeEnd() {\n            let delta = this.$refs.resizeHelper.offsetLeft - this.lastResizeHelperX;\n            let columnWidth = this.resizeColumnElement.offsetWidth;\n            let newColumnWidth = columnWidth + delta;\n            let minWidth = this.resizeColumnElement.style.minWidth||15;\n\n            if (columnWidth + delta > parseInt(minWidth, 10)) {\n                if (this.columnResizeMode === 'fit') {\n                    let nextColumn = this.resizeColumnElement.nextElementSibling;\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n                    if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                        if(this.scrollable) {\n                            const scrollableView = this.findParentScrollableView(this.resizeColumnElement);\n                            const scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-body-table');\n                            const scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                            const scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                            const resizeColumnIndex = DomHandler.index(this.resizeColumnElement);\n\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                            if(nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n                else if (this.columnResizeMode === 'expand') {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(this.resizeColumnElement, newColumnWidth, delta);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.$refs.table.offsetWidth + delta + 'px';\n                        this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                    }\n                }\n\n                this.$emit('column-resize-end', {\n                    element: this.resizeColumnElement,\n                    delta: delta\n                });\n            }\n\n            this.$refs.resizeHelper.style.display = 'none';\n            this.resizeColumn = null;\n            DomHandler.removeClass(this.$el, 'p-unselectable-text');\n\n            this.unbindColumnResizeEvents();\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        },\n        resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n            if(table) {\n                let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n                if(colGroup) {\n                    let col = colGroup.children[resizeColumnIndex];\n                    let nextCol = col.nextElementSibling;\n                    col.style.width = newColumnWidth + 'px';\n\n                    if (nextCol && nextColumnWidth) {\n                        nextCol.style.width = nextColumnWidth + 'px';\n                    }\n                }\n                else {\n                    throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\n                }\n            }\n        },\n        bindColumnResizeEvents() {\n            if (!this.documentColumnResizeListener) {\n                this.documentColumnResizeListener = document.addEventListener('mousemove', () => {\n                    if(this.columnResizing) {\n                        this.onColumnResize(event);\n                    }\n                });\n            }\n\n            if (!this.documentColumnResizeEndListener) {\n                this.documentColumnResizeEndListener = document.addEventListener('mouseup', () => {\n                    if(this.columnResizing) {\n                        this.columnResizing = false;\n                        this.onColumnResizeEnd();\n                    }\n                });\n            }\n\n        },\n        unbindColumnResizeEvents() {\n            if (this.documentColumnResizeListener) {\n                document.removeEventListener('document', this.documentColumnResizeListener);\n                this.documentColumnResizeListener = null;\n            }\n\n            if (this.documentColumnResizeEndListener) {\n                document.removeEventListener('document', this.documentColumnResizeEndListener);\n                 this.documentColumnResizeEndListener = null;\n            }\n        },\n        onColumnHeaderMouseDown(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (this.reorderableColumns && column.reorderableColumn) {\n                if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n                    event.currentTarget.draggable = false;\n                else\n                    event.currentTarget.draggable = true;\n            }\n        },\n        onColumnHeaderDragStart(event) {\n            if (this.columnResizing) {\n                event.preventDefault();\n                return;\n            }\n\n            this.colReorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.$refs.reorderIndicatorUp);\n            this.colReorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.$refs.reorderIndicatorUp);\n\n            this.draggedColumn = this.findParentHeader(event.target);\n            event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\n        },\n        onColumnHeaderDragOver(event) {\n            let dropHeader = this.findParentHeader(event.target);\n            if(this.reorderableColumns && this.draggedColumn && dropHeader) {\n                event.preventDefault();\n                let containerOffset = DomHandler.getOffset(this.$el);\n                let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n                if (this.draggedColumn !== dropHeader) {\n                    let targetLeft =  dropHeaderOffset.left - containerOffset.left;\n                    let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                    this.$refs.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.colReorderIconHeight - 1) + 'px';\n                    this.$refs.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                    if(event.pageX > columnCenter) {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = 1;\n                    }\n                    else {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = -1;\n                    }\n\n                    this.$refs.reorderIndicatorUp.style.display = 'block';\n                    this.$refs.reorderIndicatorDown.style.display = 'block';\n                }\n            }\n        },\n        onColumnHeaderDragLeave(event) {\n            if(this.reorderableColumns && this.draggedColumn) {\n                event.preventDefault();\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n            }\n        },\n        onColumnHeaderDrop(event) {\n            event.preventDefault();\n            if (this.draggedColumn) {\n                let dragIndex = DomHandler.index(this.draggedColumn);\n                let dropIndex = DomHandler.index(this.findParentHeader(event.target));\n                let allowDrop = (dragIndex !== dropIndex);\n                if (allowDrop && ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dragIndex - dropIndex === 1 && this.dropPosition === 1))) {\n                    allowDrop = false;\n                }\n\n                if (allowDrop) {\n                    ObjectUtils.reorderArray(this.d_columnOrder, dragIndex, dropIndex);\n\n                    this.$emit('column-reorder', {\n                        originalEvent: event,\n                        dragIndex: dragIndex,\n                        dropIndex: dropIndex\n                    });\n                }\n\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n                this.draggedColumn.draggable = false;\n                this.draggedColumn = null;\n                this.dropPosition = null;\n            }\n        },\n        findParentHeader(element) {\n            if(element.nodeName === 'TH') {\n                return element;\n            }\n            else {\n                let parent = element.parentElement;\n                while(parent.nodeName !== 'TH') {\n                    parent = parent.parentElement;\n                    if (!parent) break;\n                }\n                return parent;\n            }\n        },\n        findParentScrollableView(column) {\n            if (column) {\n                let parent = column.parentElement;\n                while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n                    parent = parent.parentElement;\n                }\n\n                return parent;\n            }\n            else {\n                return null;\n            }\n        },\n        findColumnByKey(columns, key) {\n            if(columns && columns.length) {\n                for(let i = 0; i < columns.length; i++) {\n                    let child = columns[i];\n                    if(child.columnKey === key || child.field === key) {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        resizeScrollableTable(column, newColumnWidth, delta) {\n            const scrollableView = column ? this.findParentScrollableView(column) : this.$el;\n            const scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body');\n            const scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n            const scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n            const scrollableBodyTable = DomHandler.findSingle(scrollableBody, 'table.p-datatable-scrollable-body-table');\n            const scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n            const scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n\n            const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n            const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n            const isContainerInViewport = this.$el.offsetWidth >= parseFloat(scrollableBodyTableWidth);\n\n            let setWidth = (container, table, width, isContainerInViewport) => {\n                if (container && table) {\n                    container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\n                    table.style.width = width + 'px';\n                }\n            };\n\n            setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n            setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n            setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n            if (column) {\n                let resizeColumnIndex = DomHandler.index(column);\n\n                this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n            }\n        },\n        onRowMouseDown(event) {\n            if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n                event.currentTarget.draggable = true;\n            else\n                event.currentTarget.draggable = false;\n        },\n        onRowDragStart(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n            this.rowDragging = true;\n            this.draggedRowIndex = index;\n            event.dataTransfer.setData('text', 'b');    // For firefox\n        },\n        onRowDragOver(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n\n            if (this.rowDragging && this.draggedRowIndex !== index) {\n                let rowElement = event.currentTarget;\n                let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n                let pageY = event.pageY;\n                let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n                let prevRowElement = rowElement.previousElementSibling;\n\n                if (pageY < rowMidY) {\n                    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n\n                    this.droppedRowIndex = index;\n                    if (prevRowElement)\n                        DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                }\n                else {\n                    if (prevRowElement)\n                        DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n\n                    this.droppedRowIndex = index + 1;\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n                }\n\n                event.preventDefault();\n            }\n        },\n        onRowDragLeave(event) {\n            let rowElement = event.currentTarget;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (prevRowElement) {\n                DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n            }\n\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n        },\n        onRowDragEnd(event) {\n            this.rowDragging = false;\n            this.draggedRowIndex = null;\n            this.droppedRowIndex = null;\n            event.currentTarget.draggable = false;\n        },\n        onRowDrop(event) {\n            if (this.droppedRowIndex != null) {\n                let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n                let processedData = [...this.processedData];\n                ObjectUtils.reorderArray(processedData, this.draggedRowIndex, dropIndex);\n\n                this.$emit('row-reorder', {\n                    originalEvent: event,\n                    dragIndex: this.draggedRowIndex,\n                    dropIndex: dropIndex,\n                    value: processedData\n                });\n            }\n\n            //cleanup\n            this.onRowDragLeave(event);\n            this.onRowDragEnd(event);\n            event.preventDefault();\n        },\n        toggleRow(event) {\n            let rowData = event.data;\n            let expanded;\n            let expandedRowIndex;\n            let _expandedRows = this.expandedRows ? [...this.expandedRows] : [];\n\n            if (this.dataKey) {\n                expanded = this.d_expandedRowKeys ? this.d_expandedRowKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n            }\n            else {\n                expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                expanded = expandedRowIndex > -1;\n            }\n\n            if (expanded) {\n                if (expandedRowIndex == null) {\n                    expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                }\n                _expandedRows.splice(expandedRowIndex, 1);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-collapse', event);\n            }\n            else {\n                _expandedRows.push(rowData);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-expand', event);\n            }\n        },\n        toggleRowGroup(e) {\n            const event = e.originalEvent;\n            const data = e.data;\n            const groupFieldValue = ObjectUtils.resolveFieldData(data, this.groupRowsBy);\n            let _expandedRowGroups = this.expandedRowGroups ? [...this.expandedRowGroups] : [];\n\n            if (this.isRowGroupExpanded(data)) {\n                _expandedRowGroups = _expandedRowGroups.filter(group => group !== groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-collapse', {originalEvent: event, data: groupFieldValue});\n            }\n            else {\n                _expandedRowGroups.push(groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-expand', {originalEvent: event, data: groupFieldValue});\n            }\n        },\n        isRowGroupExpanded(rowData) {\n            if (this.expandableRowGroups && this.expandedRowGroups) {\n                let groupFieldValue = ObjectUtils.resolveFieldData(rowData, this.groupRowsBy);\n                return this.expandedRowGroups.indexOf(groupFieldValue) > -1;\n            }\n            return false;\n        },\n        isStateful() {\n            return this.stateKey != null;\n        },\n        getStorage() {\n            switch(this.stateStorage) {\n                case 'local':\n                    return window.localStorage;\n\n                case 'session':\n                    return window.sessionStorage;\n\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        },\n        saveState() {\n            const storage = this.getStorage();\n            let state = {};\n\n            if (this.paginator) {\n                state.first = this.d_first;\n                state.rows = this.d_rows;\n            }\n\n            if (this.d_sortField) {\n                state.sortField = this.d_sortField;\n                state.sortOrder = this.d_sortOrder;\n            }\n\n            if (this.d_multiSortMeta) {\n                state.multiSortMeta = this.d_multiSortMeta;\n            }\n\n            if (this.hasFilters) {\n                state.filters = this.filters;\n            }\n\n            if (this.resizableColumns) {\n                this.saveColumnWidths(state);\n            }\n\n            if (this.reorderableColumns) {\n                state.columnOrder = this.d_columnOrder;\n            }\n\n            if (this.expandedRows) {\n                state.expandedRows = this.expandedRows;\n                state.expandedRowKeys = this.d_expandedRowKeys;\n            }\n\n            if (this.expandedRowGroups) {\n                state.expandedRowGroups = this.expandedRowGroups;\n            }\n\n            if (this.selection) {\n                state.selection = this.selection;\n                state.selectionKeys = this.d_selectionKeys;\n            }\n\n            if (Object.keys(state).length) {\n                storage.setItem(this.stateKey, JSON.stringify(state));\n            }\n        },\n        restoreState() {\n            const storage = this.getStorage();\n            const stateString = storage.getItem(this.stateKey);\n\n            if (stateString) {\n                let restoredState = JSON.parse(stateString);\n\n                if (this.paginator) {\n                    this.d_first = restoredState.first;\n                    this.d_rows = restoredState.rows;\n                }\n\n                if (restoredState.sortField) {\n                    this.d_sortField = restoredState.sortField;\n                    this.d_sortOrder = restoredState.sortOrder;\n                }\n\n                if (restoredState.multiSortMeta) {\n                    this.d_multiSortMeta = restoredState.multiSortMeta;\n                }\n\n                if (restoredState.filters) {\n                    this.$emit('update:filters', restoredState.filters);\n                }\n\n                if (this.resizableColumns) {\n                    this.columnWidthsState = restoredState.columnWidths;\n                    this.tableWidthState = restoredState.tableWidth;\n                }\n\n                if (this.reorderableColumns) {\n                    this.d_columnOrder = restoredState.columnOrder;\n                }\n\n                if (restoredState.expandedRows) {\n                    this.d_expandedRowKeys = restoredState.expandedRowKeys;\n                    this.$emit('update:expandedRows', restoredState.expandedRows);\n                }\n\n                if (restoredState.expandedRowGroups) {\n                    this.$emit('update:expandedRowGroups', restoredState.expandedRowGroups);\n                }\n\n                if (restoredState.selection) {\n                    this.d_selectionKeys = restoredState.d_selectionKeys;\n                    this.$emit('update:selection', restoredState.selection);\n                }\n            }\n        },\n        saveColumnWidths(state) {\n            let widths = [];\n            let headers = DomHandler.find(this.$el, '.p-datatable-thead > tr > th');\n            headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n            state.columnWidths = widths.join(',');\n\n            if (this.columnResizeMode === 'expand') {\n                state.tableWidth = this.scrollable ? DomHandler.findSingle(this.$el, '.p-datatable-scrollable-header-table').style.width :\n                                                    DomHandler.getOuterWidth(this.$refs.table) + 'px';\n            }\n        },\n        restoreColumnWidths() {\n            if (this.columnWidthsState) {\n                let widths = this.columnWidthsState.split(',');\n\n                if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(null, this.tableWidthState, 0);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.tableWidthState;\n                        this.$el.style.width = this.tableWidthState;\n                    }\n                }\n\n                if (this.scrollable) {\n                    let headerCols = DomHandler.find(this.$el, '.p-datatable-scrollable-header-table > colgroup > col');\n                    let bodyCols = DomHandler.find(this.$el, '.p-datatable-scrollable-body-table > colgroup > col');\n\n                    headerCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                    bodyCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                }\n                else {\n                    let headers = DomHandler.find(this.$refs.table, '.p-datatable-thead > tr > th');\n                    headers.forEach((header, index) => header.style.width = widths[index] + 'px');\n                }\n\n\n            }\n        },\n        onCellEditInit(event) {\n            this.$emit('cell-edit-init', event);\n        },\n        onCellEditComplete(event) {\n            this.$emit('cell-edit-complete', event);\n        },\n        onCellEditCancel(event) {\n            this.$emit('cell-edit-cancel', event);\n        },\n        onRowEditInit(event) {\n            let _editingRows = this.editingRows ? [...this.editingRows] : [];\n            _editingRows.push(event.data);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-init', event);\n        },\n        onRowEditSave(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-save', event);\n        },\n        onRowEditCancel(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-cancel', event);\n        },\n        onVirtualScroll(event) {\n            if(this.virtualScrollTimer) {\n                clearTimeout(this.virtualScrollTimer);\n            }\n\n            this.virtualScrollTimer = setTimeout(() => {\n                this.$emit('virtual-scroll', {\n                        first: (event.page - 1) * this.rows,\n                        rows: this.rows * 2\n                    });\n                }, this.virtualScrollDelay);\n        },\n        createLazyLoadEvent(event) {\n            let filterMatchModes;\n            if (this.hasFilters) {\n                filterMatchModes = {};\n                this.columns.forEach(col => {\n                    if (col.field) {\n                        filterMatchModes[col.field] = col.filterMatchMode;\n                    }\n                });\n            }\n\n            return {\n                originalEvent: event,\n                first: this.d_first,\n                rows: this.d_rows,\n                sortField: this.d_sortField,\n                sortOrder: this.d_sortOrder,\n                multiSortMeta: this.d_multiSortMeta,\n                filters: this.filters,\n                filterMatchModes: filterMatchModes\n            };\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-datatable p-component', {\n                    'p-datatable-hoverable-rows': (this.rowHover || this.selectionMode),\n                    'p-datatable-auto-layout': this.autoLayout,\n                    'p-datatable-resizable': this.resizableColumns,\n                    'p-datatable-resizable-fit': this.resizableColumns && this.columnResizeMode === 'fit',\n                    'p-datatable-scrollable': this.scrollable,\n                    'p-datatable-virtual-scrollable': this.virtualScroll\n                }\n            ];\n        },\n        columns() {\n            let columns = [];\n\n            if (this.allChildren) {\n                columns = this.allChildren.filter(child => child.$options._propKeys.indexOf('columnKey') !== -1);\n\n                if (this.reorderableColumns && this.d_columnOrder) {\n                    let orderedColumns = [];\n                    for (let columnKey of this.d_columnOrder) {\n                        let column = this.findColumnByKey(columns, columnKey);\n                        if (column) {\n                            orderedColumns.push(column);\n                        }\n                    }\n\n                    return [...orderedColumns, ...columns.filter((item) => {\n                        return orderedColumns.indexOf(item) < 0;\n                    })];\n                }\n            }\n            return columns;\n        },\n        frozenColumns() {\n            let frozenColumns = [];\n\n            for(let col of this.columns) {\n                if(col.frozen) {\n                    frozenColumns = frozenColumns||[];\n                    frozenColumns.push(col);\n                }\n            }\n\n            return frozenColumns;\n        },\n        scrollableColumns() {\n            let scrollableColumns = [];\n\n            for(let col of this.columns) {\n                if(!col.frozen) {\n                    scrollableColumns = scrollableColumns||[];\n                    scrollableColumns.push(col);\n                }\n            }\n\n            return scrollableColumns;\n        },\n        hasFrozenColumns() {\n            return this.frozenColumns.length > 0;\n        },\n        headerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'header') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenHeaderColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenheader') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        footerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'footer') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenFooterColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenfooter') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        processedData() {\n            if (this.lazy) {\n                return this.value;\n            }\n            else {\n                if (this.value && this.value.length) {\n                    let data = this.value;\n\n                    if (this.sorted) {\n                        if(this.sortMode === 'single')\n                            data = this.sortSingle(data);\n                        else if(this.sortMode === 'multiple')\n                            data = this.sortMultiple(data);\n                    }\n\n                    if (this.hasFilters) {\n                        data = this.filter(data);\n                    }\n\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            }\n        },\n        dataToRender() {\n            const data = this.processedData;\n\n            if (data && this.paginator) {\n                const first = this.lazy ? 0 : this.d_first;\n                return data.slice(first, first + this.d_rows);\n            }\n            else {\n                return data;\n            }\n        },\n        totalRecordsLength() {\n            if (this.lazy) {\n                return this.totalRecords;\n            }\n            else {\n                const data = this.processedData;\n                return data ? data.length : 0;\n            }\n        },\n        empty() {\n            const data = this.processedData;\n            return (!data || data.length === 0);\n        },\n        paginatorTop() {\n            return this.paginator && (this.paginatorPosition !== 'bottom' || this.paginatorPosition === 'both');\n        },\n        paginatorBottom() {\n            return this.paginator && (this.paginatorPosition !== 'top' || this.paginatorPosition === 'both');\n        },\n        sorted() {\n            return this.d_sortField || (this.d_multiSortMeta && this.d_multiSortMeta.length > 0);\n        },\n        hasFilters() {\n            return this.filters && Object.keys(this.filters).length > 0 && this.filters.constructor === Object;\n        },\n        hasGlobalFilter() {\n            return this.filters && Object.prototype.hasOwnProperty.call(this.filters, 'global');\n        },\n        loadingIconClass() {\n            return ['p-datatable-loading-icon pi-spin', this.loadingIcon];\n        },\n        allRowsSelected() {\n            const val = this.processedData;\n            return (val && val.length > 0 && this.selection && this.selection.length > 0 && this.selection.length === val.length);\n        }\n    },\n    components: {\n        'DTPaginator': Paginator,\n        'DTScrollableView': ScrollableView,\n        'DTTableHeader': TableHeader,\n        'DTTableBody': TableBody,\n        'DTTableFooter': TableFooter,\n    }\n}\n</script>\n\n<style>\n.p-datatable {\n    position: relative;\n}\n\n.p-datatable table {\n    border-collapse: collapse;\n    width: 100%;\n    table-layout: fixed;\n}\n\n.p-datatable .p-datatable-thead > tr > th,\n.p-datatable .p-datatable-tbody > tr > td,\n.p-datatable .p-datatable-tfoot > tr > td {\n    padding: .25em .5em;\n}\n\n.p-datatable .p-column-title {\n    user-select: none;\n    vertical-align: middle;\n}\n\n.p-datatable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-datatable .p-sortable-column-icon {\n    vertical-align: middle;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper > table {\n    table-layout: auto;\n}\n\n.p-datatable-hoverable-rows .p-datatable-tbody > tr.p-highlight {\n    cursor: pointer;\n}\n\n/* Sections */\n.p-datatable-header,\n.p-datatable-footer {\n    padding: .25em .5em;\n    text-align: center;\n    font-weight: bold;\n}\n\n.p-datatable-header {\n    border-bottom: 0 none;\n}\n\n.p-datatable-footer {\n    border-top: 0 none;\n}\n\n/* Paginator */\n.p-datatable .p-paginator-top {\n    border-bottom: 0 none;\n}\n\n.p-datatable .p-paginator-bottom {\n    border-top: 0 none;\n}\n\n/* Scrollable */\n.p-datatable-scrollable-wrapper {\n    position: relative;\n}\n.p-datatable-scrollable-header,\n.p-datatable-scrollable-footer {\n    overflow: hidden;\n    border: 0 none;\n}\n\n.p-datatable-scrollable-body {\n    overflow: auto;\n    position: relative;\n}\n\n.p-datatable-scrollable-body > table > .p-datatable-tbody > tr:first-child > td {\n    border-top: 0 none;\n}\n\n.p-datatable-virtual-table {\n    position: absolute;\n}\n\n/* Frozen Columns */\n.p-datatable-frozen-view .p-datatable-scrollable-body {\n    overflow: hidden;\n}\n\n.p-datatable-frozen-view > .p-datatable-scrollable-body > table > .p-datatable-tbody > tr > td:last-child {\n    border-right: 0 none;\n}\n\n.p-datatable-unfrozen-view {\n    position: absolute;\n    top: 0px;\n}\n\n/* Filter */\n.p-column-filter {\n    width: 100%;\n}\n\n/* Resizable */\n.p-datatable-resizable > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-resizable .p-datatable-thead > tr > th,\n.p-datatable-resizable .p-datatable-tfoot > tr > td,\n.p-datatable-resizable .p-datatable-tbody > tr > td {\n    overflow: hidden;\n}\n\n.p-datatable-resizable .p-resizable-column {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer {\n    display: none;\n}\n\n.p-datatable .p-column-resizer {\n    display: block;\n    position: absolute !important;\n    top: 0;\n    right: 0;\n    margin: 0;\n    width: .5em;\n    height: 100%;\n    padding: 0px;\n    cursor:col-resize;\n    border: 1px solid transparent;\n}\n\n.p-datatable .p-column-resizer-helper {\n    width: 1px;\n    position: absolute;\n    z-index: 10;\n    display: none;\n}\n\n/* Edit */\n.p-datatable .p-datatable-tbody > tr > td.p-cell-editing .p-component {\n    width: 100%;\n}\n\n/* Reorder */\n.p-datatable-reorder-indicator-up,\n.p-datatable-reorder-indicator-down {\n    position: absolute;\n    display: none;\n}\n\n/* Loader */\n.p-datatable .p-datatable-loading-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=10)\";\n    opacity: 0.1;\n    z-index: 1;\n}\n\n.p-datatable .p-datatable-loading-content {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    z-index: 2;\n    margin-top: -1em;\n    margin-left: -1em;\n}\n\n.p-datatable .p-datatable-loading-icon {\n    font-size: 2em;\n}\n</style>\n"],"sourceRoot":"node_modules/primevue/components/datatable"}]}